{"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"paths":["\/documentation\/swiftgodot\/os\/execute(path:arguments:output:readstderr:openconsole:)"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"execute"},{"kind":"text","text":"("},{"text":"path","kind":"externalParam"},{"kind":"text","text":": "},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"arguments"},{"text":": ","kind":"text"},{"text":"PackedStringArray","kind":"typeIdentifier","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PackedStringArray","preciseIdentifier":"s:10SwiftGodot17PackedStringArrayC"},{"text":", ","kind":"text"},{"text":"output","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"GArray","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot6GArrayC","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GArray"},{"text":" = GArray (), ","kind":"text"},{"kind":"externalParam","text":"readStderr"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":" = false, ","kind":"text"},{"kind":"externalParam","text":"openConsole"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":" = false) -> "},{"kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"}],"languages":["swift"]}]},{"content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"If an ","type":"text"},{"type":"codeVoice","code":"output"},{"type":"text","text":" array is provided, the complete shell output of the process is appended to "},{"code":"output","type":"codeVoice"},{"type":"text","text":" as a single "},{"code":"String","type":"codeVoice"},{"type":"text","text":" element. If "},{"type":"codeVoice","code":"readStderr"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"true"},{"text":", the output to the standard error stream is also appended to the array.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"On Windows, if "},{"code":"openConsole","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"true","type":"codeVoice"},{"text":" and the process is a console app, a new terminal window is opened.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method returns the exit code of the command, or "},{"type":"codeVoice","code":"-1"},{"type":"text","text":" if the process fails to execute."}]},{"type":"aside","name":"Note","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The main thread will be blocked until the executed command terminates. Use "},{"isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Thread","type":"reference"},{"text":" to create a separate thread that will not block the main thread, or use ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/createProcess(path:arguments:openConsole:)","isActive":true},{"type":"text","text":" to create a completely independent process."}]}]},{"type":"paragraph","inlineContent":[{"text":"For example, to retrieve a list of the working directoryâ€™s contents:","type":"text"}]},{"inlineContent":[{"text":"If you wish to access a shell built-in or execute a composite command, a platform-specific shell can be invoked. For example:","type":"text"}],"type":"paragraph"},{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"This method is implemented on Android, Linux, macOS, and Windows.","type":"text"}]}],"style":"note","name":"Note"},{"name":"Note","content":[{"inlineContent":[{"text":"To execute a Windows command interpreter built-in command, specify ","type":"text"},{"type":"codeVoice","code":"cmd.exe"},{"type":"text","text":" in "},{"type":"codeVoice","code":"path"},{"text":", ","type":"text"},{"code":"\/c","type":"codeVoice"},{"text":" as the first argument, and the desired command as the second argument.","type":"text"}],"type":"paragraph"}],"type":"aside","style":"note"},{"name":"Note","style":"note","type":"aside","content":[{"inlineContent":[{"type":"text","text":"To execute a PowerShell built-in command, specify "},{"code":"powershell.exe","type":"codeVoice"},{"text":" in ","type":"text"},{"type":"codeVoice","code":"path"},{"text":", ","type":"text"},{"type":"codeVoice","code":"-Command"},{"type":"text","text":" as the first argument, and the desired command as the second argument."}],"type":"paragraph"}]},{"name":"Note","style":"note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"To execute a Unix shell built-in command, specify shell executable name in ","type":"text"},{"type":"codeVoice","code":"path"},{"type":"text","text":", "},{"type":"codeVoice","code":"-c"},{"type":"text","text":" as the first argument, and the desired command as the second argument."}]}]},{"style":"note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"On macOS, sandboxed applications are limited to run only embedded helper executables, specified during export.","type":"text"}]}],"name":"Note"},{"style":"note","name":"Note","type":"aside","content":[{"inlineContent":[{"type":"text","text":"On Android, system commands such as "},{"type":"codeVoice","code":"dumpsys"},{"text":" can only be run on a rooted device.","type":"text"}],"type":"paragraph"}]}],"kind":"content"}],"abstract":[{"text":"Executes the given process in a ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"blocking"}]},{"text":" way. The file specified in ","type":"text"},{"type":"codeVoice","code":"path"},{"text":" must exist and be executable. The system path resolution will be used. The ","type":"text"},{"type":"codeVoice","code":"arguments"},{"type":"text","text":" are used in the given order, separated by spaces, and wrapped in quotes."}],"metadata":{"role":"symbol","symbolKind":"method","title":"execute(path:arguments:output:readStderr:openConsole:)","modules":[{"name":"SwiftGodot"}],"externalID":"s:10SwiftGodot2OSC7execute4path9arguments6output10readStderr11openConsoles5Int32VSS_AA17PackedStringArrayCAA6GArrayCS2btFZ","roleHeading":"Type Method","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"execute"},{"text":"(","kind":"text"},{"text":"path","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"text":"arguments","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot17PackedStringArrayC","text":"PackedStringArray"},{"kind":"text","text":", "},{"text":"output","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"GArray","preciseIdentifier":"s:10SwiftGodot6GArrayC"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"readStderr"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":", "},{"kind":"externalParam","text":"openConsole"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier","text":"Int32"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/execute(path:arguments:output:readStderr:openConsole:)"},"kind":"symbol","sections":[],"hierarchy":{"paths":[["doc:\/\/SwiftGodot\/documentation\/SwiftGodot","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS"]]},"references":{"doc://SwiftGodot/documentation/SwiftGodot/OS/createProcess(path:arguments:openConsole:)":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"createProcess"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"path"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"arguments"},{"text":": ","kind":"text"},{"text":"PackedStringArray","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot17PackedStringArrayC"},{"kind":"text","text":", "},{"text":"openConsole","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Int32","kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V"}],"abstract":[{"text":"Creates a new process that runs independently of Godot. It will not terminate when Godot terminates. The path specified in ","type":"text"},{"type":"codeVoice","code":"path"},{"text":" must exist and be an executable file or macOS ","type":"text"},{"code":".app","type":"codeVoice"},{"type":"text","text":" bundle. The path is resolved based on the current platform. The "},{"code":"arguments","type":"codeVoice"},{"type":"text","text":" are used in the given order and separated by a space."}],"title":"createProcess(path:arguments:openConsole:)","type":"topic","url":"\/documentation\/swiftgodot\/os\/createprocess(path:arguments:openconsole:)","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/createProcess(path:arguments:openConsole:)","kind":"symbol","role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/OS/execute(path:arguments:output:readStderr:openConsole:)":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"execute","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"path"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"text":"arguments","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10SwiftGodot17PackedStringArrayC","text":"PackedStringArray","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"output","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"GArray","preciseIdentifier":"s:10SwiftGodot6GArrayC","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"readStderr","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"openConsole","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"text":"Int32","preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Executes the given process in a "},{"inlineContent":[{"text":"blocking","type":"text"}],"type":"emphasis"},{"type":"text","text":" way. The file specified in "},{"type":"codeVoice","code":"path"},{"text":" must exist and be executable. The system path resolution will be used. The ","type":"text"},{"code":"arguments","type":"codeVoice"},{"type":"text","text":" are used in the given order, separated by spaces, and wrapped in quotes."}],"url":"\/documentation\/swiftgodot\/os\/execute(path:arguments:output:readstderr:openconsole:)","kind":"symbol","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/execute(path:arguments:output:readStderr:openConsole:)","role":"symbol","title":"execute(path:arguments:output:readStderr:openConsole:)"},"doc://SwiftGodot/documentation/SwiftGodot/OS":{"url":"\/documentation\/swiftgodot\/os","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"OS"}],"navigatorTitle":[{"kind":"identifier","text":"OS"}],"title":"OS","abstract":[{"type":"text","text":"Provides access to common operating system functionalities."}],"type":"topic","role":"symbol","kind":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/Thread":{"title":"Thread","url":"\/documentation\/swiftgodot\/thread","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Thread","kind":"identifier"}],"abstract":[{"text":"A unit of execution in a process.","type":"text"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Thread","navigatorTitle":[{"kind":"identifier","text":"Thread"}],"kind":"symbol","type":"topic","role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot":{"kind":"symbol","url":"\/documentation\/swiftgodot","abstract":[{"type":"text","text":"Framework to write Godot Game Extensions using the Swift Programming Language."}],"role":"collection","title":"SwiftGodot","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot"},"doc://SwiftGodot/documentation/SwiftGodot/PackedStringArray":{"abstract":[{"text":"A packed array of ","type":"text"},{"type":"codeVoice","code":"String"},{"text":"s.","type":"text"}],"title":"PackedStringArray","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PackedStringArray","kind":"identifier"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PackedStringArray","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PackedStringArray"}],"role":"symbol","url":"\/documentation\/swiftgodot\/packedstringarray"},"doc://SwiftGodot/documentation/SwiftGodot/GArray":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GArray","url":"\/documentation\/swiftgodot\/garray","title":"GArray","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"GArray"}],"type":"topic","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"GArray","kind":"identifier"}],"abstract":[{"text":"A built-in data structure that holds a sequence of elements.","type":"text"}]}}}
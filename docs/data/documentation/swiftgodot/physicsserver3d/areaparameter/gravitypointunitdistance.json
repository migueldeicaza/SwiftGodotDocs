{"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"roleHeading":"Case","title":"PhysicsServer3D.AreaParameter.gravityPointUnitDistance","role":"symbol","externalID":"s:10SwiftGodot15PhysicsServer3DC13AreaParameterO24gravityPointUnitDistanceyA2EmF","symbolKind":"case","modules":[{"name":"SwiftGodot"}],"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"gravityPointUnitDistance","kind":"identifier"}]},"hierarchy":{"paths":[["doc:\/\/SwiftGodot\/documentation\/SwiftGodot","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PhysicsServer3D","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PhysicsServer3D\/AreaParameter"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"gravityPointUnitDistance","kind":"identifier"}]}]},{"content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"inlineContent":[{"text":"The above is true only when the unit distance is a positive number. When this is set to 0.0, the gravity will be constant regardless of distance.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"sections":[],"identifier":{"url":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PhysicsServer3D\/AreaParameter\/gravityPointUnitDistance","interfaceLanguage":"swift"},"abstract":[{"text":"Constant to set\/get the distance at which the gravity strength is equal to the gravity controlled by .areaParamGravity. For example, on a planet 100 meters in radius with a surface gravity of 4.0 m\/s², set the gravity to 4.0 and the unit distance to 100.0. The gravity will have falloff according to the inverse square law, so in the example, at 200 meters from the center the gravity will be 1.0 m\/s² (twice the distance, 1\/4th the gravity), at 50 meters it will be 16.0 m\/s² (half the distance, 4x the gravity), and so on.","type":"text"}],"variants":[{"paths":["\/documentation\/swiftgodot\/physicsserver3d\/areaparameter\/gravitypointunitdistance"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://SwiftGodot/documentation/SwiftGodot/PhysicsServer3D/AreaParameter":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AreaParameter"}],"url":"\/documentation\/swiftgodot\/physicsserver3d\/areaparameter","kind":"symbol","navigatorTitle":[{"text":"AreaParameter","kind":"identifier"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PhysicsServer3D\/AreaParameter","title":"PhysicsServer3D.AreaParameter","role":"symbol","abstract":[],"type":"topic"},"doc://SwiftGodot/documentation/SwiftGodot/PhysicsServer3D/AreaParameter/gravityPointUnitDistance":{"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"gravityPointUnitDistance","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PhysicsServer3D\/AreaParameter\/gravityPointUnitDistance","title":"PhysicsServer3D.AreaParameter.gravityPointUnitDistance","abstract":[{"type":"text","text":"Constant to set\/get the distance at which the gravity strength is equal to the gravity controlled by .areaParamGravity. For example, on a planet 100 meters in radius with a surface gravity of 4.0 m\/s², set the gravity to 4.0 and the unit distance to 100.0. The gravity will have falloff according to the inverse square law, so in the example, at 200 meters from the center the gravity will be 1.0 m\/s² (twice the distance, 1\/4th the gravity), at 50 meters it will be 16.0 m\/s² (half the distance, 4x the gravity), and so on."}],"type":"topic","url":"\/documentation\/swiftgodot\/physicsserver3d\/areaparameter\/gravitypointunitdistance","role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot":{"kind":"symbol","url":"\/documentation\/swiftgodot","abstract":[{"type":"text","text":"Framework to write Godot Game Extensions using the Swift Programming Language."}],"role":"collection","title":"SwiftGodot","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot"},"doc://SwiftGodot/documentation/SwiftGodot/PhysicsServer3D":{"navigatorTitle":[{"kind":"identifier","text":"PhysicsServer3D"}],"abstract":[{"text":"A server interface for low-level 3D physics access.","type":"text"}],"title":"PhysicsServer3D","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PhysicsServer3D","role":"symbol","type":"topic","url":"\/documentation\/swiftgodot\/physicsserver3d","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"PhysicsServer3D","kind":"identifier"}]}}}
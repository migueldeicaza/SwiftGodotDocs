{"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"casecmpTo","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"to","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int64V","text":"Int64"}]}]},{"kind":"content","content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"With different string lengths, returns "},{"code":"1","type":"codeVoice"},{"text":" if this string is longer than the ","type":"text"},{"code":"to","type":"codeVoice"},{"text":" string, or ","type":"text"},{"type":"codeVoice","code":"-1"},{"type":"text","text":" if shorter. Note that the length of empty strings is "},{"type":"emphasis","inlineContent":[{"type":"text","text":"always"}]},{"text":" ","type":"text"},{"type":"codeVoice","code":"0"},{"type":"text","text":"."}]},{"inlineContent":[{"type":"text","text":"To get a [bool] result from a string comparison, use the "},{"type":"codeVoice","code":"=="},{"type":"text","text":" operator instead. See also "},{"type":"codeVoice","code":"nocasecmpTo(to:)"},{"type":"text","text":", "},{"code":"filecasecmpTo(to:)","type":"codeVoice"},{"type":"text","text":", and "},{"type":"codeVoice","code":"naturalcasecmpTo(to:)"},{"type":"text","text":"."}],"type":"paragraph"}]}],"metadata":{"title":"casecmpTo(_:)","externalID":"s:10SwiftGodot10StringNameC9casecmpToys5Int64VSSF","roleHeading":"Instance Method","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"casecmpTo","kind":"identifier"},{"kind":"text","text":"("},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":") -> "},{"text":"Int64","kind":"typeIdentifier","preciseIdentifier":"s:s5Int64V"}],"role":"symbol","modules":[{"name":"SwiftGodot"}]},"hierarchy":{"paths":[["doc:\/\/SwiftGodot\/documentation\/SwiftGodot","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/StringName"]]},"abstract":[{"type":"text","text":"Performs a case-sensitive comparison to another string. Returns "},{"type":"codeVoice","code":"-1"},{"type":"text","text":" if less than, "},{"type":"codeVoice","code":"1"},{"type":"text","text":" if greater than, or "},{"type":"codeVoice","code":"0"},{"text":" if equal. “Less than” and “greater than” are determined by the ","type":"text"},{"text":"Unicode code points","type":"text"},{"text":" of each string, which roughly matches the alphabetical order.","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/StringName\/casecmpTo(_:)"},"variants":[{"paths":["\/documentation\/swiftgodot\/stringname\/casecmpto(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"references":{"doc://SwiftGodot/documentation/SwiftGodot":{"kind":"symbol","url":"\/documentation\/swiftgodot","abstract":[{"type":"text","text":"Framework to write Godot Game Extensions using the Swift Programming Language."}],"role":"collection","title":"SwiftGodot","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot"},"doc://SwiftGodot/documentation/SwiftGodot/StringName/casecmpTo(_:)":{"role":"symbol","title":"casecmpTo(_:)","kind":"symbol","abstract":[{"text":"Performs a case-sensitive comparison to another string. Returns ","type":"text"},{"type":"codeVoice","code":"-1"},{"text":" if less than, ","type":"text"},{"type":"codeVoice","code":"1"},{"text":" if greater than, or ","type":"text"},{"type":"codeVoice","code":"0"},{"type":"text","text":" if equal. “Less than” and “greater than” are determined by the "},{"type":"text","text":"Unicode code points"},{"type":"text","text":" of each string, which roughly matches the alphabetical order."}],"url":"\/documentation\/swiftgodot\/stringname\/casecmpto(_:)","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/StringName\/casecmpTo(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"casecmpTo"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":") -> ","kind":"text"},{"text":"Int64","kind":"typeIdentifier","preciseIdentifier":"s:s5Int64V"}],"type":"topic"},"doc://SwiftGodot/documentation/SwiftGodot/StringName":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/StringName","type":"topic","url":"\/documentation\/swiftgodot\/stringname","title":"StringName","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"StringName","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"StringName"}],"abstract":[{"text":"A built-in type for unique strings.","type":"text"}]}}}
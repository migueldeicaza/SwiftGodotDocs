{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"final"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"callDeferred","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"arguments","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Variant","kind":"typeIdentifier","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Variant","preciseIdentifier":"s:10SwiftGodot7VariantC"},{"kind":"text","text":"...)"}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"Deferred calls are processed at idle time. Idle time happens mainly at the end of process and physics frames. In it, deferred calls will be run until there are none left, which means you can defer calls from other deferred calls and they’ll still be run in the current idle time cycle. This means you should not call a method deferred from itself (or from a method called by it), as this causes infinite recursion the same way as if you had called the method directly.","type":"text"}]}],"name":"Note"},{"inlineContent":[{"type":"text","text":"See also "},{"code":"Object\/callDeferred(method:)","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}]}],"abstract":[{"type":"text","text":"Calls the method represented by this "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Callable","isActive":true},{"text":" in deferred mode, i.e. at the end of the current frame. Arguments can be passed and should match the method’s signature.","type":"text"}],"variants":[{"paths":["\/documentation\/swiftgodot\/callable\/calldeferred(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"url":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Callable\/callDeferred(_:)","interfaceLanguage":"swift"},"sections":[],"hierarchy":{"paths":[["doc:\/\/SwiftGodot\/documentation\/SwiftGodot","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Callable"]]},"metadata":{"role":"symbol","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"callDeferred"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot7VariantC","kind":"typeIdentifier","text":"Variant"},{"text":"...)","kind":"text"}],"title":"callDeferred(_:)","modules":[{"name":"SwiftGodot"}],"externalID":"s:10SwiftGodot8CallableC12callDeferredyyAA7VariantCd_tF","roleHeading":"Instance Method"},"references":{"doc://SwiftGodot/documentation/SwiftGodot":{"kind":"symbol","url":"\/documentation\/swiftgodot","abstract":[{"type":"text","text":"Framework to write Godot Game Extensions using the Swift Programming Language."}],"role":"collection","title":"SwiftGodot","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot"},"doc://SwiftGodot/documentation/SwiftGodot/Callable":{"url":"\/documentation\/swiftgodot\/callable","navigatorTitle":[{"kind":"identifier","text":"Callable"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Callable"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Callable","title":"Callable","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"A built-in type representing a method or a standalone function."}],"role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/Variant":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Variant","navigatorTitle":[{"kind":"identifier","text":"Variant"}],"abstract":[{"text":"Variant objects box various Godot Objects, you create them with one of the","type":"text"},{"type":"text","text":" "},{"text":"constructors, and you can retrieve the contents using the various extension","type":"text"},{"type":"text","text":" "},{"type":"text","text":"constructors that are declared on the various types that are wrapped."}],"kind":"symbol","role":"symbol","url":"\/documentation\/swiftgodot\/variant","title":"Variant","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Variant","kind":"identifier"}]},"doc://SwiftGodot/documentation/SwiftGodot/Callable/callDeferred(_:)":{"abstract":[{"type":"text","text":"Calls the method represented by this "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Callable","isActive":true,"type":"reference"},{"text":" in deferred mode, i.e. at the end of the current frame. Arguments can be passed and should match the method’s signature.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Callable\/callDeferred(_:)","url":"\/documentation\/swiftgodot\/callable\/calldeferred(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"callDeferred"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot7VariantC","text":"Variant"},{"text":"...)","kind":"text"}],"role":"symbol","type":"topic","title":"callDeferred(_:)"}}}
{"hierarchy":{"paths":[["doc:\/\/SwiftGodot\/documentation\/SwiftGodot"]]},"sections":[],"metadata":{"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"GDictionary","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"GDictionary"}],"externalID":"s:10SwiftGodot11GDictionaryC","symbolKind":"class","modules":[{"name":"SwiftGodot"}],"title":"GDictionary","roleHeading":"Class"},"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","relationshipsSections":[{"title":"Conforms To","kind":"relationships","type":"conformsTo","identifiers":["doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/ContentVariantRepresentable","doc:\/\/SwiftGodot\/s8CopyableP","doc:\/\/SwiftGodot\/s28CustomDebugStringConvertibleP","doc:\/\/SwiftGodot\/s23CustomStringConvertibleP","doc:\/\/SwiftGodot\/SQ","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/VariantRepresentable","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/VariantStorable"]}],"topicSections":[{"identifiers":["doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GDictionary\/!=(_:_:)-9rrox","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GDictionary\/==(_:_:)"],"title":"Operators","generated":true,"anchor":"Operators"},{"anchor":"Initializers","generated":true,"identifiers":["doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GDictionary\/init()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GDictionary\/init(alreadyOwnedContent:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GDictionary\/init(content:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GDictionary\/init(from:)"],"title":"Initializers"},{"title":"Instance Properties","identifiers":["doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GDictionary\/content"],"anchor":"Instance-Properties","generated":true},{"anchor":"Instance-Methods","identifiers":["doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GDictionary\/clear()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GDictionary\/duplicate(deep:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GDictionary\/erase(key:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GDictionary\/findKey(value:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GDictionary\/get(key:default:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GDictionary\/getOrAdd(key:default:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GDictionary\/has(key:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GDictionary\/hasAll(keys:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GDictionary\/hash()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GDictionary\/isEmpty()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GDictionary\/isReadOnly()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GDictionary\/keys()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GDictionary\/makeReadOnly()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GDictionary\/merge(dictionary:overwrite:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GDictionary\/merged(dictionary:overwrite:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GDictionary\/recursiveEqual(dictionary:recursionCount:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GDictionary\/size()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GDictionary\/values()"],"generated":true,"title":"Instance Methods"},{"identifiers":["doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GDictionary\/subscript(_:)-2xqyy","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GDictionary\/subscript(_:)-4w73o","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GDictionary\/subscript(_:)-7jgrw"],"anchor":"Subscripts","generated":true,"title":"Subscripts"},{"identifiers":["doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GDictionary\/ContentType"],"title":"Type Aliases","generated":true,"anchor":"Type-Aliases"},{"identifiers":["doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GDictionary\/zero"],"generated":true,"anchor":"Type-Properties","title":"Type Properties"},{"title":"Default Implementations","generated":true,"anchor":"Default-Implementations","identifiers":["doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GDictionary\/CustomDebugStringConvertible-Implementations","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GDictionary\/CustomStringConvertible-Implementations","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GDictionary\/Equatable-Implementations","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GDictionary\/VariantRepresentable-Implementations","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GDictionary\/VariantStorable-Implementations"]}],"abstract":[{"type":"text","text":"A built-in data structure that holds key-value pairs."}],"variants":[{"paths":["\/documentation\/swiftgodot\/gdictionary"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"GDictionary","kind":"identifier"}],"platforms":["macOS"]}]},{"content":[{"level":2,"anchor":"overview","text":"Overview","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"Dictionaries are associative containers that contain values referenced by unique keys. Dictionaries will preserve the insertion order when adding new entries. In other programming languages, this data structure is often referred to as a hash map or an associative array.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"You can define a dictionary by placing a comma-separated list of ","type":"text"},{"type":"codeVoice","code":"key: value"},{"text":" pairs inside curly braces ","type":"text"},{"code":"{}","type":"codeVoice"},{"text":".","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Creating a dictionary:"}]},{"inlineContent":[{"type":"text","text":"You can access a dictionary’s value by referencing its corresponding key. In the above example, "},{"code":"points_dict[\"White\"]","type":"codeVoice"},{"type":"text","text":" will return "},{"code":"50","type":"codeVoice"},{"type":"text","text":". You can also write "},{"type":"codeVoice","code":"points_dict.White"},{"text":", which is equivalent. However, you’ll have to use the bracket syntax if the key you’re accessing the dictionary with isn’t a fixed string (such as a number or variable).","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In the above code, "},{"code":"points","type":"codeVoice"},{"text":" will be assigned the value that is paired with the appropriate color selected in ","type":"text"},{"type":"codeVoice","code":"my_color"},{"text":".","type":"text"}]},{"inlineContent":[{"type":"text","text":"Dictionaries can contain more complex data:"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"To add a key to an existing dictionary, access it like an existing key and assign to it:"}],"type":"paragraph"},{"inlineContent":[{"text":"Finally, dictionaries can contain different types of keys and values in the same dictionary:","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The keys of a dictionary can be iterated with the "},{"type":"codeVoice","code":"for"},{"type":"text","text":" keyword:"}]},{"type":"aside","name":"Note","content":[{"type":"paragraph","inlineContent":[{"text":"Dictionaries are always passed by reference. To get a copy of a dictionary which can be modified independently of the original dictionary, use ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GDictionary\/duplicate(deep:)"},{"type":"text","text":"."}]}],"style":"note"},{"style":"note","name":"Note","type":"aside","content":[{"inlineContent":[{"text":"Erasing elements while iterating over dictionaries is ","type":"text"},{"type":"strong","inlineContent":[{"text":"not","type":"text"}]},{"text":" supported and will result in unpredictable behavior.","type":"text"}],"type":"paragraph"}]}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GDictionary"},"references":{"doc://SwiftGodot/documentation/SwiftGodot/GDictionary/clear()":{"type":"topic","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"clear"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Clears the dictionary, removing all entries from it."}],"url":"\/documentation\/swiftgodot\/gdictionary\/clear()","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GDictionary\/clear()","title":"clear()"},"doc://SwiftGodot/documentation/SwiftGodot/GDictionary/ContentType":{"type":"topic","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GDictionary\/ContentType","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ContentType"}],"url":"\/documentation\/swiftgodot\/gdictionary\/contenttype","title":"GDictionary.ContentType","abstract":[],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"ContentType"}]},"doc://SwiftGodot/documentation/SwiftGodot/GDictionary/VariantRepresentable-Implementations":{"type":"topic","kind":"article","role":"collectionGroup","abstract":[],"url":"\/documentation\/swiftgodot\/gdictionary\/variantrepresentable-implementations","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GDictionary\/VariantRepresentable-Implementations","title":"VariantRepresentable Implementations"},"doc://SwiftGodot/documentation/SwiftGodot/GDictionary/recursiveEqual(dictionary:recursionCount:)":{"type":"topic","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GDictionary\/recursiveEqual(dictionary:recursionCount:)","role":"symbol","url":"\/documentation\/swiftgodot\/gdictionary\/recursiveequal(dictionary:recursioncount:)","title":"recursiveEqual(dictionary:recursionCount:)","abstract":[{"type":"text","text":"Returns "},{"code":"true","type":"codeVoice"},{"type":"text","text":" if the two dictionaries contain the same keys and values, inner "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GDictionary","isActive":true,"type":"reference"},{"text":" and ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GArray","isActive":true,"type":"reference"},{"type":"text","text":" keys and values are compared recursively."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"recursiveEqual","kind":"identifier"},{"text":"(","kind":"text"},{"text":"dictionary","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot11GDictionaryC","text":"GDictionary"},{"kind":"text","text":", "},{"kind":"externalParam","text":"recursionCount"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s5Int64V","text":"Int64","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}]},"doc://SwiftGodot/documentation/SwiftGodot/GDictionary/subscript(_:)-7jgrw":{"type":"topic","kind":"symbol","role":"symbol","fragments":[{"text":"subscript","kind":"keyword"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"StringName","preciseIdentifier":"s:10SwiftGodot10StringNameC"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Variant","preciseIdentifier":"s:10SwiftGodot7VariantC"},{"text":"?","kind":"text"}],"abstract":[{"text":"Convenience subscript that uses a StringName as the key to access the","type":"text"},{"text":" ","type":"text"},{"text":"elements in the dictionary.   Merely wraps this on a Variant.","type":"text"}],"url":"\/documentation\/swiftgodot\/gdictionary\/subscript(_:)-7jgrw","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GDictionary\/subscript(_:)-7jgrw","title":"subscript(_:)"},"doc://SwiftGodot/documentation/SwiftGodot/GDictionary/findKey(value:)":{"type":"topic","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GDictionary\/findKey(value:)","role":"symbol","url":"\/documentation\/swiftgodot\/gdictionary\/findkey(value:)","title":"findKey(value:)","abstract":[{"text":"Finds and returns the first key whose associated value is equal to ","type":"text"},{"code":"value","type":"codeVoice"},{"text":", or ","type":"text"},{"code":"null","type":"codeVoice"},{"type":"text","text":" if it is not found."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"findKey"},{"text":"(","kind":"text"},{"text":"value","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Variant","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot7VariantC"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot7VariantC","kind":"typeIdentifier","text":"Variant"}]},"doc://SwiftGodot/documentation/SwiftGodot/GDictionary/hash()":{"type":"topic","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hash","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"Int64","preciseIdentifier":"s:s5Int64V","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Returns a hashed 32-bit integer value representing the dictionary contents."}],"url":"\/documentation\/swiftgodot\/gdictionary\/hash()","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GDictionary\/hash()","title":"hash()"},"doc://SwiftGodot/documentation/SwiftGodot/GDictionary/hasAll(keys:)":{"type":"topic","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GDictionary\/hasAll(keys:)","role":"symbol","url":"\/documentation\/swiftgodot\/gdictionary\/hasall(keys:)","title":"hasAll(keys:)","abstract":[{"type":"text","text":"Returns "},{"type":"codeVoice","code":"true"},{"text":" if the dictionary contains all keys in the given ","type":"text"},{"type":"codeVoice","code":"keys"},{"type":"text","text":" array."}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"hasAll"},{"kind":"text","text":"("},{"kind":"externalParam","text":"keys"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot6GArrayC","kind":"typeIdentifier","text":"GArray"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}]},"doc://SwiftGodot/documentation/SwiftGodot/GDictionary/makeReadOnly()":{"type":"topic","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"makeReadOnly","kind":"identifier"},{"kind":"text","text":"()"}],"abstract":[{"text":"Makes the dictionary read-only, i.e. disables modification of the dictionary’s contents. Does not apply to nested content, e.g. content of nested dictionaries.","type":"text"}],"url":"\/documentation\/swiftgodot\/gdictionary\/makereadonly()","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GDictionary\/makeReadOnly()","title":"makeReadOnly()"},"doc://SwiftGodot/documentation/SwiftGodot/GArray":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GArray","url":"\/documentation\/swiftgodot\/garray","title":"GArray","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"GArray"}],"type":"topic","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"GArray","kind":"identifier"}],"abstract":[{"text":"A built-in data structure that holds a sequence of elements.","type":"text"}]},"doc://SwiftGodot/documentation/SwiftGodot/GDictionary/getOrAdd(key:default:)":{"type":"topic","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GDictionary\/getOrAdd(key:default:)","role":"symbol","url":"\/documentation\/swiftgodot\/gdictionary\/getoradd(key:default:)","title":"getOrAdd(key:default:)","abstract":[{"text":"Gets a value and ensures the key is set. If the ","type":"text"},{"type":"codeVoice","code":"key"},{"text":" exists in the dictionary, this behaves like ","type":"text"},{"code":"get(key:`default`:)","type":"codeVoice"},{"text":". Otherwise, the ","type":"text"},{"code":"default","type":"codeVoice"},{"type":"text","text":" value is inserted into the dictionary and returned."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"getOrAdd","kind":"identifier"},{"text":"(","kind":"text"},{"text":"key","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot7VariantC","kind":"typeIdentifier","text":"Variant"},{"text":", ","kind":"text"},{"text":"default","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot7VariantC","text":"Variant"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Variant","preciseIdentifier":"s:10SwiftGodot7VariantC"}]},"doc://SwiftGodot/documentation/SwiftGodot/GDictionary/!=(_:_:)-9rrox":{"type":"topic","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"!=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"GDictionary","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot11GDictionaryC"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"GDictionary","preciseIdentifier":"s:10SwiftGodot11GDictionaryC"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"abstract":[{"type":"text","text":"Returns "},{"code":"true","type":"codeVoice"},{"type":"text","text":" if the two dictionaries do not contain the same keys and values."}],"url":"\/documentation\/swiftgodot\/gdictionary\/!=(_:_:)-9rrox","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GDictionary\/!=(_:_:)-9rrox","title":"!=(_:_:)"},"doc://SwiftGodot/documentation/SwiftGodot/ContentVariantRepresentable":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ContentVariantRepresentable","kind":"identifier"}],"abstract":[{"text":"Some of Godot’s builtin classes use ContentType for storage.","type":"text"},{"text":" ","type":"text"},{"text":"This needs to be public because it affects their initialization, but","type":"text"},{"type":"text","text":" "},{"type":"text","text":"SwiftGodot users should never need to conform their types"},{"type":"text","text":" "},{"type":"text","text":"to"},{"type":"codeVoice","code":"ContentVariantRepresentable"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/ContentVariantRepresentable","type":"topic","url":"\/documentation\/swiftgodot\/contentvariantrepresentable","navigatorTitle":[{"kind":"identifier","text":"ContentVariantRepresentable"}],"title":"ContentVariantRepresentable","kind":"symbol","role":"symbol"},"doc://SwiftGodot/s8CopyableP":{"title":"Swift.Copyable","type":"unresolvable","identifier":"doc:\/\/SwiftGodot\/s8CopyableP"},"doc://SwiftGodot/s23CustomStringConvertibleP":{"title":"Swift.CustomStringConvertible","type":"unresolvable","identifier":"doc:\/\/SwiftGodot\/s23CustomStringConvertibleP"},"doc://SwiftGodot/documentation/SwiftGodot/GDictionary/content":{"type":"topic","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GDictionary\/content","role":"symbol","url":"\/documentation\/swiftgodot\/gdictionary\/content","title":"content","abstract":[],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"content"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GDictionary","preciseIdentifier":"s:10SwiftGodot11GDictionaryC"},{"kind":"text","text":"."},{"text":"ContentType","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot11GDictionaryC11ContentTypea"}]},"doc://SwiftGodot/documentation/SwiftGodot/GDictionary/keys()":{"url":"\/documentation\/swiftgodot\/gdictionary\/keys()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"keys"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot6GArrayC","text":"GArray"}],"kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GDictionary\/keys()","role":"symbol","abstract":[{"text":"Returns the list of keys in the dictionary.","type":"text"}],"title":"keys()","type":"topic"},"doc://SwiftGodot/documentation/SwiftGodot/GDictionary/VariantStorable-Implementations":{"type":"topic","kind":"article","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GDictionary\/VariantStorable-Implementations","role":"collectionGroup","url":"\/documentation\/swiftgodot\/gdictionary\/variantstorable-implementations","title":"VariantStorable Implementations","abstract":[]},"doc://SwiftGodot/documentation/SwiftGodot/GDictionary/isReadOnly()":{"url":"\/documentation\/swiftgodot\/gdictionary\/isreadonly()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isReadOnly","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GDictionary\/isReadOnly()","role":"symbol","abstract":[{"text":"Returns ","type":"text"},{"code":"true","type":"codeVoice"},{"type":"text","text":" if the dictionary is read-only. See "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GDictionary\/makeReadOnly()","isActive":true},{"type":"text","text":". Dictionaries are automatically read-only if declared with "},{"code":"const","type":"codeVoice"},{"type":"text","text":" keyword."}],"title":"isReadOnly()","type":"topic"},"doc://SwiftGodot/documentation/SwiftGodot/GDictionary/size()":{"type":"topic","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GDictionary\/size()","role":"symbol","url":"\/documentation\/swiftgodot\/gdictionary\/size()","title":"size()","abstract":[{"type":"text","text":"Returns the number of entries in the dictionary. Empty dictionaries ("},{"code":"{ }","type":"codeVoice"},{"type":"text","text":") always return "},{"code":"0","type":"codeVoice"},{"type":"text","text":". See also "},{"isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GDictionary\/isEmpty()","type":"reference"},{"text":".","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"size","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"Int64","kind":"typeIdentifier","preciseIdentifier":"s:s5Int64V"}]},"doc://SwiftGodot/documentation/SwiftGodot/GDictionary/has(key:)":{"type":"topic","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GDictionary\/has(key:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"has"},{"kind":"text","text":"("},{"kind":"externalParam","text":"key"},{"text":": ","kind":"text"},{"text":"Variant","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot7VariantC"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"url":"\/documentation\/swiftgodot\/gdictionary\/has(key:)","abstract":[{"type":"text","text":"Returns "},{"type":"codeVoice","code":"true"},{"text":" if the dictionary contains an entry with the given ","type":"text"},{"type":"codeVoice","code":"key"},{"text":".","type":"text"}],"title":"has(key:)"},"doc://SwiftGodot/documentation/SwiftGodot/GDictionary/init(content:)":{"url":"\/documentation\/swiftgodot\/gdictionary\/init(content:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"content","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot11GDictionaryC","kind":"typeIdentifier","text":"GDictionary"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot11GDictionaryC11ContentTypea","text":"ContentType"},{"kind":"text","text":")"}],"kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GDictionary\/init(content:)","role":"symbol","abstract":[],"type":"topic","title":"init(content:)"},"doc://SwiftGodot/SQ":{"identifier":"doc:\/\/SwiftGodot\/SQ","type":"unresolvable","title":"Swift.Equatable"},"doc://SwiftGodot/documentation/SwiftGodot/GDictionary/init(alreadyOwnedContent:)":{"url":"\/documentation\/swiftgodot\/gdictionary\/init(alreadyownedcontent:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"alreadyOwnedContent","kind":"externalParam"},{"kind":"text","text":": "},{"text":"GDictionary","preciseIdentifier":"s:10SwiftGodot11GDictionaryC","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot11GDictionaryC11ContentTypea","text":"ContentType","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GDictionary\/init(alreadyOwnedContent:)","role":"symbol","abstract":[],"type":"topic","title":"init(alreadyOwnedContent:)"},"doc://SwiftGodot/documentation/SwiftGodot/VariantRepresentable":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/VariantRepresentable","abstract":[{"type":"text","text":"Types that conform to VariantRepresentable can be stored directly in "},{"type":"codeVoice","code":"Variant"},{"type":"text","text":" "},{"type":"text","text":"with no conversion.  These include all of the Variant types from Godot (for"},{"text":" ","type":"text"},{"text":"example ","type":"text"},{"code":"GString","type":"codeVoice"},{"type":"text","text":", "},{"code":"Rect","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Plane","type":"codeVoice"},{"type":"text","text":"), Godot objects (those that subclass"},{"type":"text","text":" "},{"type":"text","text":"SwiftGodot.Object) as well as the built-in Swift types UInt8, Int64 and Double."}],"kind":"symbol","navigatorTitle":[{"text":"VariantRepresentable","kind":"identifier"}],"type":"topic","url":"\/documentation\/swiftgodot\/variantrepresentable","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"VariantRepresentable","kind":"identifier"}],"title":"VariantRepresentable","role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/GDictionary/Equatable-Implementations":{"type":"topic","kind":"article","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GDictionary\/Equatable-Implementations","role":"collectionGroup","url":"\/documentation\/swiftgodot\/gdictionary\/equatable-implementations","title":"Equatable Implementations","abstract":[]},"doc://SwiftGodot/documentation/SwiftGodot/GDictionary/CustomStringConvertible-Implementations":{"url":"\/documentation\/swiftgodot\/gdictionary\/customstringconvertible-implementations","kind":"article","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GDictionary\/CustomStringConvertible-Implementations","role":"collectionGroup","abstract":[],"type":"topic","title":"CustomStringConvertible Implementations"},"doc://SwiftGodot/documentation/SwiftGodot/GDictionary/zero":{"type":"topic","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GDictionary\/zero","role":"symbol","url":"\/documentation\/swiftgodot\/gdictionary\/zero","title":"zero","abstract":[],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"zero"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot11GDictionaryC","text":"GDictionary"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot11GDictionaryC11ContentTypea","text":"ContentType"}]},"doc://SwiftGodot/documentation/SwiftGodot/GDictionary":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GDictionary","abstract":[{"type":"text","text":"A built-in data structure that holds key-value pairs."}],"kind":"symbol","navigatorTitle":[{"text":"GDictionary","kind":"identifier"}],"type":"topic","url":"\/documentation\/swiftgodot\/gdictionary","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"GDictionary","kind":"identifier"}],"title":"GDictionary","role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot":{"kind":"symbol","url":"\/documentation\/swiftgodot","abstract":[{"type":"text","text":"Framework to write Godot Game Extensions using the Swift Programming Language."}],"role":"collection","title":"SwiftGodot","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot"},"doc://SwiftGodot/documentation/SwiftGodot/GDictionary/init(from:)":{"url":"\/documentation\/swiftgodot\/gdictionary\/init(from:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"GDictionary","preciseIdentifier":"s:10SwiftGodot11GDictionaryC"},{"kind":"text","text":")"}],"kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GDictionary\/init(from:)","role":"symbol","abstract":[{"type":"text","text":"Returns the same dictionary as "},{"type":"codeVoice","code":"from"},{"text":". If you need a copy of the dictionary, use ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GDictionary\/duplicate(deep:)"},{"type":"text","text":"."}],"title":"init(from:)","type":"topic"},"doc://SwiftGodot/documentation/SwiftGodot/GDictionary/init()":{"type":"topic","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GDictionary\/init()","role":"symbol","url":"\/documentation\/swiftgodot\/gdictionary\/init()","title":"init()","abstract":[{"type":"text","text":"Constructs an empty "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GDictionary"},{"text":".","type":"text"}],"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}]},"doc://SwiftGodot/documentation/SwiftGodot/GDictionary/==(_:_:)":{"url":"\/documentation\/swiftgodot\/gdictionary\/==(_:_:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"==","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"GDictionary","preciseIdentifier":"s:10SwiftGodot11GDictionaryC","kind":"typeIdentifier"},{"kind":"text","text":", "},{"preciseIdentifier":"s:10SwiftGodot11GDictionaryC","text":"GDictionary","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GDictionary\/==(_:_:)","role":"symbol","abstract":[{"type":"text","text":"Returns "},{"type":"codeVoice","code":"true"},{"text":" if the two dictionaries contain the same keys and values. The order of the entries does not matter.","type":"text"}],"title":"==(_:_:)","type":"topic"},"doc://SwiftGodot/documentation/SwiftGodot/GDictionary/subscript(_:)-4w73o":{"type":"topic","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GDictionary\/subscript(_:)-4w73o","role":"symbol","url":"\/documentation\/swiftgodot\/gdictionary\/subscript(_:)-4w73o","title":"subscript(_:)","abstract":[],"fragments":[{"kind":"keyword","text":"subscript"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot7VariantC","text":"Variant"},{"kind":"text","text":") -> "},{"text":"Variant","preciseIdentifier":"s:10SwiftGodot7VariantC","kind":"typeIdentifier"},{"text":"?","kind":"text"}]},"doc://SwiftGodot/documentation/SwiftGodot/GDictionary/subscript(_:)-2xqyy":{"url":"\/documentation\/swiftgodot\/gdictionary\/subscript(_:)-2xqyy","fragments":[{"kind":"keyword","text":"subscript"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":") -> "},{"text":"Variant","preciseIdentifier":"s:10SwiftGodot7VariantC","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GDictionary\/subscript(_:)-2xqyy","role":"symbol","abstract":[{"text":"Convenience subscript that uses a String as the key to access the","type":"text"},{"text":" ","type":"text"},{"text":"elements in the dictionary.   Merely wraps this on a Variant.","type":"text"}],"title":"subscript(_:)","type":"topic"},"doc://SwiftGodot/documentation/SwiftGodot/GDictionary/erase(key:)":{"type":"topic","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GDictionary\/erase(key:)","role":"symbol","url":"\/documentation\/swiftgodot\/gdictionary\/erase(key:)","title":"erase(key:)","abstract":[{"text":"Removes the dictionary entry by key, if it exists. Returns ","type":"text"},{"code":"true","type":"codeVoice"},{"text":" if the given ","type":"text"},{"code":"key","type":"codeVoice"},{"type":"text","text":" existed in the dictionary, otherwise "},{"type":"codeVoice","code":"false"},{"text":".","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"erase","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"key"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10SwiftGodot7VariantC","kind":"typeIdentifier","text":"Variant"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}]},"doc://SwiftGodot/documentation/SwiftGodot/GDictionary/merge(dictionary:overwrite:)":{"url":"\/documentation\/swiftgodot\/gdictionary\/merge(dictionary:overwrite:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"merge"},{"kind":"text","text":"("},{"text":"dictionary","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot11GDictionaryC","text":"GDictionary","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"overwrite"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":")"}],"kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GDictionary\/merge(dictionary:overwrite:)","role":"symbol","abstract":[{"text":"Adds entries from ","type":"text"},{"type":"codeVoice","code":"dictionary"},{"type":"text","text":" to this dictionary. By default, duplicate keys are not copied over, unless "},{"code":"overwrite","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"true"},{"type":"text","text":"."}],"title":"merge(dictionary:overwrite:)","type":"topic"},"doc://SwiftGodot/documentation/SwiftGodot/GDictionary/merged(dictionary:overwrite:)":{"type":"topic","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GDictionary\/merged(dictionary:overwrite:)","role":"symbol","url":"\/documentation\/swiftgodot\/gdictionary\/merged(dictionary:overwrite:)","title":"merged(dictionary:overwrite:)","abstract":[{"type":"text","text":"Returns a copy of this dictionary merged with the other "},{"type":"codeVoice","code":"dictionary"},{"type":"text","text":". By default, duplicate keys are not copied over, unless "},{"code":"overwrite","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"true"},{"text":". See also ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GDictionary\/merge(dictionary:overwrite:)","isActive":true},{"text":".","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"merged","kind":"identifier"},{"text":"(","kind":"text"},{"text":"dictionary","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot11GDictionaryC","text":"GDictionary"},{"kind":"text","text":", "},{"kind":"externalParam","text":"overwrite"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"GDictionary","preciseIdentifier":"s:10SwiftGodot11GDictionaryC","kind":"typeIdentifier"}]},"doc://SwiftGodot/documentation/SwiftGodot/GDictionary/duplicate(deep:)":{"url":"\/documentation\/swiftgodot\/gdictionary\/duplicate(deep:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"duplicate"},{"kind":"text","text":"("},{"text":"deep","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot11GDictionaryC","kind":"typeIdentifier","text":"GDictionary"}],"kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GDictionary\/duplicate(deep:)","role":"symbol","abstract":[{"text":"Creates and returns a new copy of the dictionary. If ","type":"text"},{"type":"codeVoice","code":"deep"},{"text":" is ","type":"text"},{"code":"true","type":"codeVoice"},{"type":"text","text":", inner "},{"isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GDictionary","type":"reference"},{"type":"text","text":" and "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GArray","isActive":true},{"text":" keys and values are also copied, recursively.","type":"text"}],"title":"duplicate(deep:)","type":"topic"},"doc://SwiftGodot/s28CustomDebugStringConvertibleP":{"title":"Swift.CustomDebugStringConvertible","identifier":"doc:\/\/SwiftGodot\/s28CustomDebugStringConvertibleP","type":"unresolvable"},"doc://SwiftGodot/documentation/SwiftGodot/VariantStorable":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/VariantStorable","abstract":[{"text":"Types that conform to VariantStorable can be stored in a Variant and can be extracted","type":"text"},{"type":"text","text":" "},{"text":"back out of a Variant.","type":"text"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"VariantStorable"}],"type":"topic","url":"\/documentation\/swiftgodot\/variantstorable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"VariantStorable"}],"title":"VariantStorable","role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/GDictionary/isEmpty()":{"url":"\/documentation\/swiftgodot\/gdictionary\/isempty()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isEmpty"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GDictionary\/isEmpty()","role":"symbol","abstract":[{"type":"text","text":"Returns "},{"code":"true","type":"codeVoice"},{"type":"text","text":" if the dictionary is empty (its size is "},{"code":"0","type":"codeVoice"},{"type":"text","text":"). See also "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GDictionary\/size()","isActive":true},{"text":".","type":"text"}],"type":"topic","title":"isEmpty()"},"doc://SwiftGodot/documentation/SwiftGodot/GDictionary/values()":{"type":"topic","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GDictionary\/values()","role":"symbol","url":"\/documentation\/swiftgodot\/gdictionary\/values()","title":"values()","abstract":[{"text":"Returns the list of values in this dictionary.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"values"},{"kind":"text","text":"() -> "},{"text":"GArray","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot6GArrayC"}]},"doc://SwiftGodot/documentation/SwiftGodot/GDictionary/get(key:default:)":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GDictionary\/get(key:default:)","role":"symbol","type":"topic","title":"get(key:default:)","url":"\/documentation\/swiftgodot\/gdictionary\/get(key:default:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"get"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"key"},{"kind":"text","text":": "},{"text":"Variant","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot7VariantC"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"default"},{"text":": ","kind":"text"},{"text":"Variant","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot7VariantC"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot7VariantC","text":"Variant","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Returns the corresponding value for the given "},{"type":"codeVoice","code":"key"},{"type":"text","text":" in the dictionary. If the "},{"code":"key","type":"codeVoice"},{"type":"text","text":" does not exist, returns "},{"code":"default","type":"codeVoice"},{"type":"text","text":", or "},{"code":"null","type":"codeVoice"},{"text":" if the parameter is omitted.","type":"text"}]},"doc://SwiftGodot/documentation/SwiftGodot/GDictionary/CustomDebugStringConvertible-Implementations":{"url":"\/documentation\/swiftgodot\/gdictionary\/customdebugstringconvertible-implementations","kind":"article","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GDictionary\/CustomDebugStringConvertible-Implementations","role":"collectionGroup","abstract":[],"title":"CustomDebugStringConvertible Implementations","type":"topic"}}}
{"hierarchy":{"paths":[["doc:\/\/SwiftGodot\/documentation\/SwiftGodot","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/SceneTree"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"final"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"createTimer","kind":"identifier"},{"text":"(","kind":"text"},{"text":"timeSec","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Double","preciseIdentifier":"s:Sd","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"processAlways","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":" = true, ","kind":"text"},{"text":"processInPhysics","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":" = false, ","kind":"text"},{"kind":"externalParam","text":"ignoreTimeScale"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":" = false) -> "},{"preciseIdentifier":"s:10SwiftGodot14SceneTreeTimerC","kind":"typeIdentifier","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/SceneTreeTimer","text":"SceneTreeTimer"},{"text":"?","kind":"text"}]}]},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"inlineContent":[{"text":"If ","type":"text"},{"code":"processAlways","type":"codeVoice"},{"type":"text","text":" is "},{"code":"false","type":"codeVoice"},{"type":"text","text":", the timer will be paused when setting "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/SceneTree\/paused"},{"text":" to ","type":"text"},{"code":"true","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"If "},{"code":"processInPhysics","type":"codeVoice"},{"type":"text","text":" is "},{"code":"true","type":"codeVoice"},{"text":", the timer will update at the end of the physics frame, instead of the process frame.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If "},{"code":"ignoreTimeScale","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"true","type":"codeVoice"},{"text":", the timer will ignore ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Engine\/timeScale","isActive":true},{"text":" and update with the real, elapsed time.","type":"text"}]},{"inlineContent":[{"text":"This method is commonly used to create a one-shot delay timer, as in the following example:","type":"text"}],"type":"paragraph"},{"content":[{"inlineContent":[{"type":"text","text":"The timer is always updated "},{"type":"emphasis","inlineContent":[{"text":"after","type":"text"}]},{"type":"text","text":" all of the nodes in the tree. A nodeâ€™s "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Node\/_process(delta:)","isActive":true},{"text":" method would be called before the timer updates (or ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Node\/_physicsProcess(delta:)","isActive":true,"type":"reference"},{"type":"text","text":" if "},{"code":"processInPhysics","type":"codeVoice"},{"type":"text","text":" is set to "},{"code":"true","type":"codeVoice"},{"type":"text","text":")."}],"type":"paragraph"}],"style":"note","type":"aside","name":"Note"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftgodot\/scenetree\/createtimer(timesec:processalways:processinphysics:ignoretimescale:)"]}],"identifier":{"url":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/SceneTree\/createTimer(timeSec:processAlways:processInPhysics:ignoreTimeScale:)","interfaceLanguage":"swift"},"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"abstract":[{"text":"Returns a new ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/SceneTreeTimer"},{"type":"text","text":". After "},{"code":"timeSec","type":"codeVoice"},{"type":"text","text":" in seconds have passed, the timer will emit [signal SceneTreeTimer.timeout] and will be automatically freed."}],"metadata":{"modules":[{"name":"SwiftGodot"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"createTimer"},{"kind":"text","text":"("},{"text":"timeSec","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sd","kind":"typeIdentifier","text":"Double"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"processAlways"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"processInPhysics","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"ignoreTimeScale"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"SceneTreeTimer","preciseIdentifier":"s:10SwiftGodot14SceneTreeTimerC"},{"text":"?","kind":"text"}],"role":"symbol","title":"createTimer(timeSec:processAlways:processInPhysics:ignoreTimeScale:)","symbolKind":"method","roleHeading":"Instance Method","externalID":"s:10SwiftGodot9SceneTreeC11createTimer7timeSec13processAlways0I9InPhysics15ignoreTimeScaleAA0cdF0CSgSd_S3btF"},"references":{"doc://SwiftGodot/documentation/SwiftGodot/Engine/timeScale":{"role":"symbol","url":"\/documentation\/swiftgodot\/engine\/timescale","title":"timeScale","abstract":[{"type":"text","text":"The speed multiplier at which the in-game clock updates, compared to real time. For example, if set to "},{"type":"codeVoice","code":"2.0"},{"type":"text","text":" the game runs twice as fast, and if set to "},{"code":"0.5","type":"codeVoice"},{"type":"text","text":" the game runs half as fast."}],"kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Engine\/timeScale","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"timeScale"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sd","text":"Double"}],"type":"topic"},"doc://SwiftGodot/documentation/SwiftGodot/SceneTreeTimer":{"role":"symbol","abstract":[{"type":"text","text":"One-shot timer."}],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"SceneTreeTimer","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/SceneTreeTimer","navigatorTitle":[{"kind":"identifier","text":"SceneTreeTimer"}],"url":"\/documentation\/swiftgodot\/scenetreetimer","type":"topic","title":"SceneTreeTimer"},"doc://SwiftGodot/documentation/SwiftGodot/Node/_process(delta:)":{"title":"_process(delta:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"_process","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"delta"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sd","kind":"typeIdentifier","text":"Double"},{"text":")","kind":"text"}],"role":"symbol","abstract":[{"type":"text","text":"Called during the processing step of the main loop. Processing happens at every frame and as fast as possible, so the "},{"type":"codeVoice","code":"delta"},{"type":"text","text":" time since the previous frame is not constant. "},{"type":"codeVoice","code":"delta"},{"text":" is in seconds.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Node\/_process(delta:)","url":"\/documentation\/swiftgodot\/node\/_process(delta:)"},"doc://SwiftGodot/documentation/SwiftGodot/SceneTree/createTimer(timeSec:processAlways:processInPhysics:ignoreTimeScale:)":{"url":"\/documentation\/swiftgodot\/scenetree\/createtimer(timesec:processalways:processinphysics:ignoretimescale:)","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/SceneTree\/createTimer(timeSec:processAlways:processInPhysics:ignoreTimeScale:)","kind":"symbol","type":"topic","role":"symbol","abstract":[{"text":"Returns a new ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/SceneTreeTimer"},{"type":"text","text":". After "},{"code":"timeSec","type":"codeVoice"},{"text":" in seconds have passed, the timer will emit [signal SceneTreeTimer.timeout] and will be automatically freed.","type":"text"}],"title":"createTimer(timeSec:processAlways:processInPhysics:ignoreTimeScale:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"createTimer"},{"text":"(","kind":"text"},{"text":"timeSec","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"},{"text":", ","kind":"text"},{"text":"processAlways","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"processInPhysics"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"ignoreTimeScale"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot14SceneTreeTimerC","text":"SceneTreeTimer"},{"text":"?","kind":"text"}]},"doc://SwiftGodot/documentation/SwiftGodot":{"kind":"symbol","url":"\/documentation\/swiftgodot","abstract":[{"type":"text","text":"Framework to write Godot Game Extensions using the Swift Programming Language."}],"role":"collection","title":"SwiftGodot","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot"},"doc://SwiftGodot/documentation/SwiftGodot/SceneTree/paused":{"abstract":[{"text":"If ","type":"text"},{"code":"true","type":"codeVoice"},{"text":", the scene tree is considered paused. This causes the following behavior:","type":"text"}],"title":"paused","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/SceneTree\/paused","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"paused"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"url":"\/documentation\/swiftgodot\/scenetree\/paused","type":"topic"},"doc://SwiftGodot/documentation/SwiftGodot/Node/_physicsProcess(delta:)":{"role":"symbol","url":"\/documentation\/swiftgodot\/node\/_physicsprocess(delta:)","title":"_physicsProcess(delta:)","abstract":[{"type":"text","text":"Called during the physics processing step of the main loop. Physics processing means that the frame rate is synced to the physics, i.e. the "},{"type":"codeVoice","code":"delta"},{"type":"text","text":" variable should be constant. "},{"type":"codeVoice","code":"delta"},{"type":"text","text":" is in seconds."}],"kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Node\/_physicsProcess(delta:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"_physicsProcess","kind":"identifier"},{"text":"(","kind":"text"},{"text":"delta","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":")"}],"type":"topic"},"doc://SwiftGodot/documentation/SwiftGodot/SceneTree":{"type":"topic","url":"\/documentation\/swiftgodot\/scenetree","abstract":[{"text":"Manages the game loop via a hierarchy of nodes.","type":"text"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"SceneTree"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SceneTree"}],"title":"SceneTree","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/SceneTree"}}}
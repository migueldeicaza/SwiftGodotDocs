{"hierarchy":{"paths":[["doc:\/\/SwiftGodot\/documentation\/SwiftGodot","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/SceneTree"]]},"abstract":[{"type":"text","text":"Calls "},{"code":"method","type":"codeVoice"},{"text":" on each node inside this tree added to the given ","type":"text"},{"type":"codeVoice","code":"group"},{"type":"text","text":". You can pass arguments to "},{"type":"codeVoice","code":"method"},{"type":"text","text":" by specifying them at the end of this method call. Nodes that cannot call "},{"type":"codeVoice","code":"method"},{"text":" (either because the method doesn’t exist or the arguments do not match) are ignored. See also ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/SceneTree\/setGroup(_:property:value:)","type":"reference","isActive":true},{"text":" and ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/SceneTree\/notifyGroup(_:notification:)","isActive":true,"type":"reference"},{"text":".","type":"text"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"role":"symbol","title":"callGroup(_:method:_:)","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"callGroup"},{"kind":"text","text":"("},{"text":"StringName","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot10StringNameC"},{"text":", ","kind":"text"},{"text":"method","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot10StringNameC","text":"StringName","kind":"typeIdentifier"},{"kind":"text","text":", "},{"preciseIdentifier":"s:10SwiftGodot7VariantC","kind":"typeIdentifier","text":"Variant"},{"kind":"text","text":"...)"}],"modules":[{"name":"SwiftGodot"}],"symbolKind":"method","externalID":"s:10SwiftGodot9SceneTreeC9callGroup_6method_yAA10StringNameC_AgA7VariantCdtF"},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftgodot\/scenetree\/callgroup(_:method:_:)"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"final","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"callGroup","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"group"},{"text":": ","kind":"text"},{"text":"StringName","preciseIdentifier":"s:10SwiftGodot10StringNameC","kind":"typeIdentifier","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/StringName"},{"kind":"text","text":", "},{"kind":"externalParam","text":"method"},{"text":": ","kind":"text"},{"text":"StringName","preciseIdentifier":"s:10SwiftGodot10StringNameC","kind":"typeIdentifier","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/StringName"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"arguments"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10SwiftGodot7VariantC","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Variant","text":"Variant","kind":"typeIdentifier"},{"kind":"text","text":"...)"}],"platforms":["macOS"],"languages":["swift"]}]},{"content":[{"anchor":"discussion","text":"Discussion","level":2,"type":"heading"},{"name":"Note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This method acts immediately on all selected nodes at once, which may cause stuttering in some performance-intensive situations."}]}],"type":"aside","style":"note"},{"style":"note","name":"Note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"In C#, "},{"code":"method","type":"codeVoice"},{"type":"text","text":" must be in snake_case when referring to built-in Godot methods. Prefer using the names exposed in the "},{"type":"codeVoice","code":"MethodName"},{"text":" class to avoid allocating a new ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/StringName","isActive":true},{"text":" on each call.","type":"text"}]}]}],"kind":"content"}],"identifier":{"url":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/SceneTree\/callGroup(_:method:_:)","interfaceLanguage":"swift"},"sections":[],"references":{"doc://SwiftGodot/documentation/SwiftGodot/SceneTree/setGroup(_:property:value:)":{"title":"setGroup(_:property:value:)","abstract":[{"text":"Sets the given ","type":"text"},{"type":"codeVoice","code":"property"},{"type":"text","text":" to "},{"code":"value","type":"codeVoice"},{"type":"text","text":" on all nodes inside this tree added to the given "},{"type":"codeVoice","code":"group"},{"text":". Nodes that do not have the ","type":"text"},{"type":"codeVoice","code":"property"},{"type":"text","text":" are ignored. See also "},{"type":"codeVoice","code":"callGroup(_:method:)"},{"type":"text","text":" and "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/SceneTree\/notifyGroup(_:notification:)"},{"type":"text","text":"."}],"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"setGroup"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"StringName","preciseIdentifier":"s:10SwiftGodot10StringNameC"},{"kind":"text","text":", "},{"text":"property","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"text":"value","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Variant","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot7VariantC"},{"kind":"text","text":")"}],"type":"topic","role":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/SceneTree\/setGroup(_:property:value:)","url":"\/documentation\/swiftgodot\/scenetree\/setgroup(_:property:value:)"},"doc://SwiftGodot/documentation/SwiftGodot/Variant":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Variant","navigatorTitle":[{"kind":"identifier","text":"Variant"}],"abstract":[{"text":"Variant objects box various Godot Objects, you create them with one of the","type":"text"},{"type":"text","text":" "},{"text":"constructors, and you can retrieve the contents using the various extension","type":"text"},{"type":"text","text":" "},{"type":"text","text":"constructors that are declared on the various types that are wrapped."}],"kind":"symbol","role":"symbol","url":"\/documentation\/swiftgodot\/variant","title":"Variant","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Variant","kind":"identifier"}]},"doc://SwiftGodot/documentation/SwiftGodot/SceneTree/notifyGroup(_:notification:)":{"title":"notifyGroup(_:notification:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"notifyGroup","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot10StringNameC","kind":"typeIdentifier","text":"StringName"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"notification"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V","text":"Int32"},{"text":")","kind":"text"}],"type":"topic","abstract":[{"text":"Calls ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Object\/notification(what:reversed:)","type":"reference","isActive":true},{"text":" with the given ","type":"text"},{"type":"codeVoice","code":"notification"},{"type":"text","text":" to all nodes inside this tree added to the "},{"type":"codeVoice","code":"group"},{"text":". See also ","type":"text"},{"code":"callGroup(_:method:)","type":"codeVoice"},{"type":"text","text":" and "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/SceneTree\/setGroup(_:property:value:)","isActive":true,"type":"reference"},{"type":"text","text":"."}],"kind":"symbol","url":"\/documentation\/swiftgodot\/scenetree\/notifygroup(_:notification:)","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/SceneTree\/notifyGroup(_:notification:)"},"doc://SwiftGodot/documentation/SwiftGodot/Object/notification(what:reversed:)":{"title":"notification(what:reversed:)","abstract":[{"type":"text","text":"Sends the given "},{"code":"what","type":"codeVoice"},{"type":"text","text":" notification to all classes inherited by the object, triggering calls to "},{"code":"_notification()","type":"codeVoice"},{"text":", starting from the highest ancestor (the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Object"},{"type":"text","text":" class) and going down to the object’s script."}],"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"notification","kind":"identifier"},{"kind":"text","text":"("},{"text":"what","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s5Int32V","text":"Int32","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"reversed","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":")","kind":"text"}],"type":"topic","role":"symbol","url":"\/documentation\/swiftgodot\/object\/notification(what:reversed:)","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Object\/notification(what:reversed:)"},"doc://SwiftGodot/documentation/SwiftGodot/SceneTree":{"type":"topic","url":"\/documentation\/swiftgodot\/scenetree","abstract":[{"text":"Manages the game loop via a hierarchy of nodes.","type":"text"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"SceneTree"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SceneTree"}],"title":"SceneTree","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/SceneTree"},"doc://SwiftGodot/documentation/SwiftGodot":{"kind":"symbol","url":"\/documentation\/swiftgodot","abstract":[{"type":"text","text":"Framework to write Godot Game Extensions using the Swift Programming Language."}],"role":"collection","title":"SwiftGodot","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot"},"doc://SwiftGodot/documentation/SwiftGodot/SceneTree/callGroup(_:method:_:)":{"title":"callGroup(_:method:_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"callGroup","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"StringName","preciseIdentifier":"s:10SwiftGodot10StringNameC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"method"},{"kind":"text","text":": "},{"text":"StringName","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot10StringNameC"},{"kind":"text","text":", "},{"text":"Variant","preciseIdentifier":"s:10SwiftGodot7VariantC","kind":"typeIdentifier"},{"text":"...)","kind":"text"}],"type":"topic","abstract":[{"text":"Calls ","type":"text"},{"type":"codeVoice","code":"method"},{"type":"text","text":" on each node inside this tree added to the given "},{"type":"codeVoice","code":"group"},{"type":"text","text":". You can pass arguments to "},{"code":"method","type":"codeVoice"},{"type":"text","text":" by specifying them at the end of this method call. Nodes that cannot call "},{"type":"codeVoice","code":"method"},{"text":" (either because the method doesn’t exist or the arguments do not match) are ignored. See also ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/SceneTree\/setGroup(_:property:value:)","type":"reference","isActive":true},{"text":" and ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/SceneTree\/notifyGroup(_:notification:)"},{"type":"text","text":"."}],"kind":"symbol","url":"\/documentation\/swiftgodot\/scenetree\/callgroup(_:method:_:)","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/SceneTree\/callGroup(_:method:_:)"},"doc://SwiftGodot/documentation/SwiftGodot/StringName":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/StringName","type":"topic","url":"\/documentation\/swiftgodot\/stringname","title":"StringName","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"StringName","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"StringName"}],"abstract":[{"text":"A built-in type for unique strings.","type":"text"}]}}}
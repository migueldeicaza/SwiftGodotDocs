{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftgodot\/control"]}],"hierarchy":{"paths":[["doc:\/\/SwiftGodot\/documentation\/SwiftGodot"]]},"kind":"symbol","topicSections":[{"title":"Classes","generated":true,"identifiers":["doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/Signal1"],"anchor":"Classes"},{"identifiers":["doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/SizeFlags"],"title":"Structures","generated":true,"anchor":"Structures"},{"identifiers":["doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/autoTranslate","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/clipContents","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/customMinimumSize","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/focusEntered","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/focusExited","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/focusMode-swift.property","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/focusNeighborBottom","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/focusNeighborLeft","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/focusNeighborRight","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/focusNeighborTop","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/focusNext","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/focusPrevious","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/growHorizontal","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/growVertical","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/guiInput","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/layoutDirection-swift.property","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/localizeNumeralSystem","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/minimumSizeChanged","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/mouseDefaultCursorShape","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/mouseEntered","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/mouseExited","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/mouseFilter-swift.property","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/mouseForcePassScrollEvents","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/offsetBottom","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/offsetLeft","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/offsetRight","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/offsetTop","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/pivotOffset","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/resized","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/rotation","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/rotationDegrees","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/scale","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/shortcutContext","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/sizeFlagsChanged","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/sizeFlagsHorizontal","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/sizeFlagsStretchRatio","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/sizeFlagsVertical","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/theme","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/themeChanged","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/themeTypeVariation","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/tooltipText"],"title":"Instance Properties","generated":true,"anchor":"Instance-Properties"},{"identifiers":["doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/_canDropData(atPosition:data:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/_dropData(atPosition:data:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/_getDragData(atPosition:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/_getMinimumSize()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/_getTooltip(atPosition:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/_guiInput(event:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/_hasPoint(_:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/_makeCustomTooltip(forText:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/_structuredTextParser(args:text:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/acceptEvent()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/addThemeColorOverride(name:color:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/addThemeConstantOverride(name:constant:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/addThemeFontOverride(name:font:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/addThemeFontSizeOverride(name:fontSize:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/addThemeIconOverride(name:texture:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/addThemeStyleboxOverride(name:stylebox:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/beginBulkThemeOverride()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/endBulkThemeOverride()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/findNextValidFocus()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/findPrevValidFocus()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/findValidFocusNeighbor(side:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/forceDrag(data:preview:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/getAnchor(side:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/getBegin()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/getCombinedMinimumSize()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/getCursorShape(position:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/getEnd()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/getGlobalPosition()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/getGlobalRect()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/getMinimumSize()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/getParentAreaSize()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/getParentControl()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/getPosition()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/getRect()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/getScreenPosition()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/getSize()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/getThemeColor(name:themeType:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/getThemeConstant(name:themeType:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/getThemeDefaultBaseScale()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/getThemeDefaultFont()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/getThemeDefaultFontSize()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/getThemeFont(name:themeType:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/getThemeFontSize(name:themeType:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/getThemeIcon(name:themeType:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/getThemeStylebox(name:themeType:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/getTooltip(atPosition:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/grabClickFocus()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/grabFocus()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/hasFocus()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/hasThemeColor(name:themeType:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/hasThemeColorOverride(name:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/hasThemeConstant(name:themeType:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/hasThemeConstantOverride(name:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/hasThemeFont(name:themeType:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/hasThemeFontOverride(name:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/hasThemeFontSize(name:themeType:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/hasThemeFontSizeOverride(name:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/hasThemeIcon(name:themeType:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/hasThemeIconOverride(name:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/hasThemeStylebox(name:themeType:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/hasThemeStyleboxOverride(name:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/isDragSuccessful()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/isLayoutRtl()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/releaseFocus()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/removeThemeColorOverride(name:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/removeThemeConstantOverride(name:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/removeThemeFontOverride(name:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/removeThemeFontSizeOverride(name:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/removeThemeIconOverride(name:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/removeThemeStyleboxOverride(name:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/resetSize()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/setAnchor(side:anchor:keepOffset:pushOppositeAnchor:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/setAnchorAndOffset(side:anchor:offset:pushOppositeAnchor:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/setAnchorsAndOffsetsPreset(_:resizeMode:margin:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/setAnchorsPreset(_:keepOffsets:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/setBegin(position:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/setDragForwarding(dragFunc:canDropFunc:dropFunc:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/setDragPreview(control:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/setEnd(position:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/setGlobalPosition(_:keepOffsets:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/setOffsetsPreset(_:resizeMode:margin:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/setPosition(_:keepOffsets:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/setSize(_:keepOffsets:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/updateMinimumSize()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/warpMouse(position:)"],"title":"Instance Methods","anchor":"Instance-Methods","generated":true},{"anchor":"Type-Properties","identifiers":["doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/godotClassName","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/notificationFocusEnter","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/notificationFocusExit","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/notificationLayoutDirectionChanged","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/notificationMouseEnter","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/notificationMouseEnterSelf","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/notificationMouseExit","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/notificationMouseExitSelf","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/notificationResized","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/notificationScrollBegin","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/notificationScrollEnd","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/notificationThemeChanged"],"generated":true,"title":"Type Properties"},{"generated":true,"anchor":"Enumerations","title":"Enumerations","identifiers":["doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/Anchor","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/CursorShape","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/FocusMode-swift.enum","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/GrowDirection","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/LayoutDirection-swift.enum","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/LayoutPreset","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/LayoutPresetMode","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/MouseFilter-swift.enum","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/TextDirection"]}],"abstract":[{"text":"Base class for all GUI controls. Adapts its position and size based on its parent control.","type":"text"}],"sections":[],"metadata":{"navigatorTitle":[{"text":"Control","kind":"identifier"}],"externalID":"s:10SwiftGodot7ControlC","symbolKind":"class","modules":[{"name":"SwiftGodot"}],"title":"Control","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Control"}],"roleHeading":"Class"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Control"}],"platforms":["macOS"],"languages":["swift"]}]},{"content":[{"type":"heading","level":2,"text":"Overview","anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"Base class for all UI-related nodes. ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control"},{"text":" features a bounding rectangle that defines its extents, an anchor position relative to its parent control or the current viewport, and offsets relative to the anchor. The offsets update automatically when the node, any of its parents, or the screen size change.","type":"text"}]},{"inlineContent":[{"text":"For more information on Godot’s UI system, anchors, offsets, and containers, see the related tutorials in the manual. To build flexible UIs, you’ll need a mix of UI elements that inherit from ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control","isActive":true,"type":"reference"},{"text":" and ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Container"},{"text":" nodes.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"User Interface nodes and input"}],"type":"strong"}]},{"type":"paragraph","inlineContent":[{"text":"Godot propagates input events via viewports. Each ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Viewport"},{"text":" is responsible for propagating ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/InputEvent","type":"reference","isActive":true},{"text":"s to their child nodes. As the ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/SceneTree\/root","isActive":true,"type":"reference"},{"text":" is a ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Window"},{"type":"text","text":", this already happens automatically for all UI elements in your game."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Input events are propagated through the "},{"isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/SceneTree","type":"reference"},{"type":"text","text":" from the root node to all child nodes by calling "},{"isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Node\/_input(event:)","type":"reference"},{"text":". For UI elements specifically, it makes more sense to override the virtual method ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/_guiInput(event:)","type":"reference","isActive":true},{"type":"text","text":", which filters out unrelated input events, such as by checking z-order, "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/mouseFilter-swift.property","type":"reference","isActive":true},{"text":", focus, or if the event was inside of the control’s bounding box.","type":"text"}]},{"inlineContent":[{"text":"Call ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/acceptEvent()","isActive":true},{"type":"text","text":" so no other node receives the event. Once you accept an input, it becomes handled so "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Node\/_unhandledInput(event:)","isActive":true,"type":"reference"},{"type":"text","text":" will not process it."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Only one "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control","isActive":true},{"type":"text","text":" node can be in focus. Only the node in focus will receive events. To get the focus, call "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/grabFocus()","type":"reference","isActive":true},{"type":"text","text":". "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control","isActive":true,"type":"reference"},{"type":"text","text":" nodes lose focus when another node grabs it, or if you hide the node in focus."}]},{"type":"paragraph","inlineContent":[{"text":"Sets ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/mouseFilter-swift.property"},{"type":"text","text":" to .ignore to tell a "},{"isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control","type":"reference"},{"type":"text","text":" node to ignore mouse or touch events. You’ll need it if you place an icon on top of a button."}]},{"type":"paragraph","inlineContent":[{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Theme","isActive":true},{"type":"text","text":" resources change the Control’s appearance. If you change the "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Theme","type":"reference","isActive":true},{"text":" on a ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control","isActive":true},{"text":" node, it affects all of its children. To override some of the theme’s parameters, call one of the ","type":"text"},{"code":"add_theme_*_override","type":"codeVoice"},{"type":"text","text":" methods, like "},{"isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/addThemeFontOverride(name:font:)","type":"reference"},{"text":". You can override the theme with the Inspector.","type":"text"}]},{"type":"aside","name":"Note","style":"note","content":[{"inlineContent":[{"type":"text","text":"Theme items are "},{"inlineContent":[{"type":"text","text":"not"}],"type":"emphasis"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Object","isActive":true},{"text":" properties. This means you can’t access their values using ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Object\/get(property:)"},{"text":" and ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Object\/set(property:value:)","type":"reference"},{"type":"text","text":". Instead, use the "},{"type":"codeVoice","code":"get_theme_*"},{"type":"text","text":" and "},{"code":"add_theme_*_override","type":"codeVoice"},{"text":" methods provided by this class.","type":"text"}],"type":"paragraph"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This object emits the following signals:"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/resized","isActive":true}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/guiInput","isActive":true}]}]},{"content":[{"inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/mouseEntered"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/mouseExited"}]}]},{"content":[{"inlineContent":[{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/focusEntered","isActive":true}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/focusExited","isActive":true,"type":"reference"}]}]},{"content":[{"inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/sizeFlagsChanged"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/minimumSizeChanged","type":"reference","isActive":true}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/themeChanged","isActive":true}]}]}],"type":"unorderedList"}],"kind":"content"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"relationshipsSections":[{"type":"inheritsFrom","identifiers":["doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/CanvasItem"],"kind":"relationships","title":"Inherits From"},{"identifiers":["doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/BaseButton","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/ColorRect","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Container","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GraphEdit","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/ItemList","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Label","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/LineEdit","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/MenuBar","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/NinePatchRect","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Panel","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Range","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/ReferenceRect","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/RichTextLabel","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Separator","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/TabBar","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/TextEdit","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/TextureRect","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Tree","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/VideoStreamPlayer"],"kind":"relationships","type":"inheritedBy","title":"Inherited By"},{"identifiers":["doc:\/\/SwiftGodot\/s23CustomStringConvertibleP","doc:\/\/SwiftGodot\/SQ","doc:\/\/SwiftGodot\/SH","doc:\/\/SwiftGodot\/s12IdentifiableP","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/VariantRepresentable","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/VariantStorable"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control","interfaceLanguage":"swift"},"references":{"doc://SwiftGodot/documentation/SwiftGodot/Control/updateMinimumSize()":{"title":"updateMinimumSize()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"updateMinimumSize"},{"kind":"text","text":"()"}],"type":"topic","role":"symbol","abstract":[{"text":"Invalidates the size cache in this node and in parent nodes up to top level. Intended to be used with ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/getMinimumSize()","isActive":true},{"type":"text","text":" when the return value is changed. Setting "},{"isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/customMinimumSize","type":"reference"},{"type":"text","text":" directly calls this method automatically."}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/updateMinimumSize()","kind":"symbol","url":"\/documentation\/swiftgodot\/control\/updateminimumsize()"},"doc://SwiftGodot/documentation/SwiftGodot/PopupMenu":{"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"PopupMenu","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PopupMenu","navigatorTitle":[{"text":"PopupMenu","kind":"identifier"}],"type":"topic","url":"\/documentation\/swiftgodot\/popupmenu","abstract":[{"type":"text","text":"A modal window used to display a list of options."}],"title":"PopupMenu","role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/Control/hasThemeStyleboxOverride(name:)":{"type":"topic","url":"\/documentation\/swiftgodot\/control\/hasthemestyleboxoverride(name:)","title":"hasThemeStyleboxOverride(name:)","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/hasThemeStyleboxOverride(name:)","role":"symbol","abstract":[{"text":"Returns ","type":"text"},{"type":"codeVoice","code":"true"},{"type":"text","text":" if there is a local override for a theme "},{"isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/StyleBox","type":"reference"},{"type":"text","text":" with the specified "},{"code":"name","type":"codeVoice"},{"text":" in this ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control","type":"reference","isActive":true},{"text":" node.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"hasThemeStyleboxOverride","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"name"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"StringName","preciseIdentifier":"s:10SwiftGodot10StringNameC"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}]},"doc://SwiftGodot/documentation/SwiftGodot/Node":{"type":"topic","url":"\/documentation\/swiftgodot\/node","abstract":[{"text":"Base class for all scene objects.","type":"text"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"text":"Node","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Node"}],"title":"Node","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Node"},"doc://SwiftGodot/documentation/SwiftGodot/Control/getBegin()":{"title":"getBegin()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getBegin"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:10SwiftGodot7Vector2V","text":"Vector2","kind":"typeIdentifier"}],"type":"topic","role":"symbol","abstract":[{"text":"Returns ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/offsetLeft","isActive":true},{"type":"text","text":" and "},{"isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/offsetTop","type":"reference"},{"type":"text","text":". See also "},{"code":"position","type":"codeVoice"},{"text":".","type":"text"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/getBegin()","kind":"symbol","url":"\/documentation\/swiftgodot\/control\/getbegin()"},"doc://SwiftGodot/documentation/SwiftGodot/Control/focusPrevious":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/focusPrevious","title":"focusPrevious","abstract":[{"text":"Tells Godot which node it should give focus to if the user presses [kbd]Shift + Tab[\/kbd] on a keyboard by default. You can change the key by editing the ","type":"text"},{"type":"codeVoice","code":"ProjectSettings\/input\/uiFocusPrev"},{"text":" input action.","type":"text"}],"kind":"symbol","type":"topic","url":"\/documentation\/swiftgodot\/control\/focusprevious","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"focusPrevious"},{"text":": ","kind":"text"},{"text":"NodePath","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot8NodePathC"}]},"doc://SwiftGodot/documentation/SwiftGodot/Control/_canDropData(atPosition:data:)":{"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/swiftgodot\/control\/_candropdata(atposition:data:)","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/_canDropData(atPosition:data:)","abstract":[{"type":"text","text":"Godot calls this method to test if "},{"code":"data","type":"codeVoice"},{"type":"text","text":" from a control’s "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/_getDragData(atPosition:)","isActive":true},{"text":" can be dropped at ","type":"text"},{"code":"atPosition","type":"codeVoice"},{"text":". ","type":"text"},{"code":"atPosition","type":"codeVoice"},{"text":" is local to this control.","type":"text"}],"title":"_canDropData(atPosition:data:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"_canDropData","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"atPosition"},{"text":": ","kind":"text"},{"text":"Vector2","preciseIdentifier":"s:10SwiftGodot7Vector2V","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"data"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot7VariantC","text":"Variant","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}]},"doc://SwiftGodot/documentation/SwiftGodot/Control/_getMinimumSize()":{"abstract":[{"text":"Virtual method to be implemented by the user. Returns the minimum size for this control. Alternative to ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/customMinimumSize","isActive":true},{"type":"text","text":" for controlling minimum size via code. The actual minimum size will be the max value of these two (in each axis separately)."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"_getMinimumSize"},{"text":"() -> ","kind":"text"},{"text":"Vector2","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot7Vector2V"}],"url":"\/documentation\/swiftgodot\/control\/_getminimumsize()","type":"topic","title":"_getMinimumSize()","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/_getMinimumSize()","role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/Control/_guiInput(event:)":{"abstract":[{"text":"Virtual method to be implemented by the user. Use this method to process and accept inputs on UI elements. See ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/acceptEvent()"},{"type":"text","text":"."}],"title":"_guiInput(event:)","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/_guiInput(event:)","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"_guiInput"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"event"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10SwiftGodot10InputEventC","kind":"typeIdentifier","text":"InputEvent"},{"text":"?)","kind":"text"}],"url":"\/documentation\/swiftgodot\/control\/_guiinput(event:)"},"doc://SwiftGodot/documentation/SwiftGodot/Control/isLayoutRtl()":{"url":"\/documentation\/swiftgodot\/control\/islayoutrtl()","type":"topic","kind":"symbol","abstract":[{"text":"Returns ","type":"text"},{"code":"true","type":"codeVoice"},{"type":"text","text":" if layout is right-to-left."}],"role":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/isLayoutRtl()","title":"isLayoutRtl()","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"isLayoutRtl","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}]},"doc://SwiftGodot/documentation/SwiftGodot/Control/notificationMouseEnterSelf":{"title":"notificationMouseEnterSelf","url":"\/documentation\/swiftgodot\/control\/notificationmouseenterself","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/notificationMouseEnterSelf","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"text":"notificationMouseEnterSelf","kind":"identifier"},{"kind":"text","text":": "},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"}],"type":"topic","abstract":[{"text":"Sent when the mouse cursor enters the control’s visible area, that is not occluded behind other Controls or Windows, provided its ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/mouseFilter-swift.property","isActive":true,"type":"reference"},{"type":"text","text":" lets the event reach it and regardless if it’s currently focused or not."}],"kind":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/Control/resized":{"url":"\/documentation\/swiftgodot\/control\/resized","type":"topic","title":"resized","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/resized","kind":"symbol","role":"symbol","abstract":[{"text":"Emitted when the control changes size.","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"resized"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot12SimpleSignalC","text":"SimpleSignal"}]},"doc://SwiftGodot/documentation/SwiftGodot/Control/Anchor":{"type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"Anchor","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/swiftgodot\/control\/anchor","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Anchor"}],"title":"Control.Anchor","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/Anchor","abstract":[]},"doc://SwiftGodot/documentation/SwiftGodot/Control/addThemeStyleboxOverride(name:stylebox:)":{"kind":"symbol","url":"\/documentation\/swiftgodot\/control\/addthemestyleboxoverride(name:stylebox:)","abstract":[{"type":"text","text":"Creates a local override for a theme "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/StyleBox","isActive":true},{"text":" with the specified ","type":"text"},{"type":"codeVoice","code":"name"},{"type":"text","text":". Local overrides always take precedence when fetching theme items for the control. An override can be removed with "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/removeThemeStyleboxOverride(name:)","isActive":true},{"type":"text","text":"."}],"title":"addThemeStyleboxOverride(name:stylebox:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"addThemeStyleboxOverride"},{"kind":"text","text":"("},{"text":"name","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StringName","preciseIdentifier":"s:10SwiftGodot10StringNameC","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"stylebox","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"StyleBox","preciseIdentifier":"s:10SwiftGodot8StyleBoxC"},{"text":"?)","kind":"text"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/addThemeStyleboxOverride(name:stylebox:)","type":"topic"},"doc://SwiftGodot/documentation/SwiftGodot/Separator":{"abstract":[{"type":"text","text":"Abstract base class for separators."}],"type":"topic","role":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Separator","url":"\/documentation\/swiftgodot\/separator","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Separator"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Separator","kind":"identifier"}],"title":"Separator"},"doc://SwiftGodot/documentation/SwiftGodot/GraphEdit":{"abstract":[{"text":"An editor for graph-like structures, using ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GraphNode","isActive":true},{"text":"s.","type":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GraphEdit","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"GraphEdit","kind":"identifier"}],"role":"symbol","title":"GraphEdit","navigatorTitle":[{"kind":"identifier","text":"GraphEdit"}],"url":"\/documentation\/swiftgodot\/graphedit"},"doc://SwiftGodot/documentation/SwiftGodot/Control/MouseFilter-swift.enum":{"type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"MouseFilter"}],"url":"\/documentation\/swiftgodot\/control\/mousefilter-swift.enum","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"MouseFilter","kind":"identifier"}],"title":"Control.MouseFilter","abstract":[],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/MouseFilter-swift.enum"},"doc://SwiftGodot/documentation/SwiftGodot/Control/getThemeDefaultFont()":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"getThemeDefaultFont"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Font","preciseIdentifier":"s:10SwiftGodot4FontC"},{"kind":"text","text":"?"}],"type":"topic","abstract":[{"text":"Returns the default font from the first matching ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Theme"},{"type":"text","text":" in the tree if that "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Theme"},{"type":"text","text":" has a valid "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Theme\/defaultFont"},{"type":"text","text":" value."}],"url":"\/documentation\/swiftgodot\/control\/getthemedefaultfont()","kind":"symbol","title":"getThemeDefaultFont()","role":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/getThemeDefaultFont()"},"doc://SwiftGodot/documentation/SwiftGodot/Control/getThemeDefaultBaseScale()":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"getThemeDefaultBaseScale"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:Sd","text":"Double","kind":"typeIdentifier"}],"role":"symbol","abstract":[{"type":"text","text":"Returns the default base scale value from the first matching "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Theme","isActive":true,"type":"reference"},{"text":" in the tree if that ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Theme","type":"reference"},{"text":" has a valid ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Theme\/defaultBaseScale","isActive":true,"type":"reference"},{"text":" value.","type":"text"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/getThemeDefaultBaseScale()","url":"\/documentation\/swiftgodot\/control\/getthemedefaultbasescale()","title":"getThemeDefaultBaseScale()","kind":"symbol","type":"topic"},"doc://SwiftGodot/documentation/SwiftGodot/Control/getThemeIcon(name:themeType:)":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"getThemeIcon","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"name"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot10StringNameC","text":"StringName","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"themeType"},{"text":": ","kind":"text"},{"text":"StringName","preciseIdentifier":"s:10SwiftGodot10StringNameC","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Texture2D","preciseIdentifier":"s:10SwiftGodot9Texture2DC"},{"kind":"text","text":"?"}],"abstract":[{"text":"Returns an icon from the first matching ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Theme","isActive":true},{"type":"text","text":" in the tree if that "},{"isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Theme","type":"reference"},{"text":" has an icon item with the specified ","type":"text"},{"type":"codeVoice","code":"name"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"themeType"},{"text":".","type":"text"}],"role":"symbol","type":"topic","url":"\/documentation\/swiftgodot\/control\/getthemeicon(name:themetype:)","kind":"symbol","title":"getThemeIcon(name:themeType:)","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/getThemeIcon(name:themeType:)"},"doc://SwiftGodot/documentation/SwiftGodot/Control/grabFocus()":{"url":"\/documentation\/swiftgodot\/control\/grabfocus()","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/grabFocus()","title":"grabFocus()","kind":"symbol","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Steal the focus from another control and become the focused control (see "},{"isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/focusMode-swift.property","type":"reference"},{"type":"text","text":")."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"grabFocus","kind":"identifier"},{"kind":"text","text":"()"}]},"doc://SwiftGodot/documentation/SwiftGodot/Object":{"abstract":[{"type":"text","text":"Base class for all other classes in the engine."}],"url":"\/documentation\/swiftgodot\/object","role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Object","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"Object","kind":"identifier"}],"navigatorTitle":[{"text":"Object","kind":"identifier"}],"title":"Object"},"doc://SwiftGodot/documentation/SwiftGodot/Control/getThemeDefaultFontSize()":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"getThemeDefaultFontSize","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier","text":"Int32"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/getThemeDefaultFontSize()","abstract":[{"type":"text","text":"Returns the default font size value from the first matching "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Theme","isActive":true},{"text":" in the tree if that ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Theme","isActive":true,"type":"reference"},{"text":" has a valid ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Theme\/defaultFontSize","type":"reference","isActive":true},{"text":" value.","type":"text"}],"role":"symbol","url":"\/documentation\/swiftgodot\/control\/getthemedefaultfontsize()","title":"getThemeDefaultFontSize()"},"doc://SwiftGodot/documentation/SwiftGodot/Control/mouseEntered":{"type":"topic","title":"mouseEntered","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/mouseEntered","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"mouseEntered"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SimpleSignal","preciseIdentifier":"s:10SwiftGodot12SimpleSignalC"}],"url":"\/documentation\/swiftgodot\/control\/mouseentered","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Emitted when the mouse cursor enters the control’s (or any child control’s) visible area, that is not occluded behind other Controls or Windows, provided its "},{"isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/mouseFilter-swift.property","type":"reference"},{"type":"text","text":" lets the event reach it and regardless if it’s currently focused or not."}]},"doc://SwiftGodot/SQ":{"type":"unresolvable","identifier":"doc:\/\/SwiftGodot\/SQ","title":"Swift.Equatable"},"doc://SwiftGodot/documentation/SwiftGodot/Control/LayoutPreset":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"LayoutPreset"}],"type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/LayoutPreset","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"LayoutPreset","kind":"identifier"}],"title":"Control.LayoutPreset","abstract":[],"url":"\/documentation\/swiftgodot\/control\/layoutpreset"},"doc://SwiftGodot/documentation/SwiftGodot/StyleBox":{"type":"topic","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"StyleBox","kind":"identifier"}],"role":"symbol","title":"StyleBox","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/StyleBox","abstract":[{"text":"Abstract base class for defining stylized boxes for UI elements.","type":"text"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"StyleBox"}],"url":"\/documentation\/swiftgodot\/stylebox"},"doc://SwiftGodot/documentation/SwiftGodot/Control/hasThemeColor(name:themeType:)":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/hasThemeColor(name:themeType:)","kind":"symbol","abstract":[{"text":"Returns ","type":"text"},{"code":"true","type":"codeVoice"},{"type":"text","text":" if there is a matching "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Theme"},{"text":" in the tree that has a color item with the specified ","type":"text"},{"type":"codeVoice","code":"name"},{"type":"text","text":" and "},{"type":"codeVoice","code":"themeType"},{"type":"text","text":"."}],"role":"symbol","url":"\/documentation\/swiftgodot\/control\/hasthemecolor(name:themetype:)","title":"hasThemeColor(name:themeType:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hasThemeColor","kind":"identifier"},{"kind":"text","text":"("},{"text":"name","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot10StringNameC","kind":"typeIdentifier","text":"StringName"},{"kind":"text","text":", "},{"text":"themeType","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot10StringNameC","text":"StringName"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"type":"topic"},"doc://SwiftGodot/documentation/SwiftGodot/Control/getPosition()":{"type":"topic","title":"getPosition()","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/getPosition()","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"getPosition"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot7Vector2V","text":"Vector2"}],"url":"\/documentation\/swiftgodot\/control\/getposition()","role":"symbol","kind":"symbol","abstract":[]},"doc://SwiftGodot/documentation/SwiftGodot/Control/offsetTop":{"title":"offsetTop","type":"topic","url":"\/documentation\/swiftgodot\/control\/offsettop","abstract":[{"type":"text","text":"Distance between the node’s top edge and its parent control, based on "},{"type":"codeVoice","code":"anchorTop"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/offsetTop","role":"symbol","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"offsetTop"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sd","kind":"typeIdentifier","text":"Double"}]},"doc://SwiftGodot/documentation/SwiftGodot/Control/hasThemeColorOverride(name:)":{"type":"topic","title":"hasThemeColorOverride(name:)","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/hasThemeColorOverride(name:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"hasThemeColorOverride","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10SwiftGodot10StringNameC","text":"StringName","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"url":"\/documentation\/swiftgodot\/control\/hasthemecoloroverride(name:)","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Returns "},{"type":"codeVoice","code":"true"},{"text":" if there is a local override for a theme ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Color","isActive":true},{"text":" with the specified ","type":"text"},{"type":"codeVoice","code":"name"},{"type":"text","text":" in this "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control","type":"reference","isActive":true},{"type":"text","text":" node."}]},"doc://SwiftGodot/documentation/SwiftGodot/Node/_input(event:)":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Node\/_input(event:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"_input","kind":"identifier"},{"text":"(","kind":"text"},{"text":"event","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10SwiftGodot10InputEventC","text":"InputEvent","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","kind":"symbol","title":"_input(event:)","abstract":[{"type":"text","text":"Called when there is an input event. The input event propagates up through the node tree until a node consumes it."}],"type":"topic","url":"\/documentation\/swiftgodot\/node\/_input(event:)"},"doc://SwiftGodot/documentation/SwiftGodot/Control/warpMouse(position:)":{"type":"topic","abstract":[{"text":"Moves the mouse cursor to ","type":"text"},{"code":"position","type":"codeVoice"},{"text":", relative to ","type":"text"},{"type":"codeVoice","code":"position"},{"text":" of this ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control","isActive":true},{"text":".","type":"text"}],"role":"symbol","title":"warpMouse(position:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"warpMouse","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"position"},{"text":": ","kind":"text"},{"text":"Vector2","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot7Vector2V"},{"text":")","kind":"text"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/warpMouse(position:)","url":"\/documentation\/swiftgodot\/control\/warpmouse(position:)","kind":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/Control/_getTooltip(atPosition:)":{"title":"_getTooltip(atPosition:)","type":"topic","url":"\/documentation\/swiftgodot\/control\/_gettooltip(atposition:)","abstract":[{"type":"text","text":"Virtual method to be implemented by the user. Returns the tooltip text for the position "},{"type":"codeVoice","code":"atPosition"},{"type":"text","text":" in control’s local coordinates, which will typically appear when the cursor is resting over this control. See "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/getTooltip(atPosition:)","isActive":true},{"text":".","type":"text"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/_getTooltip(atPosition:)","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"_getTooltip"},{"kind":"text","text":"("},{"text":"atPosition","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot7Vector2V","text":"Vector2","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"}]},"doc://SwiftGodot/documentation/SwiftGodot/TreeItem":{"abstract":[{"type":"text","text":"An internal control for a single item inside "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Tree","isActive":true,"type":"reference"},{"type":"text","text":"."}],"title":"TreeItem","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TreeItem"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/TreeItem","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TreeItem"}],"role":"symbol","url":"\/documentation\/swiftgodot\/treeitem"},"doc://SwiftGodot/documentation/SwiftGodot/Control/getGlobalRect()":{"role":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/getGlobalRect()","title":"getGlobalRect()","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"getGlobalRect","kind":"identifier"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Rect2","preciseIdentifier":"s:10SwiftGodot5Rect2V"}],"abstract":[{"type":"text","text":"Returns the position and size of the control relative to the containing canvas. See "},{"code":"globalPosition","type":"codeVoice"},{"type":"text","text":" and "},{"code":"size","type":"codeVoice"},{"type":"text","text":"."}],"url":"\/documentation\/swiftgodot\/control\/getglobalrect()","kind":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/Control/findValidFocusNeighbor(side:)":{"type":"topic","title":"findValidFocusNeighbor(side:)","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/findValidFocusNeighbor(side:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"findValidFocusNeighbor"},{"kind":"text","text":"("},{"text":"side","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Side","preciseIdentifier":"s:10SwiftGodot4SideO"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot7ControlC","text":"Control"},{"kind":"text","text":"?"}],"url":"\/documentation\/swiftgodot\/control\/findvalidfocusneighbor(side:)","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Finds the next "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control","isActive":true,"type":"reference"},{"text":" that can receive the focus on the specified ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Side","isActive":true},{"type":"text","text":"."}]},"doc://SwiftGodot/documentation/SwiftGodot/Control/_getDragData(atPosition:)":{"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/swiftgodot\/control\/_getdragdata(atposition:)","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/_getDragData(atPosition:)","abstract":[{"text":"Godot calls this method to get data that can be dragged and dropped onto controls that expect drop data. Returns ","type":"text"},{"type":"codeVoice","code":"null"},{"type":"text","text":" if there is no data to drag. Controls that want to receive drop data should implement "},{"isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/_canDropData(atPosition:data:)","type":"reference"},{"text":" and ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/_dropData(atPosition:data:)","isActive":true},{"type":"text","text":". "},{"type":"codeVoice","code":"atPosition"},{"text":" is local to this control. Drag may be forced with ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/forceDrag(data:preview:)","isActive":true,"type":"reference"},{"text":".","type":"text"}],"title":"_getDragData(atPosition:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"_getDragData"},{"text":"(","kind":"text"},{"text":"atPosition","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10SwiftGodot7Vector2V","text":"Vector2","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Variant","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot7VariantC"}]},"doc://SwiftGodot/documentation/SwiftGodot/ItemList":{"role":"symbol","abstract":[{"text":"A vertical list of selectable items with one or multiple columns.","type":"text"}],"kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ItemList"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/ItemList","navigatorTitle":[{"kind":"identifier","text":"ItemList"}],"type":"topic","url":"\/documentation\/swiftgodot\/itemlist","title":"ItemList"},"doc://SwiftGodot/documentation/SwiftGodot/Control/_structuredTextParser(args:text:)":{"url":"\/documentation\/swiftgodot\/control\/_structuredtextparser(args:text:)","kind":"symbol","role":"symbol","title":"_structuredTextParser(args:text:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"_structuredTextParser","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"args"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot6GArrayC","text":"GArray","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"text","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"VariantCollection","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot17VariantCollectionC"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot8Vector3iV","text":"Vector3i"},{"text":">","kind":"text"}],"type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/_structuredTextParser(args:text:)","abstract":[{"type":"text","text":"User defined BiDi algorithm override function."}]},"doc://SwiftGodot/documentation/SwiftGodot/Control/releaseFocus()":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"releaseFocus","kind":"identifier"},{"kind":"text","text":"()"}],"type":"topic","abstract":[{"type":"text","text":"Give up the focus. No other control will be able to receive input."}],"url":"\/documentation\/swiftgodot\/control\/releasefocus()","kind":"symbol","role":"symbol","title":"releaseFocus()","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/releaseFocus()"},"doc://SwiftGodot/documentation/SwiftGodot/Control/focusNeighborLeft":{"title":"focusNeighborLeft","type":"topic","url":"\/documentation\/swiftgodot\/control\/focusneighborleft","abstract":[{"type":"text","text":"Tells Godot which node it should give focus to if the user presses the left arrow on the keyboard or left on a gamepad by default. You can change the key by editing the "},{"type":"codeVoice","code":"ProjectSettings\/input\/uiLeft"},{"text":" input action. The node must be a ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control","isActive":true,"type":"reference"},{"type":"text","text":". If this property is not set, Godot will give focus to the closest "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control"},{"type":"text","text":" to the left of this one."}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/focusNeighborLeft","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"focusNeighborLeft"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot8NodePathC","text":"NodePath"}]},"doc://SwiftGodot/documentation/SwiftGodot/Control/SizeFlags":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SizeFlags","kind":"identifier"}],"title":"Control.SizeFlags","url":"\/documentation\/swiftgodot\/control\/sizeflags","role":"symbol","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/SizeFlags","abstract":[],"kind":"symbol","navigatorTitle":[{"text":"SizeFlags","kind":"identifier"}]},"doc://SwiftGodot/documentation/SwiftGodot/Button":{"abstract":[{"type":"text","text":"A themed button that can contain text and an icon."}],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"Button","kind":"identifier"}],"navigatorTitle":[{"text":"Button","kind":"identifier"}],"role":"symbol","kind":"symbol","url":"\/documentation\/swiftgodot\/button","type":"topic","title":"Button","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Button"},"doc://SwiftGodot/documentation/SwiftGodot/Control/acceptEvent()":{"kind":"symbol","role":"symbol","title":"acceptEvent()","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/acceptEvent()","url":"\/documentation\/swiftgodot\/control\/acceptevent()","type":"topic","abstract":[{"text":"Marks an input event as handled. Once you accept an input event, it stops propagating, even to nodes listening to ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Node\/_unhandledInput(event:)","isActive":true},{"text":" or ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Node\/_unhandledKeyInput(event:)"},{"text":".","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"acceptEvent","kind":"identifier"},{"kind":"text","text":"()"}]},"doc://SwiftGodot/documentation/SwiftGodot/Control/getCombinedMinimumSize()":{"url":"\/documentation\/swiftgodot\/control\/getcombinedminimumsize()","type":"topic","abstract":[{"type":"text","text":"Returns combined minimum size from "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/customMinimumSize"},{"text":" and ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/getMinimumSize()"},{"text":".","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"getCombinedMinimumSize","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot7Vector2V","kind":"typeIdentifier","text":"Vector2"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/getCombinedMinimumSize()","kind":"symbol","title":"getCombinedMinimumSize()"},"doc://SwiftGodot/documentation/SwiftGodot/BaseButton":{"kind":"symbol","title":"BaseButton","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/BaseButton","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BaseButton"}],"role":"symbol","url":"\/documentation\/swiftgodot\/basebutton","type":"topic","abstract":[{"type":"text","text":"Abstract base class for GUI buttons."}],"navigatorTitle":[{"text":"BaseButton","kind":"identifier"}]},"doc://SwiftGodot/s23CustomStringConvertibleP":{"type":"unresolvable","identifier":"doc:\/\/SwiftGodot\/s23CustomStringConvertibleP","title":"Swift.CustomStringConvertible"},"doc://SwiftGodot/documentation/SwiftGodot/Control/getParentAreaSize()":{"title":"getParentAreaSize()","type":"topic","url":"\/documentation\/swiftgodot\/control\/getparentareasize()","abstract":[{"type":"text","text":"Returns the width\/height occupied in the parent control."}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/getParentAreaSize()","role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"getParentAreaSize"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot7Vector2V","text":"Vector2"}]},"doc://SwiftGodot/documentation/SwiftGodot/Control/shortcutContext":{"role":"symbol","kind":"symbol","type":"topic","title":"shortcutContext","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/shortcutContext","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"shortcutContext"},{"kind":"text","text":": "},{"text":"Node","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot4NodeC"},{"kind":"text","text":"?"}],"abstract":[{"text":"The ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Node","isActive":true,"type":"reference"},{"type":"text","text":" which must be a parent of the focused "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control","isActive":true},{"text":" for the shortcut to be activated. If ","type":"text"},{"type":"codeVoice","code":"null"},{"type":"text","text":", the shortcut can be activated when any control is focused (a global shortcut). This allows shortcuts to be accepted only when the user has a certain area of the GUI focused."}],"url":"\/documentation\/swiftgodot\/control\/shortcutcontext"},"doc://SwiftGodot/documentation/SwiftGodot/Control":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Control","kind":"identifier"}],"url":"\/documentation\/swiftgodot\/control","navigatorTitle":[{"kind":"identifier","text":"Control"}],"abstract":[{"type":"text","text":"Base class for all GUI controls. Adapts its position and size based on its parent control."}],"kind":"symbol","type":"topic","title":"Control","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control","role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/Control/focusNext":{"type":"topic","title":"focusNext","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/focusNext","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"focusNext"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot8NodePathC","text":"NodePath"}],"url":"\/documentation\/swiftgodot\/control\/focusnext","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Tells Godot which node it should give focus to if the user presses [kbd]Tab[\/kbd] on a keyboard by default. You can change the key by editing the "},{"type":"codeVoice","code":"ProjectSettings\/input\/uiFocusNext"},{"type":"text","text":" input action."}]},"doc://SwiftGodot/documentation/SwiftGodot/Control/endBulkThemeOverride()":{"url":"\/documentation\/swiftgodot\/control\/endbulkthemeoverride()","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"endBulkThemeOverride"},{"kind":"text","text":"()"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/endBulkThemeOverride()","abstract":[{"text":"Ends a bulk theme override update. See ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/beginBulkThemeOverride()"},{"type":"text","text":"."}],"kind":"symbol","type":"topic","title":"endBulkThemeOverride()","role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/GraphNode":{"abstract":[{"type":"text","text":"A container with connection ports, representing a node in a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GraphEdit"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"GraphNode","kind":"identifier"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GraphNode","kind":"symbol","type":"topic","url":"\/documentation\/swiftgodot\/graphnode","title":"GraphNode","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"GraphNode"}]},"doc://SwiftGodot/documentation/SwiftGodot/Control/removeThemeColorOverride(name:)":{"title":"removeThemeColorOverride(name:)","type":"topic","url":"\/documentation\/swiftgodot\/control\/removethemecoloroverride(name:)","role":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/removeThemeColorOverride(name:)","abstract":[{"type":"text","text":"Removes a local override for a theme "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Color","isActive":true},{"type":"text","text":" with the specified "},{"code":"name","type":"codeVoice"},{"text":" previously added by ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/addThemeColorOverride(name:color:)","type":"reference"},{"type":"text","text":" or via the Inspector dock."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"removeThemeColorOverride","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"name"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"StringName","preciseIdentifier":"s:10SwiftGodot10StringNameC"},{"text":")","kind":"text"}],"kind":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/Control/getThemeColor(name:themeType:)":{"title":"getThemeColor(name:themeType:)","url":"\/documentation\/swiftgodot\/control\/getthemecolor(name:themetype:)","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/getThemeColor(name:themeType:)","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Returns a "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Color","isActive":true,"type":"reference"},{"text":" from the first matching ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Theme","isActive":true},{"type":"text","text":" in the tree if that "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Theme"},{"type":"text","text":" has a color item with the specified "},{"type":"codeVoice","code":"name"},{"text":" and ","type":"text"},{"code":"themeType","type":"codeVoice"},{"type":"text","text":". If "},{"type":"codeVoice","code":"themeType"},{"type":"text","text":" is omitted the class name of the current control is used as the type, or "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/themeTypeVariation","type":"reference","isActive":true},{"text":" if it is defined. If the type is a class name its parent classes are also checked, in order of inheritance. If the type is a variation its base types are checked, in order of dependency, then the control’s class name and its parent classes are checked.","type":"text"}],"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"getThemeColor","kind":"identifier"},{"kind":"text","text":"("},{"text":"name","kind":"externalParam"},{"kind":"text","text":": "},{"text":"StringName","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot10StringNameC"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"themeType"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10SwiftGodot10StringNameC","kind":"typeIdentifier","text":"StringName"},{"text":") -> ","kind":"text"},{"text":"Color","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot5ColorV"}]},"doc://SwiftGodot/documentation/SwiftGodot/Control/notificationScrollEnd":{"abstract":[{"type":"text","text":"Sent when this node is inside a "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/ScrollContainer","isActive":true},{"text":" which has stopped being scrolled when dragging the scrollable area ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"with a touch event"}]},{"text":". This notification is ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"not"}]},{"text":" sent when scrolling by dragging the scrollbar, scrolling with the mouse wheel or scrolling with keyboard\/gamepad events.","type":"text"}],"title":"notificationScrollEnd","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/notificationScrollEnd","url":"\/documentation\/swiftgodot\/control\/notificationscrollend","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"notificationScrollEnd","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"}],"kind":"symbol","role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/Theme/defaultFontSize":{"abstract":[{"type":"text","text":"The default font size of this theme resource. Used as the default value when trying to fetch a font size value that doesn’t exist in this theme or is in invalid state. If the default font size is also missing or invalid, the engine fallback value is used (see "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/ThemeDB\/fallbackFontSize","isActive":true,"type":"reference"},{"type":"text","text":")."}],"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"defaultFontSize"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier","text":"Int32"}],"url":"\/documentation\/swiftgodot\/theme\/defaultfontsize","kind":"symbol","title":"defaultFontSize","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Theme\/defaultFontSize"},"doc://SwiftGodot/documentation/SwiftGodot/Control/tooltipText":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/tooltipText","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"tooltipText"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"The default tooltip text. The tooltip appears when the user’s mouse cursor stays idle over this control for a few moments, provided that the "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/mouseFilter-swift.property","type":"reference","isActive":true},{"type":"text","text":" property is not .ignore. The time required for the tooltip to appear can be changed with the "},{"code":"ProjectSettings\/gui\/timers\/tooltipDelaySec","type":"codeVoice"},{"type":"text","text":" option. See also "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/getTooltip(atPosition:)","type":"reference","isActive":true},{"type":"text","text":"."}],"role":"symbol","title":"tooltipText","url":"\/documentation\/swiftgodot\/control\/tooltiptext"},"doc://SwiftGodot/documentation/SwiftGodot/Control/mouseForcePassScrollEvents":{"type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"mouseForcePassScrollEvents"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/mouseForcePassScrollEvents","role":"symbol","kind":"symbol","title":"mouseForcePassScrollEvents","abstract":[{"type":"text","text":"When enabled, scroll wheel events processed by "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/_guiInput(event:)","isActive":true,"type":"reference"},{"type":"text","text":" will be passed to the parent control even if "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/mouseFilter-swift.property"},{"text":" is set to .stop. As it defaults to true, this allows nested scrollable containers to work out of the box.","type":"text"}],"url":"\/documentation\/swiftgodot\/control\/mouseforcepassscrollevents"},"doc://SwiftGodot/documentation/SwiftGodot/Control/CursorShape":{"url":"\/documentation\/swiftgodot\/control\/cursorshape","kind":"symbol","title":"Control.CursorShape","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"CursorShape"}],"role":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/CursorShape","navigatorTitle":[{"text":"CursorShape","kind":"identifier"}],"abstract":[],"type":"topic"},"doc://SwiftGodot/documentation/SwiftGodot/Control/getEnd()":{"url":"\/documentation\/swiftgodot\/control\/getend()","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"getEnd"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot7Vector2V","text":"Vector2"}],"abstract":[{"type":"text","text":"Returns "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/offsetRight","type":"reference","isActive":true},{"text":" and ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/offsetBottom"},{"text":".","type":"text"}],"kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/getEnd()","title":"getEnd()"},"doc://SwiftGodot/documentation/SwiftGodot/Control/mouseFilter-swift.property":{"abstract":[{"type":"text","text":"Controls whether the control will be able to receive mouse button input events through "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/_guiInput(event:)","isActive":true,"type":"reference"},{"text":" and how these events should be handled. Also controls whether the control can receive the [signal mouse_entered], and [signal mouse_exited] signals. See the constants to learn what each does.","type":"text"}],"title":"mouseFilter","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/mouseFilter-swift.property","type":"topic","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"mouseFilter","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Control","preciseIdentifier":"s:10SwiftGodot7ControlC"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"MouseFilter","preciseIdentifier":"s:10SwiftGodot7ControlC11MouseFilterO"}],"url":"\/documentation\/swiftgodot\/control\/mousefilter-swift.property"},"doc://SwiftGodot/documentation/SwiftGodot/Control/hasThemeConstant(name:themeType:)":{"title":"hasThemeConstant(name:themeType:)","type":"topic","url":"\/documentation\/swiftgodot\/control\/hasthemeconstant(name:themetype:)","abstract":[{"type":"text","text":"Returns "},{"type":"codeVoice","code":"true"},{"type":"text","text":" if there is a matching "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Theme","isActive":true},{"type":"text","text":" in the tree that has a constant item with the specified "},{"type":"codeVoice","code":"name"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"themeType"},{"text":".","type":"text"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/hasThemeConstant(name:themeType:)","role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hasThemeConstant","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"text":"StringName","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot10StringNameC"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"themeType"},{"text":": ","kind":"text"},{"text":"StringName","preciseIdentifier":"s:10SwiftGodot10StringNameC","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}]},"doc://SwiftGodot/documentation/SwiftGodot/Control/getGlobalPosition()":{"url":"\/documentation\/swiftgodot\/control\/getglobalposition()","type":"topic","kind":"symbol","abstract":[],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getGlobalPosition","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot7Vector2V","text":"Vector2"}],"role":"symbol","title":"getGlobalPosition()","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/getGlobalPosition()"},"doc://SwiftGodot/documentation/SwiftGodot/Control/theme":{"title":"theme","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/theme","url":"\/documentation\/swiftgodot\/control\/theme","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"theme"},{"kind":"text","text":": "},{"text":"Theme","preciseIdentifier":"s:10SwiftGodot5ThemeC","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"kind":"symbol","role":"symbol","type":"topic","abstract":[{"type":"text","text":"The "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Theme","isActive":true,"type":"reference"},{"type":"text","text":" resource this node and all its "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control"},{"type":"text","text":" and "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Window","isActive":true,"type":"reference"},{"type":"text","text":" children use. If a child node has its own "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Theme"},{"type":"text","text":" resource set, theme items are merged with child’s definitions having higher priority."}]},"doc://SwiftGodot/documentation/SwiftGodot/Control/setAnchorsAndOffsetsPreset(_:resizeMode:margin:)":{"type":"topic","title":"setAnchorsAndOffsetsPreset(_:resizeMode:margin:)","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/setAnchorsAndOffsetsPreset(_:resizeMode:margin:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"setAnchorsAndOffsetsPreset"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot7ControlC","text":"Control"},{"text":".","kind":"text"},{"text":"LayoutPreset","preciseIdentifier":"s:10SwiftGodot7ControlC12LayoutPresetO","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"resizeMode"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10SwiftGodot7ControlC","text":"Control","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot7ControlC16LayoutPresetModeO","text":"LayoutPresetMode"},{"kind":"text","text":", "},{"kind":"externalParam","text":"margin"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"},{"text":")","kind":"text"}],"url":"\/documentation\/swiftgodot\/control\/setanchorsandoffsetspreset(_:resizemode:margin:)","role":"symbol","kind":"symbol","abstract":[{"text":"Sets both anchor preset and offset preset. See ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/setAnchorsPreset(_:keepOffsets:)","isActive":true,"type":"reference"},{"text":" and ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/setOffsetsPreset(_:resizeMode:margin:)","isActive":true,"type":"reference"},{"type":"text","text":"."}]},"doc://SwiftGodot/documentation/SwiftGodot/TextureRect":{"type":"topic","url":"\/documentation\/swiftgodot\/texturerect","role":"symbol","abstract":[{"type":"text","text":"A control that displays a texture."}],"kind":"symbol","navigatorTitle":[{"text":"TextureRect","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TextureRect"}],"title":"TextureRect","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/TextureRect"},"doc://SwiftGodot/documentation/SwiftGodot/Object/get(property:)":{"role":"symbol","type":"topic","title":"get(property:)","kind":"symbol","abstract":[{"type":"text","text":"Returns the "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Variant","isActive":true},{"text":" value of the given ","type":"text"},{"code":"property","type":"codeVoice"},{"text":". If the ","type":"text"},{"code":"property","type":"codeVoice"},{"text":" does not exist, this method returns ","type":"text"},{"code":"null","type":"codeVoice"},{"type":"text","text":"."}],"url":"\/documentation\/swiftgodot\/object\/get(property:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"get","kind":"identifier"},{"text":"(","kind":"text"},{"text":"property","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"StringName","preciseIdentifier":"s:10SwiftGodot10StringNameC"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot7VariantC","text":"Variant","kind":"typeIdentifier"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Object\/get(property:)"},"doc://SwiftGodot/SH":{"identifier":"doc:\/\/SwiftGodot\/SH","type":"unresolvable","title":"Swift.Hashable"},"doc://SwiftGodot/documentation/SwiftGodot/ReferenceRect":{"abstract":[{"text":"A rectangle hint for designing UIs.","type":"text"}],"title":"ReferenceRect","navigatorTitle":[{"text":"ReferenceRect","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/ReferenceRect","url":"\/documentation\/swiftgodot\/referencerect","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ReferenceRect"}],"kind":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/Control/focusMode-swift.property":{"kind":"symbol","title":"focusMode","role":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/focusMode-swift.property","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"focusMode","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Control","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot7ControlC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot7ControlC9FocusModeO","text":"FocusMode"}],"type":"topic","url":"\/documentation\/swiftgodot\/control\/focusmode-swift.property","abstract":[{"type":"text","text":"The focus access mode for the control (None, Click or All). Only one Control can be focused at the same time, and it will receive keyboard, gamepad, and mouse signals."}]},"doc://SwiftGodot/documentation/SwiftGodot/Control/getThemeFont(name:themeType:)":{"type":"topic","title":"getThemeFont(name:themeType:)","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/getThemeFont(name:themeType:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"getThemeFont"},{"kind":"text","text":"("},{"text":"name","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StringName","preciseIdentifier":"s:10SwiftGodot10StringNameC","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"themeType"},{"kind":"text","text":": "},{"text":"StringName","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot10StringNameC"},{"text":") -> ","kind":"text"},{"text":"Font","preciseIdentifier":"s:10SwiftGodot4FontC","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"url":"\/documentation\/swiftgodot\/control\/getthemefont(name:themetype:)","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Returns a "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Font","isActive":true,"type":"reference"},{"text":" from the first matching ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Theme","isActive":true,"type":"reference"},{"text":" in the tree if that ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Theme","type":"reference"},{"type":"text","text":" has a font item with the specified "},{"type":"codeVoice","code":"name"},{"type":"text","text":" and "},{"type":"codeVoice","code":"themeType"},{"type":"text","text":"."}]},"doc://SwiftGodot/documentation/SwiftGodot/Control/setEnd(position:)":{"title":"setEnd(position:)","type":"topic","url":"\/documentation\/swiftgodot\/control\/setend(position:)","abstract":[{"type":"text","text":"Sets "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/offsetRight","isActive":true},{"type":"text","text":" and "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/offsetBottom","type":"reference","isActive":true},{"type":"text","text":" at the same time."}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/setEnd(position:)","role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"setEnd","kind":"identifier"},{"text":"(","kind":"text"},{"text":"position","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot7Vector2V","text":"Vector2"},{"text":")","kind":"text"}]},"doc://SwiftGodot/documentation/SwiftGodot/SceneTree/currentScene":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/SceneTree\/currentScene","title":"currentScene","kind":"symbol","url":"\/documentation\/swiftgodot\/scenetree\/currentscene","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"currentScene","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Node","preciseIdentifier":"s:10SwiftGodot4NodeC"},{"text":"?","kind":"text"}],"type":"topic","abstract":[{"type":"text","text":"The root node of the currently loaded main scene, usually as a direct child of "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/SceneTree\/root","isActive":true},{"type":"text","text":". See also "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/SceneTree\/changeSceneToFile(path:)","type":"reference","isActive":true},{"type":"text","text":", "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/SceneTree\/changeSceneToPacked(packedScene:)","type":"reference","isActive":true},{"type":"text","text":", and "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/SceneTree\/reloadCurrentScene()","isActive":true},{"type":"text","text":"."}]},"doc://SwiftGodot/documentation/SwiftGodot/Viewport/guiIsDragSuccessful()":{"title":"guiIsDragSuccessful()","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Viewport\/guiIsDragSuccessful()","url":"\/documentation\/swiftgodot\/viewport\/guiisdragsuccessful()","abstract":[{"type":"text","text":"Returns "},{"type":"codeVoice","code":"true"},{"type":"text","text":" if the drag operation is successful."}],"type":"topic","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"guiIsDragSuccessful"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}]},"doc://SwiftGodot/documentation/SwiftGodot/Label":{"title":"Label","role":"symbol","type":"topic","abstract":[{"type":"text","text":"A control for displaying plain text."}],"kind":"symbol","navigatorTitle":[{"text":"Label","kind":"identifier"}],"url":"\/documentation\/swiftgodot\/label","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Label"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Label"},"doc://SwiftGodot/documentation/SwiftGodot/Control/getThemeStylebox(name:themeType:)":{"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"getThemeStylebox","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot10StringNameC","text":"StringName"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"themeType"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10SwiftGodot10StringNameC","text":"StringName","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"StyleBox","preciseIdentifier":"s:10SwiftGodot8StyleBoxC"},{"kind":"text","text":"?"}],"url":"\/documentation\/swiftgodot\/control\/getthemestylebox(name:themetype:)","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/getThemeStylebox(name:themeType:)","abstract":[{"text":"Returns a ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/StyleBox"},{"type":"text","text":" from the first matching "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Theme","isActive":true},{"text":" in the tree if that ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Theme"},{"type":"text","text":" has a stylebox item with the specified "},{"type":"codeVoice","code":"name"},{"type":"text","text":" and "},{"code":"themeType","type":"codeVoice"},{"type":"text","text":"."}],"role":"symbol","title":"getThemeStylebox(name:themeType:)"},"doc://SwiftGodot/documentation/SwiftGodot/Control/forceDrag(data:preview:)":{"abstract":[{"text":"Forces drag and bypasses ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/_getDragData(atPosition:)"},{"text":" and ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/setDragPreview(control:)","isActive":true,"type":"reference"},{"type":"text","text":" by passing "},{"code":"data","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"preview"},{"type":"text","text":". Drag will start even if the mouse is neither over nor pressed on this control."}],"kind":"symbol","title":"forceDrag(data:preview:)","role":"symbol","type":"topic","url":"\/documentation\/swiftgodot\/control\/forcedrag(data:preview:)","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/forceDrag(data:preview:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"forceDrag"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10SwiftGodot7VariantC","text":"Variant","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"preview","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Control","preciseIdentifier":"s:10SwiftGodot7ControlC"},{"kind":"text","text":"?)"}]},"doc://SwiftGodot/documentation/SwiftGodot/InputEvent":{"title":"InputEvent","url":"\/documentation\/swiftgodot\/inputevent","abstract":[{"text":"Abstract base class for input events.","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"InputEvent"}],"navigatorTitle":[{"kind":"identifier","text":"InputEvent"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/InputEvent","type":"topic"},"doc://SwiftGodot/documentation/SwiftGodot/Control/setAnchorAndOffset(side:anchor:offset:pushOppositeAnchor:)":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/setAnchorAndOffset(side:anchor:offset:pushOppositeAnchor:)","url":"\/documentation\/swiftgodot\/control\/setanchorandoffset(side:anchor:offset:pushoppositeanchor:)","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Works the same as "},{"isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/setAnchor(side:anchor:keepOffset:pushOppositeAnchor:)","type":"reference"},{"type":"text","text":", but instead of "},{"type":"codeVoice","code":"keep_offset"},{"text":" argument and automatic update of offset, it allows to set the offset yourself (see ","type":"text"},{"type":"codeVoice","code":"setOffset(side:offset:)"},{"text":").","type":"text"}],"title":"setAnchorAndOffset(side:anchor:offset:pushOppositeAnchor:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"setAnchorAndOffset"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"side"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Side","preciseIdentifier":"s:10SwiftGodot4SideO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"anchor"},{"kind":"text","text":": "},{"text":"Double","preciseIdentifier":"s:Sd","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"offset"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sd","text":"Double"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"pushOppositeAnchor"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":")"}]},"doc://SwiftGodot/documentation/SwiftGodot/Control/autoTranslate":{"type":"topic","title":"autoTranslate","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/autoTranslate","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"autoTranslate","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"url":"\/documentation\/swiftgodot\/control\/autotranslate","role":"symbol","kind":"symbol","abstract":[{"text":"Toggles if any text should automatically change to its translated version depending on the current locale.","type":"text"}]},"doc://SwiftGodot/documentation/SwiftGodot/Control/themeChanged":{"type":"topic","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/themeChanged","url":"\/documentation\/swiftgodot\/control\/themechanged","role":"symbol","abstract":[{"type":"text","text":"Emitted when the "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/notificationThemeChanged","isActive":true},{"text":" notification is sent.","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"themeChanged","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10SwiftGodot12SimpleSignalC","text":"SimpleSignal","kind":"typeIdentifier"}],"title":"themeChanged"},"doc://SwiftGodot/documentation/SwiftGodot/Control/guiInput":{"url":"\/documentation\/swiftgodot\/control\/guiinput","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/guiInput","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"guiInput"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10SwiftGodot7ControlC","text":"Control","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Signal1","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot7ControlC7Signal1C"}],"abstract":[{"text":"Emitted when the node receives an ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/InputEvent","type":"reference","isActive":true},{"type":"text","text":"."}],"role":"symbol","title":"guiInput","kind":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/Control/notificationThemeChanged":{"kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/notificationThemeChanged","url":"\/documentation\/swiftgodot\/control\/notificationthemechanged","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"notificationThemeChanged"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"}],"title":"notificationThemeChanged","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Sent when the node needs to refresh its theme items. This happens in one of the following cases:"}]},"doc://SwiftGodot/documentation/SwiftGodot/Control/hasThemeIcon(name:themeType:)":{"title":"hasThemeIcon(name:themeType:)","type":"topic","url":"\/documentation\/swiftgodot\/control\/hasthemeicon(name:themetype:)","abstract":[{"text":"Returns ","type":"text"},{"type":"codeVoice","code":"true"},{"text":" if there is a matching ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Theme","isActive":true,"type":"reference"},{"type":"text","text":" in the tree that has an icon item with the specified "},{"type":"codeVoice","code":"name"},{"text":" and ","type":"text"},{"code":"themeType","type":"codeVoice"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/hasThemeIcon(name:themeType:)","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"hasThemeIcon"},{"kind":"text","text":"("},{"text":"name","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot10StringNameC","kind":"typeIdentifier","text":"StringName"},{"kind":"text","text":", "},{"kind":"externalParam","text":"themeType"},{"text":": ","kind":"text"},{"text":"StringName","preciseIdentifier":"s:10SwiftGodot10StringNameC","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}]},"doc://SwiftGodot/documentation/SwiftGodot/Control/removeThemeStyleboxOverride(name:)":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/removeThemeStyleboxOverride(name:)","title":"removeThemeStyleboxOverride(name:)","kind":"symbol","role":"symbol","type":"topic","url":"\/documentation\/swiftgodot\/control\/removethemestyleboxoverride(name:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"removeThemeStyleboxOverride"},{"kind":"text","text":"("},{"text":"name","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot10StringNameC","text":"StringName","kind":"typeIdentifier"},{"kind":"text","text":")"}],"abstract":[{"text":"Removes a local override for a theme ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/StyleBox","isActive":true},{"type":"text","text":" with the specified "},{"code":"name","type":"codeVoice"},{"text":" previously added by ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/addThemeStyleboxOverride(name:stylebox:)"},{"type":"text","text":" or via the Inspector dock."}]},"doc://SwiftGodot/documentation/SwiftGodot/VariantStorable":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/VariantStorable","abstract":[{"text":"Types that conform to VariantStorable can be stored in a Variant and can be extracted","type":"text"},{"type":"text","text":" "},{"text":"back out of a Variant.","type":"text"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"VariantStorable"}],"type":"topic","url":"\/documentation\/swiftgodot\/variantstorable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"VariantStorable"}],"title":"VariantStorable","role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/Control/notificationMouseExit":{"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"notificationMouseExit","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/swiftgodot\/control\/notificationmouseexit","title":"notificationMouseExit","abstract":[{"text":"Sent when the mouse cursor leaves the control’s (and all child control’s) visible area, that is not occluded behind other Controls or Windows, provided its ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/mouseFilter-swift.property","isActive":true},{"type":"text","text":" lets the event reach it and regardless if it’s currently focused or not."}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/notificationMouseExit"},"doc://SwiftGodot/documentation/SwiftGodot/CanvasItem":{"url":"\/documentation\/swiftgodot\/canvasitem","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"CanvasItem","kind":"identifier"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/CanvasItem","title":"CanvasItem","abstract":[{"type":"text","text":"Abstract base class for everything in 2D space."}],"navigatorTitle":[{"text":"CanvasItem","kind":"identifier"}],"role":"symbol","type":"topic"},"doc://SwiftGodot/documentation/SwiftGodot/Control/getRect()":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"getRect","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot5Rect2V","text":"Rect2"}],"role":"symbol","title":"getRect()","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/getRect()","type":"topic","url":"\/documentation\/swiftgodot\/control\/getrect()","abstract":[{"type":"text","text":"Returns the position and size of the control in the coordinate system of the containing node. See "},{"code":"position","type":"codeVoice"},{"type":"text","text":", "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/scale"},{"type":"text","text":" and "},{"code":"size","type":"codeVoice"},{"type":"text","text":"."}],"kind":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/Control/GrowDirection":{"title":"Control.GrowDirection","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/GrowDirection","type":"topic","url":"\/documentation\/swiftgodot\/control\/growdirection","abstract":[],"kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"GrowDirection"}],"navigatorTitle":[{"kind":"identifier","text":"GrowDirection"}],"role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/Control/focusNeighborRight":{"type":"topic","title":"focusNeighborRight","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/focusNeighborRight","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"focusNeighborRight"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot8NodePathC","text":"NodePath"}],"url":"\/documentation\/swiftgodot\/control\/focusneighborright","role":"symbol","kind":"symbol","abstract":[{"text":"Tells Godot which node it should give focus to if the user presses the right arrow on the keyboard or right on a gamepad by default. You can change the key by editing the ","type":"text"},{"code":"ProjectSettings\/input\/uiRight","type":"codeVoice"},{"type":"text","text":" input action. The node must be a "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control","isActive":true},{"text":". If this property is not set, Godot will give focus to the closest ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control"},{"type":"text","text":" to the right of this one."}]},"doc://SwiftGodot/documentation/SwiftGodot/SpinBox":{"abstract":[{"type":"text","text":"An input field for numbers."}],"type":"topic","role":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/SpinBox","url":"\/documentation\/swiftgodot\/spinbox","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"SpinBox"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SpinBox"}],"title":"SpinBox"},"doc://SwiftGodot/documentation/SwiftGodot/Control/removeThemeFontOverride(name:)":{"title":"removeThemeFontOverride(name:)","type":"topic","url":"\/documentation\/swiftgodot\/control\/removethemefontoverride(name:)","abstract":[{"type":"text","text":"Removes a local override for a theme "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Font"},{"text":" with the specified ","type":"text"},{"type":"codeVoice","code":"name"},{"type":"text","text":" previously added by "},{"isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/addThemeFontOverride(name:font:)","type":"reference"},{"text":" or via the Inspector dock.","type":"text"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/removeThemeFontOverride(name:)","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"removeThemeFontOverride"},{"text":"(","kind":"text"},{"text":"name","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StringName","preciseIdentifier":"s:10SwiftGodot10StringNameC"},{"text":")","kind":"text"}]},"doc://SwiftGodot/documentation/SwiftGodot/Control/growHorizontal":{"type":"topic","title":"growHorizontal","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/growHorizontal","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"growHorizontal","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot7ControlC","text":"Control"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot7ControlC13GrowDirectionO","text":"GrowDirection"}],"url":"\/documentation\/swiftgodot\/control\/growhorizontal","role":"symbol","kind":"symbol","abstract":[{"text":"Controls the direction on the horizontal axis in which the control should grow if its horizontal minimum size is changed to be greater than its current size, as the control always has to be at least the minimum size.","type":"text"}]},"doc://SwiftGodot/documentation/SwiftGodot/Control/hasThemeIconOverride(name:)":{"title":"hasThemeIconOverride(name:)","type":"topic","url":"\/documentation\/swiftgodot\/control\/hasthemeiconoverride(name:)","abstract":[{"text":"Returns ","type":"text"},{"type":"codeVoice","code":"true"},{"type":"text","text":" if there is a local override for a theme icon with the specified "},{"type":"codeVoice","code":"name"},{"text":" in this ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control","type":"reference","isActive":true},{"type":"text","text":" node."}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/hasThemeIconOverride(name:)","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"hasThemeIconOverride","kind":"identifier"},{"text":"(","kind":"text"},{"text":"name","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10SwiftGodot10StringNameC","kind":"typeIdentifier","text":"StringName"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}]},"doc://SwiftGodot/documentation/SwiftGodot/TabBar":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TabBar","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"TabBar"}],"title":"TabBar","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/TabBar","url":"\/documentation\/swiftgodot\/tabbar","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"A control that provides a horizontal bar with tabs."}]},"doc://SwiftGodot/documentation/SwiftGodot/TextEdit":{"title":"TextEdit","role":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/TextEdit","url":"\/documentation\/swiftgodot\/textedit","kind":"symbol","abstract":[{"type":"text","text":"A multiline text editor."}],"type":"topic","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"TextEdit","kind":"identifier"}],"navigatorTitle":[{"text":"TextEdit","kind":"identifier"}]},"doc://SwiftGodot/documentation/SwiftGodot/Control/setSize(_:keepOffsets:)":{"type":"topic","title":"setSize(_:keepOffsets:)","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/setSize(_:keepOffsets:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"setSize","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Vector2","preciseIdentifier":"s:10SwiftGodot7Vector2V"},{"kind":"text","text":", "},{"kind":"externalParam","text":"keepOffsets"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":")"}],"url":"\/documentation\/swiftgodot\/control\/setsize(_:keepoffsets:)","role":"symbol","kind":"symbol","abstract":[{"text":"Sets the size (see ","type":"text"},{"type":"codeVoice","code":"size"},{"type":"text","text":")."}]},"doc://SwiftGodot/documentation/SwiftGodot/Theme/defaultBaseScale":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Theme\/defaultBaseScale","abstract":[{"type":"text","text":"The default base scale factor of this theme resource. Used by some controls to scale their visual properties based on the global scale factor. If this value is set to "},{"type":"codeVoice","code":"0.0"},{"text":", the global scale factor is used (see ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/ThemeDB\/fallbackBaseScale","isActive":true,"type":"reference"},{"text":").","type":"text"}],"title":"defaultBaseScale","type":"topic","url":"\/documentation\/swiftgodot\/theme\/defaultbasescale","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"defaultBaseScale","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"}]},"doc://SwiftGodot/documentation/SwiftGodot/Control/LayoutDirection-swift.enum":{"kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/LayoutDirection-swift.enum","abstract":[],"title":"Control.LayoutDirection","type":"topic","url":"\/documentation\/swiftgodot\/control\/layoutdirection-swift.enum","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"LayoutDirection","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"LayoutDirection"}],"role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/Control/hasThemeFontOverride(name:)":{"title":"hasThemeFontOverride(name:)","type":"topic","url":"\/documentation\/swiftgodot\/control\/hasthemefontoverride(name:)","abstract":[{"type":"text","text":"Returns "},{"type":"codeVoice","code":"true"},{"text":" if there is a local override for a theme ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Font"},{"text":" with the specified ","type":"text"},{"type":"codeVoice","code":"name"},{"type":"text","text":" in this "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control"},{"text":" node.","type":"text"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/hasThemeFontOverride(name:)","role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hasThemeFontOverride","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"text":"StringName","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot10StringNameC"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}]},"doc://SwiftGodot/documentation/SwiftGodot/Control/setAnchor(side:anchor:keepOffset:pushOppositeAnchor:)":{"abstract":[{"type":"text","text":"Sets the anchor for the specified "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Side","isActive":true},{"type":"text","text":" to "},{"code":"anchor","type":"codeVoice"},{"type":"text","text":". A setter method for "},{"type":"codeVoice","code":"anchorBottom"},{"type":"text","text":", "},{"code":"anchorLeft","type":"codeVoice"},{"type":"text","text":", "},{"code":"anchorRight","type":"codeVoice"},{"type":"text","text":" and "},{"code":"anchorTop","type":"codeVoice"},{"text":".","type":"text"}],"role":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/setAnchor(side:anchor:keepOffset:pushOppositeAnchor:)","url":"\/documentation\/swiftgodot\/control\/setanchor(side:anchor:keepoffset:pushoppositeanchor:)","kind":"symbol","title":"setAnchor(side:anchor:keepOffset:pushOppositeAnchor:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"setAnchor","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"side"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Side","preciseIdentifier":"s:10SwiftGodot4SideO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"anchor"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"text":", ","kind":"text"},{"text":"keepOffset","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":", "},{"text":"pushOppositeAnchor","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"kind":"text","text":")"}],"type":"topic"},"doc://SwiftGodot/documentation/SwiftGodot/Control/LayoutPresetMode":{"title":"Control.LayoutPresetMode","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LayoutPresetMode","kind":"identifier"}],"url":"\/documentation\/swiftgodot\/control\/layoutpresetmode","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/LayoutPresetMode","navigatorTitle":[{"text":"LayoutPresetMode","kind":"identifier"}],"abstract":[],"role":"symbol","kind":"symbol","type":"topic"},"doc://SwiftGodot/documentation/SwiftGodot/Control/hasThemeConstantOverride(name:)":{"url":"\/documentation\/swiftgodot\/control\/hasthemeconstantoverride(name:)","title":"hasThemeConstantOverride(name:)","role":"symbol","abstract":[{"text":"Returns ","type":"text"},{"type":"codeVoice","code":"true"},{"text":" if there is a local override for a theme constant with the specified ","type":"text"},{"type":"codeVoice","code":"name"},{"text":" in this ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control"},{"text":" node.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/hasThemeConstantOverride(name:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hasThemeConstantOverride","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10SwiftGodot10StringNameC","text":"StringName","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"type":"topic"},"doc://SwiftGodot/documentation/SwiftGodot/Control/hasThemeFontSize(name:themeType:)":{"type":"topic","title":"hasThemeFontSize(name:themeType:)","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/hasThemeFontSize(name:themeType:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"hasThemeFontSize"},{"text":"(","kind":"text"},{"text":"name","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10SwiftGodot10StringNameC","text":"StringName","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"themeType"},{"text":": ","kind":"text"},{"text":"StringName","preciseIdentifier":"s:10SwiftGodot10StringNameC","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"url":"\/documentation\/swiftgodot\/control\/hasthemefontsize(name:themetype:)","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Returns "},{"type":"codeVoice","code":"true"},{"text":" if there is a matching ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Theme"},{"type":"text","text":" in the tree that has a font size item with the specified "},{"code":"name","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"themeType"},{"text":".","type":"text"}]},"doc://SwiftGodot/documentation/SwiftGodot/Control/rotationDegrees":{"type":"topic","url":"\/documentation\/swiftgodot\/control\/rotationdegrees","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/rotationDegrees","abstract":[{"type":"text","text":"Helper property to access "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/rotation","isActive":true},{"type":"text","text":" in degrees instead of radians."}],"title":"rotationDegrees","kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"rotationDegrees"},{"text":": ","kind":"text"},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"}]},"doc://SwiftGodot/documentation/SwiftGodot/Control/removeThemeFontSizeOverride(name:)":{"role":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/removeThemeFontSizeOverride(name:)","title":"removeThemeFontSizeOverride(name:)","kind":"symbol","url":"\/documentation\/swiftgodot\/control\/removethemefontsizeoverride(name:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"removeThemeFontSizeOverride"},{"text":"(","kind":"text"},{"text":"name","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot10StringNameC","kind":"typeIdentifier","text":"StringName"},{"kind":"text","text":")"}],"type":"topic","abstract":[{"type":"text","text":"Removes a local override for a theme font size with the specified "},{"code":"name","type":"codeVoice"},{"type":"text","text":" previously added by "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/addThemeFontSizeOverride(name:fontSize:)","type":"reference","isActive":true},{"text":" or via the Inspector dock.","type":"text"}]},"doc://SwiftGodot/documentation/SwiftGodot/Control/offsetRight":{"title":"offsetRight","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/offsetRight","url":"\/documentation\/swiftgodot\/control\/offsetright","abstract":[{"type":"text","text":"Distance between the node’s right edge and its parent control, based on "},{"type":"codeVoice","code":"anchorRight"},{"type":"text","text":"."}],"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"offsetRight"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sd","text":"Double","kind":"typeIdentifier"}],"type":"topic","kind":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/Control/removeThemeConstantOverride(name:)":{"type":"topic","title":"removeThemeConstantOverride(name:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"removeThemeConstantOverride","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"name"},{"text":": ","kind":"text"},{"text":"StringName","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot10StringNameC"},{"text":")","kind":"text"}],"kind":"symbol","url":"\/documentation\/swiftgodot\/control\/removethemeconstantoverride(name:)","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/removeThemeConstantOverride(name:)","role":"symbol","abstract":[{"type":"text","text":"Removes a local override for a theme constant with the specified "},{"type":"codeVoice","code":"name"},{"type":"text","text":" previously added by "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/addThemeConstantOverride(name:constant:)","isActive":true},{"text":" or via the Inspector dock.","type":"text"}]},"doc://SwiftGodot/documentation/SwiftGodot/Control/addThemeColorOverride(name:color:)":{"title":"addThemeColorOverride(name:color:)","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/addThemeColorOverride(name:color:)","abstract":[{"text":"Creates a local override for a theme ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Color","isActive":true},{"text":" with the specified ","type":"text"},{"type":"codeVoice","code":"name"},{"text":". Local overrides always take precedence when fetching theme items for the control. An override can be removed with ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/removeThemeColorOverride(name:)"},{"text":".","type":"text"}],"url":"\/documentation\/swiftgodot\/control\/addthemecoloroverride(name:color:)","role":"symbol","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"addThemeColorOverride"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"name"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot10StringNameC","text":"StringName"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"color"},{"kind":"text","text":": "},{"text":"Color","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot5ColorV"},{"kind":"text","text":")"}]},"doc://SwiftGodot/documentation/SwiftGodot/Control/sizeFlagsVertical":{"url":"\/documentation\/swiftgodot\/control\/sizeflagsvertical","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/sizeFlagsVertical","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"sizeFlagsVertical","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Control","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot7ControlC"},{"kind":"text","text":"."},{"preciseIdentifier":"s:10SwiftGodot7ControlC9SizeFlagsV","kind":"typeIdentifier","text":"SizeFlags"}],"kind":"symbol","type":"topic","role":"symbol","title":"sizeFlagsVertical","abstract":[{"type":"text","text":"Tells the parent "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Container","isActive":true},{"type":"text","text":" nodes how they should resize and place the node on the Y axis. Use a combination of the "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/SizeFlags","isActive":true},{"text":" constants to change the flags. See the constants to learn what each does.","type":"text"}]},"doc://SwiftGodot/documentation/SwiftGodot/Control/growVertical":{"abstract":[{"text":"Controls the direction on the vertical axis in which the control should grow if its vertical minimum size is changed to be greater than its current size, as the control always has to be at least the minimum size.","type":"text"}],"title":"growVertical","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"growVertical","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10SwiftGodot7ControlC","kind":"typeIdentifier","text":"Control"},{"kind":"text","text":"."},{"text":"GrowDirection","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot7ControlC13GrowDirectionO"}],"kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/growVertical","url":"\/documentation\/swiftgodot\/control\/growvertical"},"doc://SwiftGodot/documentation/SwiftGodot/LineEdit":{"navigatorTitle":[{"text":"LineEdit","kind":"identifier"}],"role":"symbol","url":"\/documentation\/swiftgodot\/lineedit","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"LineEdit","kind":"identifier"}],"abstract":[{"text":"An input field for single-line text.","type":"text"}],"kind":"symbol","type":"topic","title":"LineEdit","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/LineEdit"},"doc://SwiftGodot/documentation/SwiftGodot/Container":{"navigatorTitle":[{"kind":"identifier","text":"Container"}],"kind":"symbol","title":"Container","role":"symbol","url":"\/documentation\/swiftgodot\/container","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Container","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Container"}],"abstract":[{"type":"text","text":"Base class for all GUI containers."}],"type":"topic"},"doc://SwiftGodot/documentation/SwiftGodot/Control/findPrevValidFocus()":{"type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/findPrevValidFocus()","role":"symbol","url":"\/documentation\/swiftgodot\/control\/findprevvalidfocus()","title":"findPrevValidFocus()","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"findPrevValidFocus","kind":"identifier"},{"kind":"text","text":"() -> "},{"text":"Control","preciseIdentifier":"s:10SwiftGodot7ControlC","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"abstract":[{"text":"Finds the previous (above in the tree) ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control","type":"reference","isActive":true},{"text":" that can receive the focus.","type":"text"}]},"doc://SwiftGodot/documentation/SwiftGodot/Control/notificationMouseEnter":{"title":"notificationMouseEnter","url":"\/documentation\/swiftgodot\/control\/notificationmouseenter","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/notificationMouseEnter","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"text":"notificationMouseEnter","kind":"identifier"},{"kind":"text","text":": "},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"}],"type":"topic","abstract":[{"type":"text","text":"Sent when the mouse cursor enters the control’s (or any child control’s) visible area, that is not occluded behind other Controls or Windows, provided its "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/mouseFilter-swift.property","isActive":true},{"text":" lets the event reach it and regardless if it’s currently focused or not.","type":"text"}],"kind":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/ScrollContainer":{"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ScrollContainer","kind":"identifier"}],"title":"ScrollContainer","navigatorTitle":[{"kind":"identifier","text":"ScrollContainer"}],"url":"\/documentation\/swiftgodot\/scrollcontainer","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/ScrollContainer","abstract":[{"type":"text","text":"A container used to provide scrollbars to a child control when needed."}],"type":"topic"},"doc://SwiftGodot/documentation/SwiftGodot/Control/getParentControl()":{"title":"getParentControl()","type":"topic","url":"\/documentation\/swiftgodot\/control\/getparentcontrol()","abstract":[{"text":"Returns the parent control node.","type":"text"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/getParentControl()","role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"getParentControl"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot7ControlC","text":"Control"},{"text":"?","kind":"text"}]},"doc://SwiftGodot/documentation/SwiftGodot/RichTextLabel":{"type":"topic","url":"\/documentation\/swiftgodot\/richtextlabel","kind":"symbol","title":"RichTextLabel","abstract":[{"text":"A control for displaying text that can contain different font styles, images, and basic formatting.","type":"text"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/RichTextLabel","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RichTextLabel"}],"navigatorTitle":[{"text":"RichTextLabel","kind":"identifier"}]},"doc://SwiftGodot/documentation/SwiftGodot/Control/notificationFocusEnter":{"type":"topic","title":"notificationFocusEnter","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/notificationFocusEnter","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"notificationFocusEnter","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"}],"url":"\/documentation\/swiftgodot\/control\/notificationfocusenter","role":"symbol","kind":"symbol","abstract":[{"text":"Sent when the node grabs focus.","type":"text"}]},"doc://SwiftGodot/documentation/SwiftGodot/Control/mouseDefaultCursorShape":{"kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/mouseDefaultCursorShape","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"mouseDefaultCursorShape"},{"kind":"text","text":": "},{"text":"Control","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot7ControlC"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot7ControlC11CursorShapeO","text":"CursorShape"}],"url":"\/documentation\/swiftgodot\/control\/mousedefaultcursorshape","role":"symbol","type":"topic","abstract":[{"type":"text","text":"The default cursor shape for this control. Useful for Godot plugins and applications or games that use the system’s mouse cursors."}],"title":"mouseDefaultCursorShape"},"doc://SwiftGodot/documentation/SwiftGodot/Control/_makeCustomTooltip(forText:)":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"_makeCustomTooltip","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"forText"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:10SwiftGodot6ObjectC","kind":"typeIdentifier","text":"Object"},{"text":"?","kind":"text"}],"url":"\/documentation\/swiftgodot\/control\/_makecustomtooltip(fortext:)","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/_makeCustomTooltip(forText:)","abstract":[{"type":"text","text":"Virtual method to be implemented by the user. Returns a "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control","isActive":true},{"text":" node that should be used as a tooltip instead of the default one. The ","type":"text"},{"type":"codeVoice","code":"forText"},{"type":"text","text":" includes the contents of the "},{"isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/tooltipText","type":"reference"},{"type":"text","text":" property."}],"kind":"symbol","title":"_makeCustomTooltip(forText:)"},"doc://SwiftGodot/documentation/SwiftGodot/Control/getCursorShape(position:)":{"title":"getCursorShape(position:)","type":"topic","url":"\/documentation\/swiftgodot\/control\/getcursorshape(position:)","abstract":[{"text":"Returns the mouse cursor shape the control displays on mouse hover. See ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/CursorShape","isActive":true,"type":"reference"},{"text":".","type":"text"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/getCursorShape(position:)","role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"getCursorShape"},{"kind":"text","text":"("},{"kind":"externalParam","text":"position"},{"kind":"text","text":": "},{"text":"Vector2","preciseIdentifier":"s:10SwiftGodot7Vector2V","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Control","preciseIdentifier":"s:10SwiftGodot7ControlC","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot7ControlC11CursorShapeO","kind":"typeIdentifier","text":"CursorShape"}]},"doc://SwiftGodot/documentation/SwiftGodot/Control/pivotOffset":{"url":"\/documentation\/swiftgodot\/control\/pivotoffset","role":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/pivotOffset","kind":"symbol","title":"pivotOffset","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"pivotOffset"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Vector2","preciseIdentifier":"s:10SwiftGodot7Vector2V"}],"type":"topic","abstract":[{"type":"text","text":"By default, the node’s pivot is its top-left corner. When you change its "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/rotation","type":"reference","isActive":true},{"type":"text","text":" or "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/scale","isActive":true,"type":"reference"},{"type":"text","text":", it will rotate or scale around this pivot. Set this property to "},{"type":"codeVoice","code":"size"},{"type":"text","text":" \/ 2 to pivot around the Control’s center."}]},"doc://SwiftGodot/documentation/SwiftGodot/Window":{"type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Window","url":"\/documentation\/swiftgodot\/window","abstract":[{"text":"Base class for all windows, dialogs, and popups.","type":"text"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Window"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Window"}],"title":"Window"},"doc://SwiftGodot/documentation/SwiftGodot/Tree":{"navigatorTitle":[{"kind":"identifier","text":"Tree"}],"abstract":[{"type":"text","text":"A control used to show a set of internal "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/TreeItem","isActive":true},{"type":"text","text":"s in a hierarchical structure."}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/swiftgodot\/tree","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Tree","title":"Tree","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"Tree","kind":"identifier"}]},"doc://SwiftGodot/documentation/SwiftGodot/SceneTree/root":{"abstract":[{"type":"text","text":"The tree’s root "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Window","type":"reference","isActive":true},{"type":"text","text":". This is top-most "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Node","isActive":true},{"type":"text","text":" of the scene tree, and is always present. An absolute "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/NodePath"},{"text":" always starts from this node. Children of the root node may include the loaded ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/SceneTree\/currentScene"},{"type":"text","text":", as well as any "},{"type":"text","text":"AutoLoad"},{"text":" configured in the Project Settings.","type":"text"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/SceneTree\/root","title":"root","url":"\/documentation\/swiftgodot\/scenetree\/root","type":"topic","kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"root"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10SwiftGodot6WindowC","text":"Window","kind":"typeIdentifier"},{"kind":"text","text":"?"}]},"doc://SwiftGodot/documentation/SwiftGodot/Control/setGlobalPosition(_:keepOffsets:)":{"type":"topic","title":"setGlobalPosition(_:keepOffsets:)","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/setGlobalPosition(_:keepOffsets:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"setGlobalPosition"},{"kind":"text","text":"("},{"text":"Vector2","preciseIdentifier":"s:10SwiftGodot7Vector2V","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"keepOffsets","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":")"}],"url":"\/documentation\/swiftgodot\/control\/setglobalposition(_:keepoffsets:)","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Sets the "},{"code":"globalPosition","type":"codeVoice"},{"text":" to given ","type":"text"},{"type":"codeVoice","code":"position"},{"text":".","type":"text"}]},"doc://SwiftGodot/documentation/SwiftGodot/MenuBar":{"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"MenuBar","kind":"identifier"}],"type":"topic","url":"\/documentation\/swiftgodot\/menubar","role":"symbol","abstract":[{"type":"text","text":"A horizontal menu bar that creates a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/MenuButton"},{"type":"text","text":" for each "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PopupMenu","isActive":true,"type":"reference"},{"text":" child.","type":"text"}],"title":"MenuBar","navigatorTitle":[{"text":"MenuBar","kind":"identifier"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/MenuBar","kind":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/Control/minimumSizeChanged":{"title":"minimumSizeChanged","type":"topic","url":"\/documentation\/swiftgodot\/control\/minimumsizechanged","abstract":[{"text":"Emitted when the node’s minimum size changes.","type":"text"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/minimumSizeChanged","role":"symbol","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"minimumSizeChanged","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10SwiftGodot12SimpleSignalC","kind":"typeIdentifier","text":"SimpleSignal"}]},"doc://SwiftGodot/documentation/SwiftGodot/Theme":{"title":"Theme","navigatorTitle":[{"text":"Theme","kind":"identifier"}],"url":"\/documentation\/swiftgodot\/theme","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Theme","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"A resource used for styling\/skinning "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control","isActive":true},{"type":"text","text":"s and "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Window","isActive":true},{"type":"text","text":"s."}],"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Theme"}]},"doc://SwiftGodot/documentation/SwiftGodot/Control/notificationMouseExitSelf":{"title":"notificationMouseExitSelf","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/notificationMouseExitSelf","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"notificationMouseExitSelf","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"}],"url":"\/documentation\/swiftgodot\/control\/notificationmouseexitself","abstract":[{"text":"Sent when the mouse cursor leaves the control’s visible area, that is not occluded behind other Controls or Windows, provided its ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/mouseFilter-swift.property","type":"reference","isActive":true},{"text":" lets the event reach it and regardless if it’s currently focused or not.","type":"text"}],"type":"topic"},"doc://SwiftGodot/documentation/SwiftGodot/Control/godotClassName":{"type":"topic","title":"godotClassName","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/godotClassName","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"godotClassName","kind":"identifier"},{"text":": ","kind":"text"},{"text":"StringName","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot10StringNameC"}],"url":"\/documentation\/swiftgodot\/control\/godotclassname","role":"symbol","kind":"symbol","abstract":[]},"doc://SwiftGodot/documentation/SwiftGodot/Control/focusNeighborTop":{"title":"focusNeighborTop","type":"topic","url":"\/documentation\/swiftgodot\/control\/focusneighbortop","abstract":[{"text":"Tells Godot which node it should give focus to if the user presses the top arrow on the keyboard or top on a gamepad by default. You can change the key by editing the ","type":"text"},{"type":"codeVoice","code":"ProjectSettings\/input\/uiUp"},{"text":" input action. The node must be a ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control","type":"reference","isActive":true},{"text":". If this property is not set, Godot will give focus to the closest ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control"},{"type":"text","text":" to the top of this one."}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/focusNeighborTop","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"focusNeighborTop","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot8NodePathC","text":"NodePath"}]},"doc://SwiftGodot/documentation/SwiftGodot/Control/addThemeConstantOverride(name:constant:)":{"role":"symbol","type":"topic","abstract":[{"text":"Creates a local override for a theme constant with the specified ","type":"text"},{"type":"codeVoice","code":"name"},{"type":"text","text":". Local overrides always take precedence when fetching theme items for the control. An override can be removed with "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/removeThemeConstantOverride(name:)","isActive":true},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/addThemeConstantOverride(name:constant:)","url":"\/documentation\/swiftgodot\/control\/addthemeconstantoverride(name:constant:)","kind":"symbol","title":"addThemeConstantOverride(name:constant:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"addThemeConstantOverride","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"name"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot10StringNameC","text":"StringName"},{"text":", ","kind":"text"},{"text":"constant","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"},{"text":")","kind":"text"}]},"doc://SwiftGodot/documentation/SwiftGodot/Control/getScreenPosition()":{"kind":"symbol","abstract":[{"type":"text","text":"Returns the position of this "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control","type":"reference","isActive":true},{"type":"text","text":" in global screen coordinates (i.e. taking window position into account). Mostly useful for editor plugins."}],"url":"\/documentation\/swiftgodot\/control\/getscreenposition()","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/getScreenPosition()","role":"symbol","type":"topic","title":"getScreenPosition()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getScreenPosition","kind":"identifier"},{"kind":"text","text":"() -> "},{"text":"Vector2","preciseIdentifier":"s:10SwiftGodot7Vector2V","kind":"typeIdentifier"}]},"doc://SwiftGodot/documentation/SwiftGodot/ColorRect":{"abstract":[{"type":"text","text":"A control that displays a solid color rectangle."}],"type":"topic","role":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/ColorRect","url":"\/documentation\/swiftgodot\/colorrect","kind":"symbol","navigatorTitle":[{"text":"ColorRect","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"ColorRect","kind":"identifier"}],"title":"ColorRect"},"doc://SwiftGodot/documentation/SwiftGodot/Control/sizeFlagsChanged":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/sizeFlagsChanged","role":"symbol","abstract":[{"text":"Emitted when one of the size flags changes. See ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/sizeFlagsHorizontal"},{"text":" and ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/sizeFlagsVertical","isActive":true,"type":"reference"},{"text":".","type":"text"}],"type":"topic","title":"sizeFlagsChanged","url":"\/documentation\/swiftgodot\/control\/sizeflagschanged","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"sizeFlagsChanged"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SimpleSignal","preciseIdentifier":"s:10SwiftGodot12SimpleSignalC"}]},"doc://SwiftGodot/documentation/SwiftGodot/Control/getTooltip(atPosition:)":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/getTooltip(atPosition:)","url":"\/documentation\/swiftgodot\/control\/gettooltip(atposition:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"getTooltip"},{"kind":"text","text":"("},{"text":"atPosition","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Vector2","preciseIdentifier":"s:10SwiftGodot7Vector2V","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"type":"topic","title":"getTooltip(atPosition:)","abstract":[{"type":"text","text":"Returns the tooltip text for the position "},{"type":"codeVoice","code":"atPosition"},{"text":" in control’s local coordinates, which will typically appear when the cursor is resting over this control. By default, it returns ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/tooltipText","isActive":true},{"type":"text","text":"."}],"kind":"symbol","role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/Control/themeTypeVariation":{"type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/themeTypeVariation","url":"\/documentation\/swiftgodot\/control\/themetypevariation","abstract":[{"type":"text","text":"The name of a theme type variation used by this "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control","isActive":true},{"type":"text","text":" to look up its own theme items. When empty, the class name of the node is used (e.g. [code skip-lint]Button` for the "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Button","type":"reference","isActive":true},{"text":" control), as well as the class names of all parent classes (in order of inheritance).","type":"text"}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"themeTypeVariation"},{"kind":"text","text":": "},{"text":"StringName","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot10StringNameC"}],"title":"themeTypeVariation"},"doc://SwiftGodot/documentation/SwiftGodot":{"kind":"symbol","url":"\/documentation\/swiftgodot","abstract":[{"type":"text","text":"Framework to write Godot Game Extensions using the Swift Programming Language."}],"role":"collection","title":"SwiftGodot","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot"},"doc://SwiftGodot/documentation/SwiftGodot/Node/_unhandledInput(event:)":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Node\/_unhandledInput(event:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"_unhandledInput","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"event"},{"text":": ","kind":"text"},{"text":"InputEvent","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot10InputEventC"},{"kind":"text","text":"?)"}],"role":"symbol","kind":"symbol","title":"_unhandledInput(event:)","abstract":[{"type":"text","text":"Called when an "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/InputEvent","type":"reference","isActive":true},{"type":"text","text":" hasn’t been consumed by "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Node\/_input(event:)","isActive":true,"type":"reference"},{"text":" or any GUI ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control","isActive":true},{"type":"text","text":" item. It is called after "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Node\/_shortcutInput(event:)","isActive":true,"type":"reference"},{"type":"text","text":" and after "},{"isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Node\/_unhandledKeyInput(event:)","type":"reference"},{"type":"text","text":". The input event propagates up through the node tree until a node consumes it."}],"type":"topic","url":"\/documentation\/swiftgodot\/node\/_unhandledinput(event:)"},"doc://SwiftGodot/documentation/SwiftGodot/Control/setPosition(_:keepOffsets:)":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/setPosition(_:keepOffsets:)","url":"\/documentation\/swiftgodot\/control\/setposition(_:keepoffsets:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"setPosition","kind":"identifier"},{"kind":"text","text":"("},{"text":"Vector2","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot7Vector2V"},{"kind":"text","text":", "},{"text":"keepOffsets","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":")","kind":"text"}],"title":"setPosition(_:keepOffsets:)","kind":"symbol","abstract":[{"type":"text","text":"Sets the "},{"type":"codeVoice","code":"position"},{"text":" to given ","type":"text"},{"code":"position","type":"codeVoice"},{"text":".","type":"text"}],"role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/Control/focusEntered":{"url":"\/documentation\/swiftgodot\/control\/focusentered","role":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/focusEntered","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"focusEntered","kind":"identifier"},{"kind":"text","text":": "},{"text":"SimpleSignal","preciseIdentifier":"s:10SwiftGodot12SimpleSignalC","kind":"typeIdentifier"}],"type":"topic","kind":"symbol","title":"focusEntered","abstract":[{"type":"text","text":"Emitted when the node gains focus."}]},"doc://SwiftGodot/documentation/SwiftGodot/Control/offsetBottom":{"url":"\/documentation\/swiftgodot\/control\/offsetbottom","type":"topic","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"offsetBottom"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sd","text":"Double","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Distance between the node’s bottom edge and its parent control, based on "},{"type":"codeVoice","code":"anchorBottom"},{"type":"text","text":"."}],"kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/offsetBottom","title":"offsetBottom"},"doc://SwiftGodot/documentation/SwiftGodot/Control/grabClickFocus()":{"type":"topic","url":"\/documentation\/swiftgodot\/control\/grabclickfocus()","title":"grabClickFocus()","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"grabClickFocus","kind":"identifier"},{"text":"()","kind":"text"}],"abstract":[{"text":"Creates an ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/InputEventMouseButton","isActive":true,"type":"reference"},{"type":"text","text":" that attempts to click the control. If the event is received, the control acquires focus."}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/grabClickFocus()","role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/Control/notificationResized":{"title":"notificationResized","url":"\/documentation\/swiftgodot\/control\/notificationresized","kind":"symbol","role":"symbol","abstract":[{"text":"Sent when the node changes size. Use ","type":"text"},{"code":"size","type":"codeVoice"},{"type":"text","text":" to get the new size."}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"notificationResized"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"}],"type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/notificationResized"},"doc://SwiftGodot/documentation/SwiftGodot/Control/hasThemeFont(name:themeType:)":{"type":"topic","title":"hasThemeFont(name:themeType:)","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/hasThemeFont(name:themeType:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hasThemeFont","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10SwiftGodot10StringNameC","text":"StringName","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"themeType","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot10StringNameC","text":"StringName"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"url":"\/documentation\/swiftgodot\/control\/hasthemefont(name:themetype:)","role":"symbol","kind":"symbol","abstract":[{"text":"Returns ","type":"text"},{"type":"codeVoice","code":"true"},{"type":"text","text":" if there is a matching "},{"isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Theme","type":"reference"},{"type":"text","text":" in the tree that has a font item with the specified "},{"type":"codeVoice","code":"name"},{"type":"text","text":" and "},{"code":"themeType","type":"codeVoice"},{"text":".","type":"text"}]},"doc://SwiftGodot/documentation/SwiftGodot/Control/notificationLayoutDirectionChanged":{"role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/notificationLayoutDirectionChanged","abstract":[{"text":"Sent when control layout direction is changed.","type":"text"}],"title":"notificationLayoutDirectionChanged","url":"\/documentation\/swiftgodot\/control\/notificationlayoutdirectionchanged","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"notificationLayoutDirectionChanged"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"}]},"doc://SwiftGodot/documentation/SwiftGodot/Panel":{"kind":"symbol","abstract":[{"type":"text","text":"A GUI control that displays a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/StyleBox"},{"type":"text","text":"."}],"url":"\/documentation\/swiftgodot\/panel","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Panel","role":"symbol","navigatorTitle":[{"text":"Panel","kind":"identifier"}],"title":"Panel","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Panel"}],"type":"topic"},"doc://SwiftGodot/documentation/SwiftGodot/Control/isDragSuccessful()":{"title":"isDragSuccessful()","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isDragSuccessful"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/isDragSuccessful()","url":"\/documentation\/swiftgodot\/control\/isdragsuccessful()","abstract":[{"type":"text","text":"Returns "},{"code":"true","type":"codeVoice"},{"type":"text","text":" if a drag operation is successful. Alternative to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Viewport\/guiIsDragSuccessful()"},{"text":".","type":"text"}],"role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/Control/TextDirection":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TextDirection","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/TextDirection","navigatorTitle":[{"kind":"identifier","text":"TextDirection"}],"type":"topic","url":"\/documentation\/swiftgodot\/control\/textdirection","abstract":[],"title":"Control.TextDirection","role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/Font":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Font","url":"\/documentation\/swiftgodot\/font","title":"Font","kind":"symbol","navigatorTitle":[{"text":"Font","kind":"identifier"}],"type":"topic","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Font"}],"abstract":[{"type":"text","text":"Abstract base class for fonts and font variations."}]},"doc://SwiftGodot/documentation/SwiftGodot/Control/getMinimumSize()":{"url":"\/documentation\/swiftgodot\/control\/getminimumsize()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getMinimumSize"},{"kind":"text","text":"() -> "},{"text":"Vector2","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot7Vector2V"}],"abstract":[{"type":"text","text":"Returns the minimum size for this control. See "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/customMinimumSize","type":"reference","isActive":true},{"text":".","type":"text"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/getMinimumSize()","type":"topic","role":"symbol","title":"getMinimumSize()","kind":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/MenuButton":{"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"MenuButton","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/MenuButton","navigatorTitle":[{"text":"MenuButton","kind":"identifier"}],"type":"topic","url":"\/documentation\/swiftgodot\/menubutton","abstract":[{"type":"text","text":"A button that brings up a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PopupMenu"},{"type":"text","text":" when clicked."}],"title":"MenuButton","role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/Range":{"abstract":[{"text":"Abstract base class for controls that represent a number within a range.","type":"text"}],"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Range","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Range"}],"url":"\/documentation\/swiftgodot\/range","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Range","title":"Range","type":"topic"},"doc://SwiftGodot/documentation/SwiftGodot/Control/getThemeFontSize(name:themeType:)":{"role":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/getThemeFontSize(name:themeType:)","title":"getThemeFontSize(name:themeType:)","url":"\/documentation\/swiftgodot\/control\/getthemefontsize(name:themetype:)","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getThemeFontSize"},{"kind":"text","text":"("},{"kind":"externalParam","text":"name"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot10StringNameC","text":"StringName"},{"text":", ","kind":"text"},{"text":"themeType","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot10StringNameC","text":"StringName"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"}],"abstract":[{"text":"Returns a font size from the first matching ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Theme","isActive":true,"type":"reference"},{"type":"text","text":" in the tree if that "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Theme","isActive":true},{"type":"text","text":" has a font size item with the specified "},{"code":"name","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"themeType"},{"type":"text","text":"."}]},"doc://SwiftGodot/documentation/SwiftGodot/Control/focusExited":{"url":"\/documentation\/swiftgodot\/control\/focusexited","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"focusExited","kind":"identifier"},{"kind":"text","text":": "},{"text":"SimpleSignal","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot12SimpleSignalC"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/focusExited","abstract":[{"text":"Emitted when the node loses focus.","type":"text"}],"type":"topic","kind":"symbol","title":"focusExited"},"doc://SwiftGodot/documentation/SwiftGodot/Control/beginBulkThemeOverride()":{"kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/beginBulkThemeOverride()","url":"\/documentation\/swiftgodot\/control\/beginbulkthemeoverride()","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"beginBulkThemeOverride","kind":"identifier"},{"text":"()","kind":"text"}],"title":"beginBulkThemeOverride()","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Prevents "},{"type":"codeVoice","code":"*_theme_*_override"},{"text":" methods from emitting ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/notificationThemeChanged"},{"type":"text","text":" until "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/endBulkThemeOverride()"},{"text":" is called.","type":"text"}]},"doc://SwiftGodot/documentation/SwiftGodot/Control/mouseExited":{"abstract":[{"text":"Emitted when the mouse cursor leaves the control’s (and all child control’s) visible area, that is not occluded behind other Controls or Windows, provided its ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/mouseFilter-swift.property","isActive":true},{"text":" lets the event reach it and regardless if it’s currently focused or not.","type":"text"}],"title":"mouseExited","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"mouseExited"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot12SimpleSignalC","text":"SimpleSignal"}],"type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/mouseExited","kind":"symbol","url":"\/documentation\/swiftgodot\/control\/mouseexited"},"doc://SwiftGodot/documentation/SwiftGodot/Control/_hasPoint(_:)":{"url":"\/documentation\/swiftgodot\/control\/_haspoint(_:)","type":"topic","role":"symbol","title":"_hasPoint(_:)","abstract":[{"text":"Virtual method to be implemented by the user. Returns whether the given ","type":"text"},{"type":"codeVoice","code":"point"},{"type":"text","text":" is inside this control."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"_hasPoint","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot7Vector2V","text":"Vector2"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/_hasPoint(_:)","kind":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/Control/setDragForwarding(dragFunc:canDropFunc:dropFunc:)":{"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/swiftgodot\/control\/setdragforwarding(dragfunc:candropfunc:dropfunc:)","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/setDragForwarding(dragFunc:canDropFunc:dropFunc:)","abstract":[{"type":"text","text":"Forwards the handling of this control’s "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/_getDragData(atPosition:)","isActive":true},{"type":"text","text":",  "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/_canDropData(atPosition:data:)","type":"reference","isActive":true},{"type":"text","text":" and "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/_dropData(atPosition:data:)","isActive":true},{"type":"text","text":" virtual functions to delegate callables."}],"title":"setDragForwarding(dragFunc:canDropFunc:dropFunc:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"setDragForwarding","kind":"identifier"},{"text":"(","kind":"text"},{"text":"dragFunc","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Callable","preciseIdentifier":"s:10SwiftGodot8CallableC","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"canDropFunc","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot8CallableC","text":"Callable"},{"kind":"text","text":", "},{"text":"dropFunc","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10SwiftGodot8CallableC","text":"Callable","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://SwiftGodot/documentation/SwiftGodot/Control/hasThemeFontSizeOverride(name:)":{"kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/hasThemeFontSizeOverride(name:)","role":"symbol","url":"\/documentation\/swiftgodot\/control\/hasthemefontsizeoverride(name:)","title":"hasThemeFontSizeOverride(name:)","type":"topic","abstract":[{"text":"Returns ","type":"text"},{"type":"codeVoice","code":"true"},{"type":"text","text":" if there is a local override for a theme font size with the specified "},{"code":"name","type":"codeVoice"},{"type":"text","text":" in this "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control"},{"type":"text","text":" node."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hasThemeFontSizeOverride","kind":"identifier"},{"kind":"text","text":"("},{"text":"name","kind":"externalParam"},{"kind":"text","text":": "},{"text":"StringName","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot10StringNameC"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}]},"doc://SwiftGodot/documentation/SwiftGodot/Control/sizeFlagsStretchRatio":{"type":"topic","title":"sizeFlagsStretchRatio","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/sizeFlagsStretchRatio","abstract":[{"text":"If the node and at least one of its neighbors uses the .sizeExpand size flag, the parent ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Container"},{"type":"text","text":" will let it take more or less space depending on this property. If this node has a stretch ratio of 2 and its neighbor a ratio of 1, this node will take two thirds of the available space."}],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"sizeFlagsStretchRatio","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sd","kind":"typeIdentifier","text":"Double"}],"url":"\/documentation\/swiftgodot\/control\/sizeflagsstretchratio","kind":"symbol","role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/NinePatchRect":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NinePatchRect","kind":"identifier"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/NinePatchRect","role":"symbol","title":"NinePatchRect","type":"topic","url":"\/documentation\/swiftgodot\/ninepatchrect","navigatorTitle":[{"text":"NinePatchRect","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"A control that displays a texture by keeping its corners intact, but tiling its edges and center.","type":"text"}]},"doc://SwiftGodot/documentation/SwiftGodot/Control/notificationScrollBegin":{"abstract":[{"type":"text","text":"Sent when this node is inside a "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/ScrollContainer","type":"reference","isActive":true},{"text":" which has begun being scrolled when dragging the scrollable area ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"with a touch event","type":"text"}]},{"type":"text","text":". This notification is "},{"type":"emphasis","inlineContent":[{"text":"not","type":"text"}]},{"text":" sent when scrolling by dragging the scrollbar, scrolling with the mouse wheel or scrolling with keyboard\/gamepad events.","type":"text"}],"url":"\/documentation\/swiftgodot\/control\/notificationscrollbegin","title":"notificationScrollBegin","role":"symbol","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/notificationScrollBegin","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"notificationScrollBegin"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"}]},"doc://SwiftGodot/s12IdentifiableP":{"type":"unresolvable","identifier":"doc:\/\/SwiftGodot\/s12IdentifiableP","title":"Swift.Identifiable"},"doc://SwiftGodot/documentation/SwiftGodot/Control/_dropData(atPosition:data:)":{"role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/swiftgodot\/control\/_dropdata(atposition:data:)","title":"_dropData(atPosition:data:)","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/_dropData(atPosition:data:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"_dropData","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"atPosition"},{"text":": ","kind":"text"},{"text":"Vector2","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot7Vector2V"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"data"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot7VariantC","text":"Variant","kind":"typeIdentifier"},{"kind":"text","text":")"}],"abstract":[{"text":"Godot calls this method to pass you the ","type":"text"},{"code":"data","type":"codeVoice"},{"type":"text","text":" from a control’s "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/_getDragData(atPosition:)","isActive":true},{"text":" result. Godot first calls ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/_canDropData(atPosition:data:)","isActive":true,"type":"reference"},{"text":" to test if ","type":"text"},{"code":"data","type":"codeVoice"},{"type":"text","text":" is allowed to drop at "},{"code":"atPosition","type":"codeVoice"},{"type":"text","text":" where "},{"code":"atPosition","type":"codeVoice"},{"type":"text","text":" is local to this control."}]},"doc://SwiftGodot/documentation/SwiftGodot/Control/resetSize()":{"abstract":[{"type":"text","text":"Resets the size to "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/getCombinedMinimumSize()","isActive":true,"type":"reference"},{"text":". This is equivalent to calling ","type":"text"},{"code":"set_size(Vector2())","type":"codeVoice"},{"text":" (or any size below the minimum).","type":"text"}],"url":"\/documentation\/swiftgodot\/control\/resetsize()","title":"resetSize()","role":"symbol","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/resetSize()","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"resetSize","kind":"identifier"},{"kind":"text","text":"()"}]},"doc://SwiftGodot/documentation/SwiftGodot/Control/rotation":{"type":"topic","kind":"symbol","title":"rotation","url":"\/documentation\/swiftgodot\/control\/rotation","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/rotation","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"rotation"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"}],"role":"symbol","abstract":[{"type":"text","text":"The node’s rotation around its pivot, in radians. See "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/pivotOffset","type":"reference","isActive":true},{"type":"text","text":" to change the pivot’s position."}]},"doc://SwiftGodot/documentation/SwiftGodot/Control/layoutDirection-swift.property":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/layoutDirection-swift.property","title":"layoutDirection","url":"\/documentation\/swiftgodot\/control\/layoutdirection-swift.property","type":"topic","abstract":[{"type":"text","text":"Controls layout direction and text writing direction. Right-to-left layouts are necessary for certain languages (e.g. Arabic and Hebrew)."}],"kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"layoutDirection"},{"kind":"text","text":": "},{"text":"Control","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot7ControlC"},{"text":".","kind":"text"},{"text":"LayoutDirection","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot7ControlC15LayoutDirectionO"}]},"doc://SwiftGodot/documentation/SwiftGodot/Control/notificationFocusExit":{"role":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/notificationFocusExit","title":"notificationFocusExit","url":"\/documentation\/swiftgodot\/control\/notificationfocusexit","kind":"symbol","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"notificationFocusExit"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Sent when the node loses focus."}]},"doc://SwiftGodot/documentation/SwiftGodot/Control/setOffsetsPreset(_:resizeMode:margin:)":{"abstract":[{"type":"text","text":"Sets the offsets to a "},{"code":"preset","type":"codeVoice"},{"text":" from ","type":"text"},{"code":"Control.LayoutPreset","type":"codeVoice"},{"text":" enum. This is the code equivalent to using the Layout menu in the 2D editor.","type":"text"}],"url":"\/documentation\/swiftgodot\/control\/setoffsetspreset(_:resizemode:margin:)","title":"setOffsetsPreset(_:resizeMode:margin:)","role":"symbol","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/setOffsetsPreset(_:resizeMode:margin:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"setOffsetsPreset","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Control","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot7ControlC"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"LayoutPreset","preciseIdentifier":"s:10SwiftGodot7ControlC12LayoutPresetO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"resizeMode"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot7ControlC","text":"Control"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"LayoutPresetMode","preciseIdentifier":"s:10SwiftGodot7ControlC16LayoutPresetModeO"},{"text":", ","kind":"text"},{"text":"margin","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int32","kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V"},{"text":")","kind":"text"}]},"doc://SwiftGodot/documentation/SwiftGodot/Side":{"kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Side","url":"\/documentation\/swiftgodot\/side","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Side"}],"title":"Side","navigatorTitle":[{"text":"Side","kind":"identifier"}],"type":"topic","abstract":[]},"doc://SwiftGodot/documentation/SwiftGodot/Control/hasThemeStylebox(name:themeType:)":{"role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/hasThemeStylebox(name:themeType:)","abstract":[{"type":"text","text":"Returns "},{"type":"codeVoice","code":"true"},{"type":"text","text":" if there is a matching "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Theme","isActive":true},{"type":"text","text":" in the tree that has a stylebox item with the specified "},{"type":"codeVoice","code":"name"},{"type":"text","text":" and "},{"code":"themeType","type":"codeVoice"},{"text":".","type":"text"}],"url":"\/documentation\/swiftgodot\/control\/hasthemestylebox(name:themetype:)","title":"hasThemeStylebox(name:themeType:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"hasThemeStylebox"},{"kind":"text","text":"("},{"kind":"externalParam","text":"name"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot10StringNameC","text":"StringName"},{"text":", ","kind":"text"},{"text":"themeType","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot10StringNameC","kind":"typeIdentifier","text":"StringName"},{"kind":"text","text":") -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}]},"doc://SwiftGodot/documentation/SwiftGodot/Control/setAnchorsPreset(_:keepOffsets:)":{"abstract":[{"text":"Sets the anchors to a ","type":"text"},{"type":"codeVoice","code":"preset"},{"text":" from ","type":"text"},{"type":"codeVoice","code":"Control.LayoutPreset"},{"type":"text","text":" enum. This is the code equivalent to using the Layout menu in the 2D editor."}],"kind":"symbol","title":"setAnchorsPreset(_:keepOffsets:)","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/setAnchorsPreset(_:keepOffsets:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"setAnchorsPreset","kind":"identifier"},{"kind":"text","text":"("},{"text":"Control","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot7ControlC"},{"kind":"text","text":"."},{"text":"LayoutPreset","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot7ControlC12LayoutPresetO"},{"text":", ","kind":"text"},{"text":"keepOffsets","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":")","kind":"text"}],"url":"\/documentation\/swiftgodot\/control\/setanchorspreset(_:keepoffsets:)","type":"topic","role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/Color":{"url":"\/documentation\/swiftgodot\/color","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Color","kind":"identifier"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Color","title":"Color","abstract":[{"type":"text","text":"A color represented in RGBA format."}],"navigatorTitle":[{"kind":"identifier","text":"Color"}],"role":"symbol","type":"topic"},"doc://SwiftGodot/documentation/SwiftGodot/Control/hasFocus()":{"role":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/hasFocus()","title":"hasFocus()","url":"\/documentation\/swiftgodot\/control\/hasfocus()","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"hasFocus"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"abstract":[{"type":"text","text":"Returns "},{"code":"true","type":"codeVoice"},{"type":"text","text":" if this is the current focused control. See "},{"isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/focusMode-swift.property","type":"reference"},{"text":".","type":"text"}]},"doc://SwiftGodot/documentation/SwiftGodot/Control/addThemeFontSizeOverride(name:fontSize:)":{"kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/addThemeFontSizeOverride(name:fontSize:)","role":"symbol","url":"\/documentation\/swiftgodot\/control\/addthemefontsizeoverride(name:fontsize:)","title":"addThemeFontSizeOverride(name:fontSize:)","type":"topic","abstract":[{"type":"text","text":"Creates a local override for a theme font size with the specified "},{"type":"codeVoice","code":"name"},{"text":". Local overrides always take precedence when fetching theme items for the control. An override can be removed with ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/removeThemeFontSizeOverride(name:)","isActive":true,"type":"reference"},{"type":"text","text":"."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"addThemeFontSizeOverride"},{"text":"(","kind":"text"},{"text":"name","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StringName","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot10StringNameC"},{"text":", ","kind":"text"},{"text":"fontSize","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Int32","kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V"},{"text":")","kind":"text"}]},"doc://SwiftGodot/documentation/SwiftGodot/Control/setDragPreview(control:)":{"abstract":[{"type":"text","text":"Shows the given control at the mouse pointer. A good time to call this method is in "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/_getDragData(atPosition:)","isActive":true},{"type":"text","text":". The control must not be in the scene tree. You should not free the control, and you should not keep a reference to the control beyond the duration of the drag. It will be deleted automatically after the drag has ended."}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/setDragPreview(control:)","role":"symbol","url":"\/documentation\/swiftgodot\/control\/setdragpreview(control:)","type":"topic","title":"setDragPreview(control:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"setDragPreview","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"control"},{"text":": ","kind":"text"},{"text":"Control","preciseIdentifier":"s:10SwiftGodot7ControlC","kind":"typeIdentifier"},{"text":"?)","kind":"text"}],"kind":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/VariantRepresentable":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/VariantRepresentable","abstract":[{"type":"text","text":"Types that conform to VariantRepresentable can be stored directly in "},{"type":"codeVoice","code":"Variant"},{"type":"text","text":" "},{"type":"text","text":"with no conversion.  These include all of the Variant types from Godot (for"},{"text":" ","type":"text"},{"text":"example ","type":"text"},{"code":"GString","type":"codeVoice"},{"type":"text","text":", "},{"code":"Rect","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Plane","type":"codeVoice"},{"type":"text","text":"), Godot objects (those that subclass"},{"type":"text","text":" "},{"type":"text","text":"SwiftGodot.Object) as well as the built-in Swift types UInt8, Int64 and Double."}],"kind":"symbol","navigatorTitle":[{"text":"VariantRepresentable","kind":"identifier"}],"type":"topic","url":"\/documentation\/swiftgodot\/variantrepresentable","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"VariantRepresentable","kind":"identifier"}],"title":"VariantRepresentable","role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/Control/getThemeConstant(name:themeType:)":{"abstract":[{"text":"Returns a constant from the first matching ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Theme","type":"reference"},{"type":"text","text":" in the tree if that "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Theme","type":"reference","isActive":true},{"type":"text","text":" has a constant item with the specified "},{"code":"name","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"themeType"},{"text":".","type":"text"}],"url":"\/documentation\/swiftgodot\/control\/getthemeconstant(name:themetype:)","title":"getThemeConstant(name:themeType:)","role":"symbol","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/getThemeConstant(name:themeType:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getThemeConstant"},{"text":"(","kind":"text"},{"text":"name","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StringName","preciseIdentifier":"s:10SwiftGodot10StringNameC","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"themeType"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10SwiftGodot10StringNameC","kind":"typeIdentifier","text":"StringName"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:s5Int32V","text":"Int32","kind":"typeIdentifier"}]},"doc://SwiftGodot/documentation/SwiftGodot/Control/setBegin(position:)":{"role":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/setBegin(position:)","title":"setBegin(position:)","url":"\/documentation\/swiftgodot\/control\/setbegin(position:)","kind":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"setBegin","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"position"},{"kind":"text","text":": "},{"text":"Vector2","preciseIdentifier":"s:10SwiftGodot7Vector2V","kind":"typeIdentifier"},{"kind":"text","text":")"}],"abstract":[{"text":"Sets ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/offsetLeft","type":"reference"},{"text":" and ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/offsetTop","isActive":true,"type":"reference"},{"text":" at the same time. Equivalent of changing ","type":"text"},{"type":"codeVoice","code":"position"},{"text":".","type":"text"}]},"doc://SwiftGodot/documentation/SwiftGodot/Control/clipContents":{"kind":"symbol","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/clipContents","abstract":[{"type":"text","text":"Enables whether rendering of "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/CanvasItem"},{"type":"text","text":" based children should be clipped to this control’s rectangle. If "},{"type":"codeVoice","code":"true"},{"type":"text","text":", parts of a child which would be visibly outside of this control’s rectangle will not be rendered and won’t receive input."}],"title":"clipContents","role":"symbol","url":"\/documentation\/swiftgodot\/control\/clipcontents","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"clipContents","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}]},"doc://SwiftGodot/documentation/SwiftGodot/Control/scale":{"type":"topic","kind":"symbol","title":"scale","url":"\/documentation\/swiftgodot\/control\/scale","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/scale","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"scale"},{"kind":"text","text":": "},{"text":"Vector2","preciseIdentifier":"s:10SwiftGodot7Vector2V","kind":"typeIdentifier"}],"role":"symbol","abstract":[{"type":"text","text":"The node’s scale, relative to its "},{"type":"codeVoice","code":"size"},{"type":"text","text":". Change this property to scale the node around its "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/pivotOffset","isActive":true,"type":"reference"},{"type":"text","text":". The Control’s "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/tooltipText","type":"reference","isActive":true},{"type":"text","text":" will also scale according to this value."}]},"doc://SwiftGodot/documentation/SwiftGodot/Control/customMinimumSize":{"url":"\/documentation\/swiftgodot\/control\/customminimumsize","type":"topic","abstract":[{"text":"The minimum size of the node’s bounding rectangle. If you set it to a value greater than ","type":"text"},{"code":"(0, 0)","type":"codeVoice"},{"type":"text","text":", the node’s bounding rectangle will always have at least this size. Note that "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control","isActive":true},{"type":"text","text":" nodes have their internal minimum size returned by "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/getMinimumSize()","isActive":true,"type":"reference"},{"type":"text","text":". It depends on the control’s contents, like text, textures, or style boxes. The actual minimum size is the maximum value of this property and the internal minimum size (see "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/getCombinedMinimumSize()","isActive":true,"type":"reference"},{"type":"text","text":")."}],"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"customMinimumSize"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot7Vector2V","text":"Vector2","kind":"typeIdentifier"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/customMinimumSize","kind":"symbol","title":"customMinimumSize"},"doc://SwiftGodot/documentation/SwiftGodot/Control/offsetLeft":{"abstract":[{"text":"Distance between the node’s left edge and its parent control, based on ","type":"text"},{"type":"codeVoice","code":"anchorLeft"},{"text":".","type":"text"}],"url":"\/documentation\/swiftgodot\/control\/offsetleft","title":"offsetLeft","role":"symbol","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/offsetLeft","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"offsetLeft"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sd","text":"Double"}]},"doc://SwiftGodot/documentation/SwiftGodot/VideoStreamPlayer":{"title":"VideoStreamPlayer","abstract":[{"text":"A control used for video playback.","type":"text"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/VideoStreamPlayer","url":"\/documentation\/swiftgodot\/videostreamplayer","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"VideoStreamPlayer","kind":"identifier"}],"type":"topic","role":"symbol","kind":"symbol","navigatorTitle":[{"text":"VideoStreamPlayer","kind":"identifier"}]},"doc://SwiftGodot/documentation/SwiftGodot/Control/localizeNumeralSystem":{"role":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/localizeNumeralSystem","title":"localizeNumeralSystem","url":"\/documentation\/swiftgodot\/control\/localizenumeralsystem","kind":"symbol","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"localizeNumeralSystem"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"If "},{"code":"true","type":"codeVoice"},{"text":", automatically converts code line numbers, list indices, ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/SpinBox","isActive":true,"type":"reference"},{"text":" and ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/ProgressBar"},{"type":"text","text":" values from the Western Arabic (0..9) to the numeral systems used in current locale."}]},"doc://SwiftGodot/documentation/SwiftGodot/Object/set(property:value:)":{"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"set"},{"kind":"text","text":"("},{"text":"property","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot10StringNameC","text":"StringName"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot7VariantC","text":"Variant"},{"kind":"text","text":")"}],"url":"\/documentation\/swiftgodot\/object\/set(property:value:)","title":"set(property:value:)","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Object\/set(property:value:)","kind":"symbol","abstract":[{"text":"Assigns ","type":"text"},{"code":"value","type":"codeVoice"},{"type":"text","text":" to the given "},{"type":"codeVoice","code":"property"},{"type":"text","text":". If the property does not exist or the given "},{"type":"codeVoice","code":"value"},{"type":"text","text":"‘s type doesn’t match, nothing happens."}]},"doc://SwiftGodot/documentation/SwiftGodot/Control/getSize()":{"abstract":[],"url":"\/documentation\/swiftgodot\/control\/getsize()","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/getSize()","type":"topic","title":"getSize()","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"getSize"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot7Vector2V","text":"Vector2","kind":"typeIdentifier"}]},"doc://SwiftGodot/documentation/SwiftGodot/Control/focusNeighborBottom":{"abstract":[{"type":"text","text":"Tells Godot which node it should give focus to if the user presses the down arrow on the keyboard or down on a gamepad by default. You can change the key by editing the "},{"type":"codeVoice","code":"ProjectSettings\/input\/uiDown"},{"text":" input action. The node must be a ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control","isActive":true,"type":"reference"},{"text":". If this property is not set, Godot will give focus to the closest ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control","isActive":true,"type":"reference"},{"type":"text","text":" to the bottom of this one."}],"url":"\/documentation\/swiftgodot\/control\/focusneighborbottom","title":"focusNeighborBottom","role":"symbol","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/focusNeighborBottom","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"focusNeighborBottom"},{"text":": ","kind":"text"},{"text":"NodePath","preciseIdentifier":"s:10SwiftGodot8NodePathC","kind":"typeIdentifier"}]},"doc://SwiftGodot/documentation/SwiftGodot/Control/removeThemeIconOverride(name:)":{"kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/removeThemeIconOverride(name:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"removeThemeIconOverride","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"name"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot10StringNameC","text":"StringName","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/swiftgodot\/control\/removethemeiconoverride(name:)","role":"symbol","title":"removeThemeIconOverride(name:)","abstract":[{"text":"Removes a local override for a theme icon with the specified ","type":"text"},{"type":"codeVoice","code":"name"},{"type":"text","text":" previously added by "},{"isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/addThemeIconOverride(name:texture:)","type":"reference"},{"text":" or via the Inspector dock.","type":"text"}],"type":"topic"},"doc://SwiftGodot/documentation/SwiftGodot/Variant":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Variant","navigatorTitle":[{"kind":"identifier","text":"Variant"}],"abstract":[{"text":"Variant objects box various Godot Objects, you create them with one of the","type":"text"},{"type":"text","text":" "},{"text":"constructors, and you can retrieve the contents using the various extension","type":"text"},{"type":"text","text":" "},{"type":"text","text":"constructors that are declared on the various types that are wrapped."}],"kind":"symbol","role":"symbol","url":"\/documentation\/swiftgodot\/variant","title":"Variant","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Variant","kind":"identifier"}]},"doc://SwiftGodot/documentation/SwiftGodot/NodePath":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/NodePath","navigatorTitle":[{"kind":"identifier","text":"NodePath"}],"abstract":[{"text":"A pre-parsed scene tree path.","type":"text"}],"kind":"symbol","role":"symbol","url":"\/documentation\/swiftgodot\/nodepath","title":"NodePath","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NodePath","kind":"identifier"}]},"doc://SwiftGodot/documentation/SwiftGodot/InputEventMouseButton":{"kind":"symbol","abstract":[{"type":"text","text":"Represents a mouse button being pressed or released."}],"url":"\/documentation\/swiftgodot\/inputeventmousebutton","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/InputEventMouseButton","role":"symbol","navigatorTitle":[{"text":"InputEventMouseButton","kind":"identifier"}],"title":"InputEventMouseButton","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"InputEventMouseButton","kind":"identifier"}],"type":"topic"},"doc://SwiftGodot/documentation/SwiftGodot/Viewport":{"abstract":[{"text":"Abstract base class for viewports. Encapsulates drawing and interaction with a game world.","type":"text"}],"kind":"symbol","role":"symbol","url":"\/documentation\/swiftgodot\/viewport","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Viewport","title":"Viewport","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Viewport"}],"navigatorTitle":[{"kind":"identifier","text":"Viewport"}]},"doc://SwiftGodot/documentation/SwiftGodot/Control/sizeFlagsHorizontal":{"url":"\/documentation\/swiftgodot\/control\/sizeflagshorizontal","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/sizeFlagsHorizontal","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"sizeFlagsHorizontal","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot7ControlC","text":"Control"},{"kind":"text","text":"."},{"text":"SizeFlags","preciseIdentifier":"s:10SwiftGodot7ControlC9SizeFlagsV","kind":"typeIdentifier"}],"kind":"symbol","type":"topic","role":"symbol","title":"sizeFlagsHorizontal","abstract":[{"type":"text","text":"Tells the parent "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Container","isActive":true,"type":"reference"},{"text":" nodes how they should resize and place the node on the X axis. Use a combination of the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/SizeFlags"},{"type":"text","text":" constants to change the flags. See the constants to learn what each does."}]},"doc://SwiftGodot/documentation/SwiftGodot/Node/_unhandledKeyInput(event:)":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"_unhandledKeyInput","kind":"identifier"},{"kind":"text","text":"("},{"text":"event","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"InputEvent","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot10InputEventC"},{"text":"?)","kind":"text"}],"type":"topic","abstract":[{"type":"text","text":"Called when an "},{"isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/InputEventKey","type":"reference"},{"text":" hasn’t been consumed by ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Node\/_input(event:)"},{"type":"text","text":" or any GUI "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control","isActive":true},{"type":"text","text":" item. It is called after "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Node\/_shortcutInput(event:)","isActive":true,"type":"reference"},{"text":" but before ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Node\/_unhandledInput(event:)","isActive":true,"type":"reference"},{"type":"text","text":". The input event propagates up through the node tree until a node consumes it."}],"url":"\/documentation\/swiftgodot\/node\/_unhandledkeyinput(event:)","title":"_unhandledKeyInput(event:)","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Node\/_unhandledKeyInput(event:)"},"doc://SwiftGodot/documentation/SwiftGodot/Control/addThemeIconOverride(name:texture:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"addThemeIconOverride","kind":"identifier"},{"kind":"text","text":"("},{"text":"name","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StringName","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot10StringNameC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"texture"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Texture2D","preciseIdentifier":"s:10SwiftGodot9Texture2DC"},{"text":"?)","kind":"text"}],"kind":"symbol","title":"addThemeIconOverride(name:texture:)","type":"topic","url":"\/documentation\/swiftgodot\/control\/addthemeiconoverride(name:texture:)","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/addThemeIconOverride(name:texture:)","abstract":[{"text":"Creates a local override for a theme icon with the specified ","type":"text"},{"code":"name","type":"codeVoice"},{"type":"text","text":". Local overrides always take precedence when fetching theme items for the control. An override can be removed with "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/removeThemeIconOverride(name:)","isActive":true},{"text":".","type":"text"}],"role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/Control/Signal1":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/Signal1","kind":"symbol","abstract":[{"text":"Signal support.","type":"text"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"Signal1","kind":"identifier"}],"title":"Control.Signal1","role":"symbol","url":"\/documentation\/swiftgodot\/control\/signal1","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Signal1"}]},"doc://SwiftGodot/documentation/SwiftGodot/Control/addThemeFontOverride(name:font:)":{"role":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/addThemeFontOverride(name:font:)","title":"addThemeFontOverride(name:font:)","url":"\/documentation\/swiftgodot\/control\/addthemefontoverride(name:font:)","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"addThemeFontOverride"},{"kind":"text","text":"("},{"kind":"externalParam","text":"name"},{"text":": ","kind":"text"},{"text":"StringName","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot10StringNameC"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"font"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10SwiftGodot4FontC","text":"Font","kind":"typeIdentifier"},{"text":"?)","kind":"text"}],"abstract":[{"text":"Creates a local override for a theme ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Font","isActive":true,"type":"reference"},{"type":"text","text":" with the specified "},{"code":"name","type":"codeVoice"},{"text":". Local overrides always take precedence when fetching theme items for the control. An override can be removed with ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/removeThemeFontOverride(name:)"},{"text":".","type":"text"}]},"doc://SwiftGodot/documentation/SwiftGodot/Control/findNextValidFocus()":{"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"findNextValidFocus"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","text":"Control","preciseIdentifier":"s:10SwiftGodot7ControlC"},{"text":"?","kind":"text"}],"url":"\/documentation\/swiftgodot\/control\/findnextvalidfocus()","role":"symbol","type":"topic","title":"findNextValidFocus()","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/findNextValidFocus()","abstract":[{"text":"Finds the next (below in the tree) ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control"},{"type":"text","text":" that can receive the focus."}]},"doc://SwiftGodot/documentation/SwiftGodot/ProgressBar":{"abstract":[{"type":"text","text":"A control used for visual representation of a percentage."}],"type":"topic","role":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/ProgressBar","url":"\/documentation\/swiftgodot\/progressbar","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ProgressBar"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ProgressBar","kind":"identifier"}],"title":"ProgressBar"},"doc://SwiftGodot/documentation/SwiftGodot/Control/getAnchor(side:)":{"abstract":[{"text":"Returns the anchor for the specified ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Side"},{"text":". A getter method for ","type":"text"},{"code":"anchorBottom","type":"codeVoice"},{"type":"text","text":", "},{"code":"anchorLeft","type":"codeVoice"},{"text":", ","type":"text"},{"code":"anchorRight","type":"codeVoice"},{"type":"text","text":" and "},{"code":"anchorTop","type":"codeVoice"},{"type":"text","text":"."}],"url":"\/documentation\/swiftgodot\/control\/getanchor(side:)","title":"getAnchor(side:)","role":"symbol","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/getAnchor(side:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getAnchor","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"side"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10SwiftGodot4SideO","kind":"typeIdentifier","text":"Side"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sd","text":"Double","kind":"typeIdentifier"}]},"doc://SwiftGodot/documentation/SwiftGodot/Theme/defaultFont":{"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"defaultFont","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot4FontC","text":"Font"},{"text":"?","kind":"text"}],"kind":"symbol","abstract":[{"type":"text","text":"The default font of this theme resource. Used as the default value when trying to fetch a font resource that doesn’t exist in this theme or is in invalid state. If the default font is also missing or invalid, the engine fallback value is used (see "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/ThemeDB\/fallbackFont","isActive":true},{"type":"text","text":")."}],"role":"symbol","url":"\/documentation\/swiftgodot\/theme\/defaultfont","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Theme\/defaultFont","title":"defaultFont"},"doc://SwiftGodot/documentation/SwiftGodot/SceneTree":{"type":"topic","url":"\/documentation\/swiftgodot\/scenetree","abstract":[{"text":"Manages the game loop via a hierarchy of nodes.","type":"text"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"SceneTree"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SceneTree"}],"title":"SceneTree","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/SceneTree"},"doc://SwiftGodot/documentation/SwiftGodot/Control/FocusMode-swift.enum":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/FocusMode-swift.enum","kind":"symbol","url":"\/documentation\/swiftgodot\/control\/focusmode-swift.enum","navigatorTitle":[{"kind":"identifier","text":"FocusMode"}],"abstract":[],"type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FocusMode","kind":"identifier"}],"title":"Control.FocusMode","role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/Node/_shortcutInput(event:)":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"_shortcutInput","kind":"identifier"},{"text":"(","kind":"text"},{"text":"event","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"InputEvent","preciseIdentifier":"s:10SwiftGodot10InputEventC","kind":"typeIdentifier"},{"kind":"text","text":"?)"}],"type":"topic","abstract":[{"type":"text","text":"Called when an "},{"isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/InputEventKey","type":"reference"},{"type":"text","text":", "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/InputEventShortcut","isActive":true,"type":"reference"},{"type":"text","text":", or "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/InputEventJoypadButton","isActive":true},{"text":" hasn’t been consumed by ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Node\/_input(event:)","isActive":true,"type":"reference"},{"type":"text","text":" or any GUI "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control","type":"reference","isActive":true},{"type":"text","text":" item. It is called before "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Node\/_unhandledKeyInput(event:)","type":"reference","isActive":true},{"text":" and ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Node\/_unhandledInput(event:)","isActive":true,"type":"reference"},{"type":"text","text":". The input event propagates up through the node tree until a node consumes it."}],"url":"\/documentation\/swiftgodot\/node\/_shortcutinput(event:)","title":"_shortcutInput(event:)","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Node\/_shortcutInput(event:)"}}}
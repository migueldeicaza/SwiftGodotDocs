{"abstract":[{"type":"text","text":"Provides methods for some common 2D geometric operations."}],"sections":[],"topicSections":[{"anchor":"Type-Properties","generated":true,"identifiers":["doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Geometry2D\/godotClassName","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Geometry2D\/shared"],"title":"Type Properties"},{"title":"Type Methods","identifiers":["doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Geometry2D\/clipPolygons(polygonA:polygonB:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Geometry2D\/clipPolylineWithPolygon(polyline:polygon:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Geometry2D\/convexHull(points:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Geometry2D\/decomposePolygonInConvex(polygon:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Geometry2D\/excludePolygons(polygonA:polygonB:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Geometry2D\/getClosestPointToSegment(point:s1:s2:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Geometry2D\/getClosestPointToSegmentUncapped(point:s1:s2:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Geometry2D\/getClosestPointsBetweenSegments(p1:q1:p2:q2:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Geometry2D\/intersectPolygons(polygonA:polygonB:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Geometry2D\/intersectPolylineWithPolygon(polyline:polygon:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Geometry2D\/isPointInCircle(point:circlePosition:circleRadius:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Geometry2D\/isPointInPolygon(point:polygon:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Geometry2D\/isPolygonClockwise(polygon:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Geometry2D\/lineIntersectsLine(fromA:dirA:fromB:dirB:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Geometry2D\/makeAtlas(sizes:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Geometry2D\/mergePolygons(polygonA:polygonB:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Geometry2D\/offsetPolygon(_:delta:joinType:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Geometry2D\/offsetPolyline(_:delta:joinType:endType:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Geometry2D\/pointIsInsideTriangle(point:a:b:c:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Geometry2D\/segmentIntersectsCircle(segmentFrom:segmentTo:circlePosition:circleRadius:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Geometry2D\/segmentIntersectsSegment(fromA:toA:fromB:toB:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Geometry2D\/triangulateDelaunay(points:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Geometry2D\/triangulatePolygon(_:)"],"generated":true,"anchor":"Type-Methods"},{"identifiers":["doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Geometry2D\/PolyBooleanOperation","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Geometry2D\/PolyEndType","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Geometry2D\/PolyJoinType"],"title":"Enumerations","anchor":"Enumerations","generated":true}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftgodot\/geometry2d"]}],"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"relationshipsSections":[{"type":"inheritsFrom","identifiers":["doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Object"],"kind":"relationships","title":"Inherits From"},{"type":"conformsTo","identifiers":["doc:\/\/SwiftGodot\/s23CustomStringConvertibleP","doc:\/\/SwiftGodot\/SQ","doc:\/\/SwiftGodot\/SH","doc:\/\/SwiftGodot\/s12IdentifiableP","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/VariantRepresentable","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/VariantStorable"],"kind":"relationships","title":"Conforms To"}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"Geometry2D","kind":"identifier"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"type":"heading","level":2,"text":"Overview","anchor":"overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Provides a set of helper functions to create geometric shapes, compute intersections between shapes, and process various other geometric operations in 2D."}]}],"kind":"content"}],"metadata":{"navigatorTitle":[{"kind":"identifier","text":"Geometry2D"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Geometry2D","kind":"identifier"}],"roleHeading":"Class","role":"symbol","externalID":"s:10SwiftGodot10Geometry2DC","symbolKind":"class","modules":[{"name":"SwiftGodot"}],"title":"Geometry2D"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Geometry2D"},"hierarchy":{"paths":[["doc:\/\/SwiftGodot\/documentation\/SwiftGodot"]]},"references":{"doc://SwiftGodot/documentation/SwiftGodot/Geometry2D/getClosestPointsBetweenSegments(p1:q1:p2:q2:)":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"getClosestPointsBetweenSegments","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"p1"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10SwiftGodot7Vector2V","kind":"typeIdentifier","text":"Vector2"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"q1"},{"text":": ","kind":"text"},{"text":"Vector2","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot7Vector2V"},{"kind":"text","text":", "},{"kind":"externalParam","text":"p2"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10SwiftGodot7Vector2V","text":"Vector2","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"q2","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Vector2","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot7Vector2V"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot18PackedVector2ArrayC","text":"PackedVector2Array"}],"abstract":[{"text":"Given the two 2D segments (","type":"text"},{"type":"codeVoice","code":"p1"},{"text":", ","type":"text"},{"code":"q1","type":"codeVoice"},{"type":"text","text":") and ("},{"type":"codeVoice","code":"p2"},{"text":", ","type":"text"},{"type":"codeVoice","code":"q2"},{"type":"text","text":"), finds those two points on the two segments that are closest to each other. Returns a "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PackedVector2Array","type":"reference","isActive":true},{"text":" that contains this point on (","type":"text"},{"code":"p1","type":"codeVoice"},{"text":", ","type":"text"},{"code":"q1","type":"codeVoice"},{"type":"text","text":") as well the accompanying point on ("},{"code":"p2","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"q2"},{"type":"text","text":")."}],"role":"symbol","kind":"symbol","title":"getClosestPointsBetweenSegments(p1:q1:p2:q2:)","url":"\/documentation\/swiftgodot\/geometry2d\/getclosestpointsbetweensegments(p1:q1:p2:q2:)","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Geometry2D\/getClosestPointsBetweenSegments(p1:q1:p2:q2:)","type":"topic"},"doc://SwiftGodot/documentation/SwiftGodot/Geometry2D/getClosestPointToSegmentUncapped(point:s1:s2:)":{"title":"getClosestPointToSegmentUncapped(point:s1:s2:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getClosestPointToSegmentUncapped","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"point"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot7Vector2V","text":"Vector2","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"s1","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Vector2","preciseIdentifier":"s:10SwiftGodot7Vector2V"},{"kind":"text","text":", "},{"text":"s2","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Vector2","preciseIdentifier":"s:10SwiftGodot7Vector2V"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot7Vector2V","text":"Vector2","kind":"typeIdentifier"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Geometry2D\/getClosestPointToSegmentUncapped(point:s1:s2:)","abstract":[{"text":"Returns the 2D point on the 2D line defined by (","type":"text"},{"type":"codeVoice","code":"s1"},{"type":"text","text":", "},{"code":"s2","type":"codeVoice"},{"text":") that is closest to ","type":"text"},{"code":"point","type":"codeVoice"},{"type":"text","text":". The returned point can be inside the segment ("},{"type":"codeVoice","code":"s1"},{"type":"text","text":", "},{"code":"s2","type":"codeVoice"},{"type":"text","text":") or outside of it, i.e. somewhere on the line extending from the segment."}],"type":"topic","url":"\/documentation\/swiftgodot\/geometry2d\/getclosestpointtosegmentuncapped(point:s1:s2:)"},"doc://SwiftGodot/documentation/SwiftGodot/Geometry2D/PolyJoinType":{"title":"Geometry2D.PolyJoinType","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"PolyJoinType","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Geometry2D\/PolyJoinType","abstract":[],"role":"symbol","navigatorTitle":[{"text":"PolyJoinType","kind":"identifier"}],"type":"topic","url":"\/documentation\/swiftgodot\/geometry2d\/polyjointype"},"doc://SwiftGodot/documentation/SwiftGodot/Geometry2D/triangulatePolygon(_:)":{"url":"\/documentation\/swiftgodot\/geometry2d\/triangulatepolygon(_:)","abstract":[{"text":"Triangulates the polygon specified by the points in ","type":"text"},{"type":"codeVoice","code":"polygon"},{"type":"text","text":". Returns a "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PackedInt32Array","isActive":true},{"text":" where each triangle consists of three consecutive point indices into ","type":"text"},{"type":"codeVoice","code":"polygon"},{"text":" (i.e. the returned array will have ","type":"text"},{"type":"codeVoice","code":"n * 3"},{"type":"text","text":" elements, with "},{"type":"codeVoice","code":"n"},{"text":" being the number of found triangles). Output triangles will always be counter clockwise, and the contour will be flipped if it’s clockwise. If the triangulation did not succeed, an empty ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PackedInt32Array","type":"reference","isActive":true},{"text":" is returned.","type":"text"}],"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"triangulatePolygon"},{"kind":"text","text":"("},{"text":"PackedVector2Array","preciseIdentifier":"s:10SwiftGodot18PackedVector2ArrayC","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"PackedInt32Array","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot16PackedInt32ArrayC"}],"role":"symbol","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Geometry2D\/triangulatePolygon(_:)","title":"triangulatePolygon(_:)","kind":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/VariantRepresentable":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/VariantRepresentable","abstract":[{"type":"text","text":"Types that conform to VariantRepresentable can be stored directly in "},{"type":"codeVoice","code":"Variant"},{"type":"text","text":" "},{"type":"text","text":"with no conversion.  These include all of the Variant types from Godot (for"},{"text":" ","type":"text"},{"text":"example ","type":"text"},{"code":"GString","type":"codeVoice"},{"type":"text","text":", "},{"code":"Rect","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Plane","type":"codeVoice"},{"type":"text","text":"), Godot objects (those that subclass"},{"type":"text","text":" "},{"type":"text","text":"SwiftGodot.Object) as well as the built-in Swift types UInt8, Int64 and Double."}],"kind":"symbol","navigatorTitle":[{"text":"VariantRepresentable","kind":"identifier"}],"type":"topic","url":"\/documentation\/swiftgodot\/variantrepresentable","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"VariantRepresentable","kind":"identifier"}],"title":"VariantRepresentable","role":"symbol"},"doc://SwiftGodot/s23CustomStringConvertibleP":{"title":"Swift.CustomStringConvertible","type":"unresolvable","identifier":"doc:\/\/SwiftGodot\/s23CustomStringConvertibleP"},"doc://SwiftGodot/documentation/SwiftGodot/Geometry2D/segmentIntersectsSegment(fromA:toA:fromB:toB:)":{"type":"topic","role":"symbol","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"segmentIntersectsSegment"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"fromA"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot7Vector2V","text":"Vector2"},{"text":", ","kind":"text"},{"text":"toA","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot7Vector2V","text":"Vector2","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"fromB","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10SwiftGodot7Vector2V","text":"Vector2","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"toB","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Vector2","preciseIdentifier":"s:10SwiftGodot7Vector2V"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot7VariantC","text":"Variant"}],"url":"\/documentation\/swiftgodot\/geometry2d\/segmentintersectssegment(froma:toa:fromb:tob:)","abstract":[{"type":"text","text":"Checks if the two segments ("},{"code":"fromA","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"toA"},{"type":"text","text":") and ("},{"type":"codeVoice","code":"fromB"},{"type":"text","text":", "},{"type":"codeVoice","code":"toB"},{"type":"text","text":") intersect. If yes, return the point of intersection as "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Vector2","isActive":true},{"type":"text","text":". If no intersection takes place, returns "},{"code":"null","type":"codeVoice"},{"type":"text","text":"."}],"title":"segmentIntersectsSegment(fromA:toA:fromB:toB:)","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Geometry2D\/segmentIntersectsSegment(fromA:toA:fromB:toB:)"},"doc://SwiftGodot/documentation/SwiftGodot/Geometry2D/excludePolygons(polygonA:polygonB:)":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"excludePolygons"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"polygonA"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot18PackedVector2ArrayC","text":"PackedVector2Array","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"polygonB","kind":"externalParam"},{"kind":"text","text":": "},{"text":"PackedVector2Array","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot18PackedVector2ArrayC"},{"text":") -> ","kind":"text"},{"text":"VariantCollection","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot17VariantCollectionC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"PackedVector2Array","preciseIdentifier":"s:10SwiftGodot18PackedVector2ArrayC"},{"text":">","kind":"text"}],"abstract":[{"type":"text","text":"Mutually excludes common area defined by intersection of "},{"type":"codeVoice","code":"polygonA"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"polygonB"},{"text":" (see ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Geometry2D\/intersectPolygons(polygonA:polygonB:)","type":"reference","isActive":true},{"text":") and returns an array of excluded polygons. This performs .operationXor between polygons. In other words, returns all but common area between polygons.","type":"text"}],"role":"symbol","kind":"symbol","title":"excludePolygons(polygonA:polygonB:)","url":"\/documentation\/swiftgodot\/geometry2d\/excludepolygons(polygona:polygonb:)","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Geometry2D\/excludePolygons(polygonA:polygonB:)","type":"topic"},"doc://SwiftGodot/documentation/SwiftGodot/Geometry2D/convexHull(points:)":{"kind":"symbol","type":"topic","abstract":[{"text":"Given an array of ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Vector2","isActive":true},{"type":"text","text":"s, returns the convex hull as a list of points in counterclockwise order. The last point is the same as the first one."}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Geometry2D\/convexHull(points:)","url":"\/documentation\/swiftgodot\/geometry2d\/convexhull(points:)","title":"convexHull(points:)","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"convexHull"},{"kind":"text","text":"("},{"kind":"externalParam","text":"points"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10SwiftGodot18PackedVector2ArrayC","text":"PackedVector2Array","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"PackedVector2Array","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot18PackedVector2ArrayC"}]},"doc://SwiftGodot/documentation/SwiftGodot/Geometry2D/lineIntersectsLine(fromA:dirA:fromB:dirB:)":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Geometry2D\/lineIntersectsLine(fromA:dirA:fromB:dirB:)","abstract":[{"text":"Checks if the two lines (","type":"text"},{"type":"codeVoice","code":"fromA"},{"text":", ","type":"text"},{"type":"codeVoice","code":"dirA"},{"text":") and (","type":"text"},{"type":"codeVoice","code":"fromB"},{"type":"text","text":", "},{"type":"codeVoice","code":"dirB"},{"text":") intersect. If yes, return the point of intersection as ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Vector2"},{"text":". If no intersection takes place, returns ","type":"text"},{"code":"null","type":"codeVoice"},{"text":".","type":"text"}],"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lineIntersectsLine","kind":"identifier"},{"kind":"text","text":"("},{"text":"fromA","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Vector2","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot7Vector2V"},{"kind":"text","text":", "},{"text":"dirA","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot7Vector2V","text":"Vector2"},{"kind":"text","text":", "},{"kind":"externalParam","text":"fromB"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot7Vector2V","text":"Vector2"},{"text":", ","kind":"text"},{"text":"dirB","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Vector2","preciseIdentifier":"s:10SwiftGodot7Vector2V","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Variant","preciseIdentifier":"s:10SwiftGodot7VariantC"}],"role":"symbol","url":"\/documentation\/swiftgodot\/geometry2d\/lineintersectsline(froma:dira:fromb:dirb:)","kind":"symbol","type":"topic","title":"lineIntersectsLine(fromA:dirA:fromB:dirB:)"},"doc://SwiftGodot/documentation/SwiftGodot/Geometry2D":{"title":"Geometry2D","kind":"symbol","url":"\/documentation\/swiftgodot\/geometry2d","role":"symbol","abstract":[{"text":"Provides methods for some common 2D geometric operations.","type":"text"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"Geometry2D"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Geometry2D"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Geometry2D"},"doc://SwiftGodot/documentation/SwiftGodot/Object":{"abstract":[{"type":"text","text":"Base class for all other classes in the engine."}],"url":"\/documentation\/swiftgodot\/object","role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Object","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"Object","kind":"identifier"}],"navigatorTitle":[{"text":"Object","kind":"identifier"}],"title":"Object"},"doc://SwiftGodot/documentation/SwiftGodot":{"kind":"symbol","url":"\/documentation\/swiftgodot","abstract":[{"type":"text","text":"Framework to write Godot Game Extensions using the Swift Programming Language."}],"role":"collection","title":"SwiftGodot","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot"},"doc://SwiftGodot/documentation/SwiftGodot/Geometry2D/getClosestPointToSegment(point:s1:s2:)":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"getClosestPointToSegment","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"point"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot7Vector2V","kind":"typeIdentifier","text":"Vector2"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"s1"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot7Vector2V","text":"Vector2","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"s2","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Vector2","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot7Vector2V"},{"text":") -> ","kind":"text"},{"text":"Vector2","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot7Vector2V"}],"abstract":[{"text":"Returns the 2D point on the 2D segment (","type":"text"},{"type":"codeVoice","code":"s1"},{"type":"text","text":", "},{"type":"codeVoice","code":"s2"},{"type":"text","text":") that is closest to "},{"code":"point","type":"codeVoice"},{"type":"text","text":". The returned point will always be inside the specified segment."}],"role":"symbol","kind":"symbol","title":"getClosestPointToSegment(point:s1:s2:)","url":"\/documentation\/swiftgodot\/geometry2d\/getclosestpointtosegment(point:s1:s2:)","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Geometry2D\/getClosestPointToSegment(point:s1:s2:)","type":"topic"},"doc://SwiftGodot/documentation/SwiftGodot/Geometry2D/intersectPolygons(polygonA:polygonB:)":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Geometry2D\/intersectPolygons(polygonA:polygonB:)","abstract":[{"type":"text","text":"Intersects "},{"code":"polygonA","type":"codeVoice"},{"type":"text","text":" with "},{"type":"codeVoice","code":"polygonB"},{"type":"text","text":" and returns an array of intersected polygons. This performs .operationIntersection between polygons. In other words, returns common area shared by polygons. Returns an empty array if no intersection occurs."}],"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"intersectPolygons","kind":"identifier"},{"kind":"text","text":"("},{"text":"polygonA","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot18PackedVector2ArrayC","text":"PackedVector2Array","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"polygonB"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot18PackedVector2ArrayC","kind":"typeIdentifier","text":"PackedVector2Array"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot17VariantCollectionC","text":"VariantCollection"},{"text":"<","kind":"text"},{"text":"PackedVector2Array","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot18PackedVector2ArrayC"},{"kind":"text","text":">"}],"role":"symbol","url":"\/documentation\/swiftgodot\/geometry2d\/intersectpolygons(polygona:polygonb:)","kind":"symbol","type":"topic","title":"intersectPolygons(polygonA:polygonB:)"},"doc://SwiftGodot/documentation/SwiftGodot/Geometry2D/intersectPolylineWithPolygon(polyline:polygon:)":{"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"intersectPolylineWithPolygon","kind":"identifier"},{"text":"(","kind":"text"},{"text":"polyline","kind":"externalParam"},{"kind":"text","text":": "},{"text":"PackedVector2Array","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot18PackedVector2ArrayC"},{"text":", ","kind":"text"},{"text":"polygon","kind":"externalParam"},{"kind":"text","text":": "},{"text":"PackedVector2Array","preciseIdentifier":"s:10SwiftGodot18PackedVector2ArrayC","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot17VariantCollectionC","kind":"typeIdentifier","text":"VariantCollection"},{"text":"<","kind":"text"},{"text":"PackedVector2Array","preciseIdentifier":"s:10SwiftGodot18PackedVector2ArrayC","kind":"typeIdentifier"},{"kind":"text","text":">"}],"abstract":[{"text":"Intersects ","type":"text"},{"code":"polyline","type":"codeVoice"},{"text":" with ","type":"text"},{"code":"polygon","type":"codeVoice"},{"type":"text","text":" and returns an array of intersected polylines. This performs .operationIntersection between the polyline and the polygon. This operation can be thought of as chopping a line with a closed shape."}],"role":"symbol","title":"intersectPolylineWithPolygon(polyline:polygon:)","kind":"symbol","url":"\/documentation\/swiftgodot\/geometry2d\/intersectpolylinewithpolygon(polyline:polygon:)","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Geometry2D\/intersectPolylineWithPolygon(polyline:polygon:)","type":"topic"},"doc://SwiftGodot/s12IdentifiableP":{"type":"unresolvable","identifier":"doc:\/\/SwiftGodot\/s12IdentifiableP","title":"Swift.Identifiable"},"doc://SwiftGodot/documentation/SwiftGodot/Geometry2D/isPointInCircle(point:circlePosition:circleRadius:)":{"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isPointInCircle","kind":"identifier"},{"kind":"text","text":"("},{"text":"point","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot7Vector2V","text":"Vector2","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"circlePosition"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot7Vector2V","kind":"typeIdentifier","text":"Vector2"},{"kind":"text","text":", "},{"kind":"externalParam","text":"circleRadius"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":") -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Returns "},{"code":"true","type":"codeVoice"},{"text":" if ","type":"text"},{"code":"point","type":"codeVoice"},{"text":" is inside the circle or if it’s located exactly ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"on"}]},{"type":"text","text":" the circle’s boundary, otherwise returns "},{"type":"codeVoice","code":"false"},{"type":"text","text":"."}],"role":"symbol","title":"isPointInCircle(point:circlePosition:circleRadius:)","kind":"symbol","url":"\/documentation\/swiftgodot\/geometry2d\/ispointincircle(point:circleposition:circleradius:)","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Geometry2D\/isPointInCircle(point:circlePosition:circleRadius:)","type":"topic"},"doc://SwiftGodot/documentation/SwiftGodot/Vector2i":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Vector2i","navigatorTitle":[{"kind":"identifier","text":"Vector2i"}],"abstract":[{"type":"text","text":"A 2D vector using integer coordinates."}],"kind":"symbol","role":"symbol","url":"\/documentation\/swiftgodot\/vector2i","title":"Vector2i","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Vector2i","kind":"identifier"}]},"doc://SwiftGodot/documentation/SwiftGodot/Geometry2D/offsetPolyline(_:delta:joinType:endType:)":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Geometry2D\/offsetPolyline(_:delta:joinType:endType:)","abstract":[{"type":"text","text":"Inflates or deflates "},{"type":"codeVoice","code":"polyline"},{"type":"text","text":" by "},{"code":"delta","type":"codeVoice"},{"type":"text","text":" units (pixels), producing polygons. If "},{"code":"delta","type":"codeVoice"},{"text":" is positive, makes the polyline grow outward. Returns an array of polygons because inflating\/deflating may result in multiple discrete polygons. If ","type":"text"},{"code":"delta","type":"codeVoice"},{"text":" is negative, returns an empty array.","type":"text"}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"offsetPolyline"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot18PackedVector2ArrayC","text":"PackedVector2Array"},{"kind":"text","text":", "},{"text":"delta","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sd","text":"Double","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"joinType","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot10Geometry2DC","kind":"typeIdentifier","text":"Geometry2D"},{"text":".","kind":"text"},{"text":"PolyJoinType","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot10Geometry2DC12PolyJoinTypeO"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"endType"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot10Geometry2DC","text":"Geometry2D"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot10Geometry2DC11PolyEndTypeO","text":"PolyEndType"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:10SwiftGodot17VariantCollectionC","kind":"typeIdentifier","text":"VariantCollection"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot18PackedVector2ArrayC","text":"PackedVector2Array","kind":"typeIdentifier"},{"kind":"text","text":">"}],"role":"symbol","url":"\/documentation\/swiftgodot\/geometry2d\/offsetpolyline(_:delta:jointype:endtype:)","kind":"symbol","type":"topic","title":"offsetPolyline(_:delta:joinType:endType:)"},"doc://SwiftGodot/documentation/SwiftGodot/Geometry2D/clipPolylineWithPolygon(polyline:polygon:)":{"title":"clipPolylineWithPolygon(polyline:polygon:)","abstract":[{"type":"text","text":"Clips "},{"code":"polyline","type":"codeVoice"},{"text":" against ","type":"text"},{"code":"polygon","type":"codeVoice"},{"type":"text","text":" and returns an array of clipped polylines. This performs .operationDifference between the polyline and the polygon. This operation can be thought of as cutting a line with a closed shape."}],"url":"\/documentation\/swiftgodot\/geometry2d\/clippolylinewithpolygon(polyline:polygon:)","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"clipPolylineWithPolygon","kind":"identifier"},{"text":"(","kind":"text"},{"text":"polyline","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot18PackedVector2ArrayC","text":"PackedVector2Array","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"polygon","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"PackedVector2Array","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot18PackedVector2ArrayC"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot17VariantCollectionC","text":"VariantCollection"},{"kind":"text","text":"<"},{"text":"PackedVector2Array","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot18PackedVector2ArrayC"},{"text":">","kind":"text"}],"type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Geometry2D\/clipPolylineWithPolygon(polyline:polygon:)","kind":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/Geometry2D/PolyBooleanOperation":{"abstract":[],"kind":"symbol","url":"\/documentation\/swiftgodot\/geometry2d\/polybooleanoperation","title":"Geometry2D.PolyBooleanOperation","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"PolyBooleanOperation","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Geometry2D\/PolyBooleanOperation","type":"topic","navigatorTitle":[{"text":"PolyBooleanOperation","kind":"identifier"}]},"doc://SwiftGodot/documentation/SwiftGodot/Geometry2D/isPointInPolygon(point:polygon:)":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Geometry2D\/isPointInPolygon(point:polygon:)","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isPointInPolygon"},{"kind":"text","text":"("},{"text":"point","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Vector2","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot7Vector2V"},{"text":", ","kind":"text"},{"text":"polygon","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10SwiftGodot18PackedVector2ArrayC","kind":"typeIdentifier","text":"PackedVector2Array"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"abstract":[{"text":"Returns ","type":"text"},{"type":"codeVoice","code":"true"},{"text":" if ","type":"text"},{"code":"point","type":"codeVoice"},{"text":" is inside ","type":"text"},{"code":"polygon","type":"codeVoice"},{"type":"text","text":" or if it’s located exactly "},{"type":"emphasis","inlineContent":[{"type":"text","text":"on"}]},{"type":"text","text":" polygon’s boundary, otherwise returns "},{"type":"codeVoice","code":"false"},{"text":".","type":"text"}],"title":"isPointInPolygon(point:polygon:)","url":"\/documentation\/swiftgodot\/geometry2d\/ispointinpolygon(point:polygon:)","type":"topic","role":"symbol"},"doc://SwiftGodot/SQ":{"title":"Swift.Equatable","type":"unresolvable","identifier":"doc:\/\/SwiftGodot\/SQ"},"doc://SwiftGodot/documentation/SwiftGodot/PackedVector2Array":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PackedVector2Array","kind":"identifier"}],"navigatorTitle":[{"text":"PackedVector2Array","kind":"identifier"}],"type":"topic","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"A packed array of "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Vector2","isActive":true,"type":"reference"},{"type":"text","text":"s."}],"url":"\/documentation\/swiftgodot\/packedvector2array","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PackedVector2Array","title":"PackedVector2Array"},"doc://SwiftGodot/documentation/SwiftGodot/Geometry2D/clipPolygons(polygonA:polygonB:)":{"abstract":[{"text":"Clips ","type":"text"},{"code":"polygonA","type":"codeVoice"},{"type":"text","text":" against "},{"code":"polygonB","type":"codeVoice"},{"text":" and returns an array of clipped polygons. This performs .operationDifference between polygons. Returns an empty array if ","type":"text"},{"type":"codeVoice","code":"polygonB"},{"text":" completely overlaps ","type":"text"},{"code":"polygonA","type":"codeVoice"},{"type":"text","text":"."}],"title":"clipPolygons(polygonA:polygonB:)","role":"symbol","url":"\/documentation\/swiftgodot\/geometry2d\/clippolygons(polygona:polygonb:)","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Geometry2D\/clipPolygons(polygonA:polygonB:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"clipPolygons"},{"kind":"text","text":"("},{"kind":"externalParam","text":"polygonA"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot18PackedVector2ArrayC","text":"PackedVector2Array"},{"kind":"text","text":", "},{"text":"polygonB","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot18PackedVector2ArrayC","text":"PackedVector2Array"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"VariantCollection","preciseIdentifier":"s:10SwiftGodot17VariantCollectionC"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot18PackedVector2ArrayC","text":"PackedVector2Array","kind":"typeIdentifier"},{"text":">","kind":"text"}],"kind":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/Geometry2D/isPolygonClockwise(polygon:)":{"abstract":[{"type":"text","text":"Returns "},{"code":"true","type":"codeVoice"},{"text":" if ","type":"text"},{"type":"codeVoice","code":"polygon"},{"type":"text","text":"’s vertices are ordered in clockwise order, otherwise returns "},{"code":"false","type":"codeVoice"},{"type":"text","text":"."}],"type":"topic","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"isPolygonClockwise"},{"kind":"text","text":"("},{"kind":"externalParam","text":"polygon"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10SwiftGodot18PackedVector2ArrayC","text":"PackedVector2Array","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Geometry2D\/isPolygonClockwise(polygon:)","title":"isPolygonClockwise(polygon:)","url":"\/documentation\/swiftgodot\/geometry2d\/ispolygonclockwise(polygon:)","role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/Vector2":{"abstract":[{"text":"A 2D vector using floating-point coordinates.","type":"text"}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Vector2","kind":"identifier"}],"navigatorTitle":[{"text":"Vector2","kind":"identifier"}],"url":"\/documentation\/swiftgodot\/vector2","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Vector2","title":"Vector2","type":"topic","role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/Geometry2D/PolyEndType":{"role":"symbol","abstract":[],"kind":"symbol","url":"\/documentation\/swiftgodot\/geometry2d\/polyendtype","type":"topic","title":"Geometry2D.PolyEndType","navigatorTitle":[{"kind":"identifier","text":"PolyEndType"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Geometry2D\/PolyEndType","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"PolyEndType","kind":"identifier"}]},"doc://SwiftGodot/documentation/SwiftGodot/VariantStorable":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/VariantStorable","abstract":[{"text":"Types that conform to VariantStorable can be stored in a Variant and can be extracted","type":"text"},{"type":"text","text":" "},{"text":"back out of a Variant.","type":"text"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"VariantStorable"}],"type":"topic","url":"\/documentation\/swiftgodot\/variantstorable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"VariantStorable"}],"title":"VariantStorable","role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/Geometry2D/segmentIntersectsCircle(segmentFrom:segmentTo:circlePosition:circleRadius:)":{"role":"symbol","title":"segmentIntersectsCircle(segmentFrom:segmentTo:circlePosition:circleRadius:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"segmentIntersectsCircle","kind":"identifier"},{"text":"(","kind":"text"},{"text":"segmentFrom","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Vector2","preciseIdentifier":"s:10SwiftGodot7Vector2V"},{"kind":"text","text":", "},{"text":"segmentTo","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10SwiftGodot7Vector2V","text":"Vector2","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"circlePosition","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot7Vector2V","text":"Vector2","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"circleRadius","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sd","text":"Double"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sd","text":"Double"}],"type":"topic","url":"\/documentation\/swiftgodot\/geometry2d\/segmentintersectscircle(segmentfrom:segmentto:circleposition:circleradius:)","abstract":[{"type":"text","text":"Given the 2D segment ("},{"code":"segmentFrom","type":"codeVoice"},{"text":", ","type":"text"},{"code":"segmentTo","type":"codeVoice"},{"text":"), returns the position on the segment (as a number between 0 and 1) at which the segment hits the circle that is located at position ","type":"text"},{"type":"codeVoice","code":"circlePosition"},{"text":" and has radius ","type":"text"},{"type":"codeVoice","code":"circleRadius"},{"type":"text","text":". If the segment does not intersect the circle, -1 is returned (this is also the case if the line extending the segment would intersect the circle, but the segment does not)."}],"kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Geometry2D\/segmentIntersectsCircle(segmentFrom:segmentTo:circlePosition:circleRadius:)"},"doc://SwiftGodot/documentation/SwiftGodot/Geometry2D/makeAtlas(sizes:)":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Geometry2D\/makeAtlas(sizes:)","abstract":[{"type":"text","text":"Given an array of "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Vector2","isActive":true,"type":"reference"},{"text":"s representing tiles, builds an atlas. The returned dictionary has two keys: ","type":"text"},{"code":"points","type":"codeVoice"},{"type":"text","text":" is a "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PackedVector2Array","isActive":true,"type":"reference"},{"type":"text","text":" that specifies the positions of each tile, "},{"code":"size","type":"codeVoice"},{"text":" contains the overall size of the whole atlas as ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Vector2i","isActive":true,"type":"reference"},{"text":".","type":"text"}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"makeAtlas","kind":"identifier"},{"text":"(","kind":"text"},{"text":"sizes","kind":"externalParam"},{"kind":"text","text":": "},{"text":"PackedVector2Array","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot18PackedVector2ArrayC"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot11GDictionaryC","text":"GDictionary"}],"role":"symbol","url":"\/documentation\/swiftgodot\/geometry2d\/makeatlas(sizes:)","kind":"symbol","type":"topic","title":"makeAtlas(sizes:)"},"doc://SwiftGodot/documentation/SwiftGodot/Geometry2D/decomposePolygonInConvex(polygon:)":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"decomposePolygonInConvex","kind":"identifier"},{"text":"(","kind":"text"},{"text":"polygon","kind":"externalParam"},{"kind":"text","text":": "},{"text":"PackedVector2Array","preciseIdentifier":"s:10SwiftGodot18PackedVector2ArrayC","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"VariantCollection","preciseIdentifier":"s:10SwiftGodot17VariantCollectionC","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot18PackedVector2ArrayC","text":"PackedVector2Array"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Decomposes the "},{"type":"codeVoice","code":"polygon"},{"text":" into multiple convex hulls and returns an array of ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PackedVector2Array","isActive":true,"type":"reference"},{"type":"text","text":"."}],"role":"symbol","title":"decomposePolygonInConvex(polygon:)","kind":"symbol","url":"\/documentation\/swiftgodot\/geometry2d\/decomposepolygoninconvex(polygon:)","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Geometry2D\/decomposePolygonInConvex(polygon:)","type":"topic"},"doc://SwiftGodot/documentation/SwiftGodot/Geometry2D/offsetPolygon(_:delta:joinType:)":{"title":"offsetPolygon(_:delta:joinType:)","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Geometry2D\/offsetPolygon(_:delta:joinType:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"offsetPolygon"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"PackedVector2Array","preciseIdentifier":"s:10SwiftGodot18PackedVector2ArrayC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"delta"},{"kind":"text","text":": "},{"text":"Double","preciseIdentifier":"s:Sd","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"joinType","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot10Geometry2DC","text":"Geometry2D"},{"text":".","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot10Geometry2DC12PolyJoinTypeO","kind":"typeIdentifier","text":"PolyJoinType"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"VariantCollection","preciseIdentifier":"s:10SwiftGodot17VariantCollectionC"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:10SwiftGodot18PackedVector2ArrayC","kind":"typeIdentifier","text":"PackedVector2Array"},{"text":">","kind":"text"}],"url":"\/documentation\/swiftgodot\/geometry2d\/offsetpolygon(_:delta:jointype:)","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Inflates or deflates "},{"type":"codeVoice","code":"polygon"},{"type":"text","text":" by "},{"type":"codeVoice","code":"delta"},{"text":" units (pixels). If ","type":"text"},{"code":"delta","type":"codeVoice"},{"type":"text","text":" is positive, makes the polygon grow outward. If "},{"code":"delta","type":"codeVoice"},{"type":"text","text":" is negative, shrinks the polygon inward. Returns an array of polygons because inflating\/deflating may result in multiple discrete polygons. Returns an empty array if "},{"type":"codeVoice","code":"delta"},{"text":" is negative and the absolute value of it approximately exceeds the minimum bounding rectangle dimensions of the polygon.","type":"text"}],"role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/Geometry2D/pointIsInsideTriangle(point:a:b:c:)":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Geometry2D\/pointIsInsideTriangle(point:a:b:c:)","abstract":[{"type":"text","text":"Returns if "},{"type":"codeVoice","code":"point"},{"text":" is inside the triangle specified by ","type":"text"},{"type":"codeVoice","code":"a"},{"type":"text","text":", "},{"code":"b","type":"codeVoice"},{"type":"text","text":" and "},{"code":"c","type":"codeVoice"},{"type":"text","text":"."}],"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"pointIsInsideTriangle","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"point"},{"text":": ","kind":"text"},{"text":"Vector2","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot7Vector2V"},{"text":", ","kind":"text"},{"text":"a","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Vector2","preciseIdentifier":"s:10SwiftGodot7Vector2V"},{"kind":"text","text":", "},{"kind":"externalParam","text":"b"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Vector2","preciseIdentifier":"s:10SwiftGodot7Vector2V"},{"text":", ","kind":"text"},{"text":"c","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Vector2","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot7Vector2V"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"role":"symbol","url":"\/documentation\/swiftgodot\/geometry2d\/pointisinsidetriangle(point:a:b:c:)","kind":"symbol","type":"topic","title":"pointIsInsideTriangle(point:a:b:c:)"},"doc://SwiftGodot/documentation/SwiftGodot/Geometry2D/mergePolygons(polygonA:polygonB:)":{"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"mergePolygons"},{"kind":"text","text":"("},{"text":"polygonA","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot18PackedVector2ArrayC","text":"PackedVector2Array","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"polygonB","kind":"externalParam"},{"kind":"text","text":": "},{"text":"PackedVector2Array","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot18PackedVector2ArrayC"},{"text":") -> ","kind":"text"},{"text":"VariantCollection","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot17VariantCollectionC"},{"kind":"text","text":"<"},{"text":"PackedVector2Array","preciseIdentifier":"s:10SwiftGodot18PackedVector2ArrayC","kind":"typeIdentifier"},{"kind":"text","text":">"}],"abstract":[{"text":"Merges (combines) ","type":"text"},{"code":"polygonA","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"polygonB","type":"codeVoice"},{"type":"text","text":" and returns an array of merged polygons. This performs .operationUnion between polygons."}],"role":"symbol","title":"mergePolygons(polygonA:polygonB:)","kind":"symbol","url":"\/documentation\/swiftgodot\/geometry2d\/mergepolygons(polygona:polygonb:)","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Geometry2D\/mergePolygons(polygonA:polygonB:)","type":"topic"},"doc://SwiftGodot/SH":{"type":"unresolvable","identifier":"doc:\/\/SwiftGodot\/SH","title":"Swift.Hashable"},"doc://SwiftGodot/documentation/SwiftGodot/Geometry2D/triangulateDelaunay(points:)":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"triangulateDelaunay"},{"kind":"text","text":"("},{"kind":"externalParam","text":"points"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"PackedVector2Array","preciseIdentifier":"s:10SwiftGodot18PackedVector2ArrayC"},{"text":") -> ","kind":"text"},{"text":"PackedInt32Array","preciseIdentifier":"s:10SwiftGodot16PackedInt32ArrayC","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Triangulates the area specified by discrete set of "},{"code":"points","type":"codeVoice"},{"text":" such that no point is inside the circumcircle of any resulting triangle. Returns a ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PackedInt32Array","isActive":true,"type":"reference"},{"text":" where each triangle consists of three consecutive point indices into ","type":"text"},{"code":"points","type":"codeVoice"},{"text":" (i.e. the returned array will have ","type":"text"},{"code":"n * 3","type":"codeVoice"},{"text":" elements, with ","type":"text"},{"code":"n","type":"codeVoice"},{"text":" being the number of found triangles). If the triangulation did not succeed, an empty ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PackedInt32Array"},{"type":"text","text":" is returned."}],"role":"symbol","title":"triangulateDelaunay(points:)","kind":"symbol","url":"\/documentation\/swiftgodot\/geometry2d\/triangulatedelaunay(points:)","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Geometry2D\/triangulateDelaunay(points:)","type":"topic"},"doc://SwiftGodot/documentation/SwiftGodot/Geometry2D/godotClassName":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Geometry2D\/godotClassName","abstract":[],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"godotClassName","kind":"identifier"},{"kind":"text","text":": "},{"text":"StringName","preciseIdentifier":"s:10SwiftGodot10StringNameC","kind":"typeIdentifier"}],"role":"symbol","url":"\/documentation\/swiftgodot\/geometry2d\/godotclassname","kind":"symbol","type":"topic","title":"godotClassName"},"doc://SwiftGodot/documentation/SwiftGodot/Geometry2D/shared":{"url":"\/documentation\/swiftgodot\/geometry2d\/shared","type":"topic","role":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Geometry2D\/shared","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"shared","kind":"identifier"},{"kind":"text","text":": "},{"text":"Geometry2D","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot10Geometry2DC"}],"title":"shared","abstract":[{"type":"text","text":"The shared instance of this class"}],"kind":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/PackedInt32Array":{"title":"PackedInt32Array","navigatorTitle":[{"text":"PackedInt32Array","kind":"identifier"}],"url":"\/documentation\/swiftgodot\/packedint32array","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PackedInt32Array","kind":"symbol","role":"symbol","abstract":[{"text":"A packed array of 32-bit integers.","type":"text"}],"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"PackedInt32Array"}]}}}
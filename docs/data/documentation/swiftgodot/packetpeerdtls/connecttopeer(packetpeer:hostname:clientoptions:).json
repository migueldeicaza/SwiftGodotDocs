{"hierarchy":{"paths":[["doc:\/\/SwiftGodot\/documentation\/SwiftGodot","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeerDTLS"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"connectToPeer"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"packetPeer"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot13PacketPeerUDPC","kind":"typeIdentifier","text":"PacketPeerUDP","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeerUDP"},{"text":"?, ","kind":"text"},{"text":"hostname","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"clientOptions","kind":"externalParam"},{"kind":"text","text":": "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/TLSOptions","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot10TLSOptionsC","text":"TLSOptions"},{"text":"? = nil) -> ","kind":"text"},{"text":"GodotError","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GodotError","preciseIdentifier":"s:10SwiftGodot0B5ErrorO","kind":"typeIdentifier"}],"platforms":["macOS"],"languages":["swift"]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftgodot\/packetpeerdtls\/connecttopeer(packetpeer:hostname:clientoptions:)"]}],"identifier":{"url":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeerDTLS\/connectToPeer(packetPeer:hostname:clientOptions:)","interfaceLanguage":"swift"},"sections":[],"abstract":[{"text":"Connects a ","type":"text"},{"code":"packetPeer","type":"codeVoice"},{"type":"text","text":" beginning the DTLS handshake using the underlying "},{"isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeerUDP","type":"reference"},{"text":" which must be connected (see ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeerUDP\/connectToHost(_:port:)","isActive":true,"type":"reference"},{"type":"text","text":"). You can optionally specify the "},{"code":"clientOptions","type":"codeVoice"},{"type":"text","text":" to be used while verifying the TLS connections. See "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/TLSOptions\/client(trustedChain:commonNameOverride:)","type":"reference","isActive":true},{"type":"text","text":" and "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/TLSOptions\/clientUnsafe(trustedChain:)","type":"reference","isActive":true},{"text":".","type":"text"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","metadata":{"role":"symbol","modules":[{"name":"SwiftGodot"}],"roleHeading":"Instance Method","externalID":"s:10SwiftGodot14PacketPeerDTLSC09connectToD006packetD08hostname13clientOptionsAA0B5ErrorOAA0cD3UDPCSg_SSAA10TLSOptionsCSgtF","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"connectToPeer"},{"kind":"text","text":"("},{"text":"packetPeer","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"PacketPeerUDP","preciseIdentifier":"s:10SwiftGodot13PacketPeerUDPC"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"hostname"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"clientOptions","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"TLSOptions","preciseIdentifier":"s:10SwiftGodot10TLSOptionsC","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"text":"GodotError","preciseIdentifier":"s:10SwiftGodot0B5ErrorO","kind":"typeIdentifier"}],"symbolKind":"method","title":"connectToPeer(packetPeer:hostname:clientOptions:)"},"references":{"doc://SwiftGodot/documentation/SwiftGodot/PacketPeer/putPacket(buffer:)":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeer\/putPacket(buffer:)","title":"putPacket(buffer:)","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"putPacket","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"buffer"},{"kind":"text","text":": "},{"text":"PackedByteArray","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot15PackedByteArrayC"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"GodotError","preciseIdentifier":"s:10SwiftGodot0B5ErrorO"}],"url":"\/documentation\/swiftgodot\/packetpeer\/putpacket(buffer:)","kind":"symbol","abstract":[{"type":"text","text":"Sends a raw packet."}]},"doc://SwiftGodot/documentation/SwiftGodot/PacketPeer/putVar(_:fullObjects:)":{"url":"\/documentation\/swiftgodot\/packetpeer\/putvar(_:fullobjects:)","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeer\/putVar(_:fullObjects:)","role":"symbol","title":"putVar(_:fullObjects:)","abstract":[{"type":"text","text":"Sends a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Variant"},{"type":"text","text":" as a packet. If "},{"type":"codeVoice","code":"fullObjects"},{"type":"text","text":" is "},{"code":"true","type":"codeVoice"},{"type":"text","text":", encoding objects is allowed (and can potentially include code)."}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"putVar"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Variant","preciseIdentifier":"s:10SwiftGodot7VariantC"},{"kind":"text","text":", "},{"text":"fullObjects","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"GodotError","preciseIdentifier":"s:10SwiftGodot0B5ErrorO","kind":"typeIdentifier"}],"type":"topic"},"doc://SwiftGodot/documentation/SwiftGodot/PacketPeerUDP/connectToHost(_:port:)":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeerUDP\/connectToHost(_:port:)","title":"connectToHost(_:port:)","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"connectToHost"},{"text":"(","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"port","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"},{"kind":"text","text":") -> "},{"text":"GodotError","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot0B5ErrorO"}],"url":"\/documentation\/swiftgodot\/packetpeerudp\/connecttohost(_:port:)","kind":"symbol","abstract":[{"type":"text","text":"Calling this method connects this UDP peer to the given "},{"type":"codeVoice","code":"host"},{"type":"text","text":"\/"},{"type":"codeVoice","code":"port"},{"type":"text","text":" pair. UDP is in reality connectionless, so this option only means that incoming packets from different addresses are automatically discarded, and that outgoing packets are always sent to the connected address (future calls to "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeerUDP\/setDestAddress(host:port:)"},{"type":"text","text":" are not allowed). This method does not send any data to the remote peer, to do that, use "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeer\/putVar(_:fullObjects:)","isActive":true,"type":"reference"},{"type":"text","text":" or "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeer\/putPacket(buffer:)","isActive":true},{"text":" as usual. See also ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/UDPServer","type":"reference"},{"type":"text","text":"."}]},"doc://SwiftGodot/documentation/SwiftGodot/TLSOptions":{"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"TLSOptions","kind":"identifier"}],"role":"symbol","abstract":[{"text":"TLS configuration for clients and servers.","type":"text"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/TLSOptions","url":"\/documentation\/swiftgodot\/tlsoptions","title":"TLSOptions","navigatorTitle":[{"kind":"identifier","text":"TLSOptions"}]},"doc://SwiftGodot/documentation/SwiftGodot/TLSOptions/clientUnsafe(trustedChain:)":{"kind":"symbol","title":"clientUnsafe(trustedChain:)","role":"symbol","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/TLSOptions\/clientUnsafe(trustedChain:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"clientUnsafe","kind":"identifier"},{"text":"(","kind":"text"},{"text":"trustedChain","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot15X509CertificateC","text":"X509Certificate"},{"text":"?) -> ","kind":"text"},{"text":"TLSOptions","preciseIdentifier":"s:10SwiftGodot10TLSOptionsC","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"url":"\/documentation\/swiftgodot\/tlsoptions\/clientunsafe(trustedchain:)","abstract":[{"type":"text","text":"Creates an "},{"type":"strong","inlineContent":[{"type":"text","text":"unsafe"}]},{"text":" TLS client configuration where certificate validation is optional. You can optionally provide a valid ","type":"text"},{"type":"codeVoice","code":"trustedChain"},{"text":", but the common name of the certificates will never be checked. Using this configuration for purposes other than testing ","type":"text"},{"type":"strong","inlineContent":[{"text":"is not recommended","type":"text"}]},{"type":"text","text":"."}]},"doc://SwiftGodot/documentation/SwiftGodot/GodotError":{"title":"GodotError","url":"\/documentation\/swiftgodot\/godoterror","abstract":[],"type":"topic","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GodotError","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"GodotError","kind":"identifier"}],"navigatorTitle":[{"text":"GodotError","kind":"identifier"}]},"doc://SwiftGodot/documentation/SwiftGodot/PacketPeerUDP":{"url":"\/documentation\/swiftgodot\/packetpeerudp","kind":"symbol","abstract":[{"type":"text","text":"UDP packet peer."}],"type":"topic","role":"symbol","navigatorTitle":[{"text":"PacketPeerUDP","kind":"identifier"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeerUDP","title":"PacketPeerUDP","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"PacketPeerUDP","kind":"identifier"}]},"doc://SwiftGodot/documentation/SwiftGodot/TLSOptions/client(trustedChain:commonNameOverride:)":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"client"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"trustedChain"},{"text":": ","kind":"text"},{"text":"X509Certificate","preciseIdentifier":"s:10SwiftGodot15X509CertificateC","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"text":"commonNameOverride","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot10TLSOptionsC","kind":"typeIdentifier","text":"TLSOptions"},{"text":"?","kind":"text"}],"type":"topic","abstract":[{"text":"Creates a TLS client configuration which validates certificates and their common names (fully qualified domain names).","type":"text"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/TLSOptions\/client(trustedChain:commonNameOverride:)","url":"\/documentation\/swiftgodot\/tlsoptions\/client(trustedchain:commonnameoverride:)","kind":"symbol","title":"client(trustedChain:commonNameOverride:)","role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/UDPServer":{"abstract":[{"type":"text","text":"Helper class to implement a UDP server."}],"type":"topic","role":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/UDPServer","url":"\/documentation\/swiftgodot\/udpserver","kind":"symbol","navigatorTitle":[{"text":"UDPServer","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UDPServer"}],"title":"UDPServer"},"doc://SwiftGodot/documentation/SwiftGodot/PacketPeerDTLS":{"abstract":[{"text":"DTLS packet peer.","type":"text"}],"type":"topic","role":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeerDTLS","url":"\/documentation\/swiftgodot\/packetpeerdtls","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"PacketPeerDTLS"}],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"PacketPeerDTLS","kind":"identifier"}],"title":"PacketPeerDTLS"},"doc://SwiftGodot/documentation/SwiftGodot/PacketPeerUDP/setDestAddress(host:port:)":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeerUDP\/setDestAddress(host:port:)","title":"setDestAddress(host:port:)","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"setDestAddress","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"host"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"text":"port","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot0B5ErrorO","kind":"typeIdentifier","text":"GodotError"}],"url":"\/documentation\/swiftgodot\/packetpeerudp\/setdestaddress(host:port:)","kind":"symbol","abstract":[{"type":"text","text":"Sets the destination address and port for sending packets and variables. A hostname will be resolved using DNS if needed."}]},"doc://SwiftGodot/documentation/SwiftGodot/PacketPeerDTLS/connectToPeer(packetPeer:hostname:clientOptions:)":{"url":"\/documentation\/swiftgodot\/packetpeerdtls\/connecttopeer(packetpeer:hostname:clientoptions:)","kind":"symbol","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Connects a "},{"type":"codeVoice","code":"packetPeer"},{"type":"text","text":" beginning the DTLS handshake using the underlying "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeerUDP","isActive":true,"type":"reference"},{"type":"text","text":" which must be connected (see "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeerUDP\/connectToHost(_:port:)","type":"reference","isActive":true},{"text":"). You can optionally specify the ","type":"text"},{"code":"clientOptions","type":"codeVoice"},{"text":" to be used while verifying the TLS connections. See ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/TLSOptions\/client(trustedChain:commonNameOverride:)","type":"reference"},{"text":" and ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/TLSOptions\/clientUnsafe(trustedChain:)","isActive":true},{"type":"text","text":"."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"connectToPeer","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"packetPeer"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot13PacketPeerUDPC","kind":"typeIdentifier","text":"PacketPeerUDP"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"hostname"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"clientOptions"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot10TLSOptionsC","text":"TLSOptions"},{"kind":"text","text":"?) -> "},{"text":"GodotError","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot0B5ErrorO"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeerDTLS\/connectToPeer(packetPeer:hostname:clientOptions:)","title":"connectToPeer(packetPeer:hostname:clientOptions:)"},"doc://SwiftGodot/documentation/SwiftGodot":{"kind":"symbol","url":"\/documentation\/swiftgodot","abstract":[{"type":"text","text":"Framework to write Godot Game Extensions using the Swift Programming Language."}],"role":"collection","title":"SwiftGodot","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot"}}}
{"hierarchy":{"paths":[["doc:\/\/SwiftGodot\/documentation\/SwiftGodot","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GraphEdit"]]},"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"externalID":"s:10SwiftGodot9GraphEditC11getMenuHboxAA13HBoxContainerCSgyF","roleHeading":"Instance Method","modules":[{"name":"SwiftGodot"}],"symbolKind":"method","title":"getMenuHbox()","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"getMenuHbox","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot13HBoxContainerC","text":"HBoxContainer"},{"text":"?","kind":"text"}]},"abstract":[{"text":"Gets the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/HBoxContainer"},{"type":"text","text":" that contains the zooming and grid snap controls in the top left of the graph. You can use this method to reposition the toolbar or to add your own custom controls to it."}],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GraphEdit\/getMenuHbox()"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"getMenuHbox"},{"text":"() -> ","kind":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/HBoxContainer","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot13HBoxContainerC","text":"HBoxContainer"},{"kind":"text","text":"?"}],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"type":"heading","text":"Discussion","anchor":"discussion","level":2},{"style":"warning","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This is a required internal node, removing and freeing it may cause a crash. If you wish to hide it or any of its children, use their "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/CanvasItem\/visible","isActive":true},{"type":"text","text":" property."}]}],"name":"Warning"}],"kind":"content"}],"variants":[{"paths":["\/documentation\/swiftgodot\/graphedit\/getmenuhbox()"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://SwiftGodot/documentation/SwiftGodot/CanvasItem/isVisibleInTree()":{"url":"\/documentation\/swiftgodot\/canvasitem\/isvisibleintree()","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isVisibleInTree","kind":"identifier"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/CanvasItem\/isVisibleInTree()","title":"isVisibleInTree()","abstract":[{"text":"Returns ","type":"text"},{"type":"codeVoice","code":"true"},{"text":" if the node is present in the ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/SceneTree","isActive":true},{"text":", its ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/CanvasItem\/visible","type":"reference"},{"type":"text","text":" property is "},{"code":"true","type":"codeVoice"},{"text":" and all its ancestors are also visible. If any ancestor is hidden, this node will not be visible in the scene tree, and is therefore not drawn (see ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/CanvasItem\/_draw()","isActive":true},{"text":").","type":"text"}],"role":"symbol","type":"topic"},"doc://SwiftGodot/documentation/SwiftGodot/GraphEdit/getMenuHbox()":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"getMenuHbox"},{"text":"() -> ","kind":"text"},{"text":"HBoxContainer","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot13HBoxContainerC"},{"text":"?","kind":"text"}],"kind":"symbol","type":"topic","abstract":[{"text":"Gets the ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/HBoxContainer","isActive":true},{"text":" that contains the zooming and grid snap controls in the top left of the graph. You can use this method to reposition the toolbar or to add your own custom controls to it.","type":"text"}],"url":"\/documentation\/swiftgodot\/graphedit\/getmenuhbox()","title":"getMenuHbox()","role":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GraphEdit\/getMenuHbox()"},"doc://SwiftGodot/documentation/SwiftGodot/GraphNode":{"abstract":[{"type":"text","text":"A container with connection ports, representing a node in a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GraphEdit"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"GraphNode","kind":"identifier"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GraphNode","kind":"symbol","type":"topic","url":"\/documentation\/swiftgodot\/graphnode","title":"GraphNode","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"GraphNode"}]},"doc://SwiftGodot/documentation/SwiftGodot/GraphEdit":{"abstract":[{"text":"An editor for graph-like structures, using ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GraphNode","isActive":true},{"text":"s.","type":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GraphEdit","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"GraphEdit","kind":"identifier"}],"role":"symbol","title":"GraphEdit","navigatorTitle":[{"kind":"identifier","text":"GraphEdit"}],"url":"\/documentation\/swiftgodot\/graphedit"},"doc://SwiftGodot/documentation/SwiftGodot/HBoxContainer":{"url":"\/documentation\/swiftgodot\/hboxcontainer","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/HBoxContainer","title":"HBoxContainer","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBoxContainer"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBoxContainer","kind":"identifier"}],"abstract":[{"type":"text","text":"A container that arranges its child controls horizontally."}],"type":"topic"},"doc://SwiftGodot/documentation/SwiftGodot":{"kind":"symbol","url":"\/documentation\/swiftgodot","abstract":[{"type":"text","text":"Framework to write Godot Game Extensions using the Swift Programming Language."}],"role":"collection","title":"SwiftGodot","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot"},"doc://SwiftGodot/documentation/SwiftGodot/CanvasItem":{"url":"\/documentation\/swiftgodot\/canvasitem","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"CanvasItem","kind":"identifier"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/CanvasItem","title":"CanvasItem","abstract":[{"type":"text","text":"Abstract base class for everything in 2D space."}],"navigatorTitle":[{"text":"CanvasItem","kind":"identifier"}],"role":"symbol","type":"topic"},"doc://SwiftGodot/documentation/SwiftGodot/CanvasItem/visible":{"url":"\/documentation\/swiftgodot\/canvasitem\/visible","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"visible","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/CanvasItem\/visible","title":"visible","abstract":[{"text":"If ","type":"text"},{"code":"true","type":"codeVoice"},{"type":"text","text":", this "},{"isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/CanvasItem","type":"reference"},{"type":"text","text":" is drawn. The node is only visible if all of its ancestors are visible as well (in other words, "},{"isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/CanvasItem\/isVisibleInTree()","type":"reference"},{"type":"text","text":" must return "},{"code":"true","type":"codeVoice"},{"text":").","type":"text"}],"role":"symbol","type":"topic"}}}
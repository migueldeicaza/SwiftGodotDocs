{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftgodot\/websocketpeer\/getrequestedurl()"]}],"abstract":[{"text":"Returns the URL requested by this peer. The URL is derived from the ","type":"text"},{"code":"url","type":"codeVoice"},{"text":" passed to ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebSocketPeer\/connectToUrl(_:tlsClientOptions:)"},{"type":"text","text":" or from the HTTP headers when acting as server (i.e. when using "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebSocketPeer\/acceptStream(_:)"},{"text":").","type":"text"}],"metadata":{"symbolKind":"method","modules":[{"name":"SwiftGodot"}],"roleHeading":"Instance Method","title":"getRequestedUrl()","externalID":"s:10SwiftGodot13WebSocketPeerC15getRequestedUrlSSyF","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"getRequestedUrl"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"role":"symbol"},"sections":[],"hierarchy":{"paths":[["doc:\/\/SwiftGodot\/documentation\/SwiftGodot","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebSocketPeer"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebSocketPeer\/getRequestedUrl()"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getRequestedUrl","kind":"identifier"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"platforms":["macOS"]}]}],"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://SwiftGodot/documentation/SwiftGodot/WebSocketPeer/acceptStream(_:)":{"url":"\/documentation\/swiftgodot\/websocketpeer\/acceptstream(_:)","type":"topic","abstract":[{"type":"text","text":"Accepts a peer connection performing the HTTP handshake as a WebSocket server. The "},{"code":"stream","type":"codeVoice"},{"text":" must be a valid TCP stream retrieved via ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/TCPServer\/takeConnection()","isActive":true},{"type":"text","text":", or a TLS stream accepted via "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/StreamPeerTLS\/acceptStream(_:serverOptions:)"},{"type":"text","text":"."}],"role":"symbol","title":"acceptStream(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"acceptStream","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:10SwiftGodot10StreamPeerC","text":"StreamPeer","kind":"typeIdentifier"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot0B5ErrorO","text":"GodotError"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebSocketPeer\/acceptStream(_:)","kind":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/TCPServer/takeConnection()":{"url":"\/documentation\/swiftgodot\/tcpserver\/takeconnection()","abstract":[{"text":"If a connection is available, returns a StreamPeerTCP with the connection.","type":"text"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/TCPServer\/takeConnection()","title":"takeConnection()","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"takeConnection"},{"text":"() -> ","kind":"text"},{"text":"StreamPeerTCP","preciseIdentifier":"s:10SwiftGodot13StreamPeerTCPC","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/WebSocketPeer/connectToUrl(_:tlsClientOptions:)":{"url":"\/documentation\/swiftgodot\/websocketpeer\/connecttourl(_:tlsclientoptions:)","type":"topic","abstract":[{"text":"Connects to the given URL. TLS certificates will be verified against the hostname when connecting using the ","type":"text"},{"code":"wss:\/\/","type":"codeVoice"},{"text":" protocol. You can pass the optional ","type":"text"},{"code":"tlsClientOptions","type":"codeVoice"},{"text":" parameter to customize the trusted certification authorities, or disable the common name verification. See ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/TLSOptions\/client(trustedChain:commonNameOverride:)"},{"text":" and ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/TLSOptions\/clientUnsafe(trustedChain:)"},{"type":"text","text":"."}],"role":"symbol","title":"connectToUrl(_:tlsClientOptions:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"connectToUrl","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"tlsClientOptions","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot10TLSOptionsC","text":"TLSOptions"},{"text":"?) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot0B5ErrorO","text":"GodotError"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebSocketPeer\/connectToUrl(_:tlsClientOptions:)","kind":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/TLSOptions/clientUnsafe(trustedChain:)":{"kind":"symbol","title":"clientUnsafe(trustedChain:)","role":"symbol","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/TLSOptions\/clientUnsafe(trustedChain:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"clientUnsafe","kind":"identifier"},{"text":"(","kind":"text"},{"text":"trustedChain","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot15X509CertificateC","text":"X509Certificate"},{"text":"?) -> ","kind":"text"},{"text":"TLSOptions","preciseIdentifier":"s:10SwiftGodot10TLSOptionsC","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"url":"\/documentation\/swiftgodot\/tlsoptions\/clientunsafe(trustedchain:)","abstract":[{"type":"text","text":"Creates an "},{"type":"strong","inlineContent":[{"type":"text","text":"unsafe"}]},{"text":" TLS client configuration where certificate validation is optional. You can optionally provide a valid ","type":"text"},{"type":"codeVoice","code":"trustedChain"},{"text":", but the common name of the certificates will never be checked. Using this configuration for purposes other than testing ","type":"text"},{"type":"strong","inlineContent":[{"text":"is not recommended","type":"text"}]},{"type":"text","text":"."}]},"doc://SwiftGodot/documentation/SwiftGodot/WebSocketPeer/getRequestedUrl()":{"url":"\/documentation\/swiftgodot\/websocketpeer\/getrequestedurl()","abstract":[{"type":"text","text":"Returns the URL requested by this peer. The URL is derived from the "},{"type":"codeVoice","code":"url"},{"type":"text","text":" passed to "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebSocketPeer\/connectToUrl(_:tlsClientOptions:)"},{"text":" or from the HTTP headers when acting as server (i.e. when using ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebSocketPeer\/acceptStream(_:)","isActive":true},{"type":"text","text":")."}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebSocketPeer\/getRequestedUrl()","title":"getRequestedUrl()","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"getRequestedUrl"},{"text":"() -> ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot":{"kind":"symbol","url":"\/documentation\/swiftgodot","abstract":[{"type":"text","text":"Framework to write Godot Game Extensions using the Swift Programming Language."}],"role":"collection","title":"SwiftGodot","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot"},"doc://SwiftGodot/documentation/SwiftGodot/TLSOptions/client(trustedChain:commonNameOverride:)":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"client"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"trustedChain"},{"text":": ","kind":"text"},{"text":"X509Certificate","preciseIdentifier":"s:10SwiftGodot15X509CertificateC","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"text":"commonNameOverride","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot10TLSOptionsC","kind":"typeIdentifier","text":"TLSOptions"},{"text":"?","kind":"text"}],"type":"topic","abstract":[{"text":"Creates a TLS client configuration which validates certificates and their common names (fully qualified domain names).","type":"text"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/TLSOptions\/client(trustedChain:commonNameOverride:)","url":"\/documentation\/swiftgodot\/tlsoptions\/client(trustedchain:commonnameoverride:)","kind":"symbol","title":"client(trustedChain:commonNameOverride:)","role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/WebSocketPeer":{"type":"topic","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"WebSocketPeer","kind":"identifier"}],"title":"WebSocketPeer","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebSocketPeer","abstract":[{"type":"text","text":"A WebSocket connection."}],"url":"\/documentation\/swiftgodot\/websocketpeer","navigatorTitle":[{"text":"WebSocketPeer","kind":"identifier"}],"role":"symbol","kind":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/StreamPeerTLS/acceptStream(_:serverOptions:)":{"kind":"symbol","title":"acceptStream(_:serverOptions:)","role":"symbol","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/StreamPeerTLS\/acceptStream(_:serverOptions:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"acceptStream"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot10StreamPeerC","text":"StreamPeer","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"text":"serverOptions","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot10TLSOptionsC","text":"TLSOptions"},{"text":"?) -> ","kind":"text"},{"text":"GodotError","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot0B5ErrorO"}],"url":"\/documentation\/swiftgodot\/streampeertls\/acceptstream(_:serveroptions:)","abstract":[{"text":"Accepts a peer connection as a server using the given ","type":"text"},{"code":"serverOptions","type":"codeVoice"},{"type":"text","text":". See "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/TLSOptions\/server(key:certificate:)"},{"text":".","type":"text"}]}}}
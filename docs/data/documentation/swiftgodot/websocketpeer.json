{"topicSections":[{"generated":true,"anchor":"Instance-Properties","identifiers":["doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebSocketPeer\/handshakeHeaders","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebSocketPeer\/inboundBufferSize","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebSocketPeer\/maxQueuedPackets","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebSocketPeer\/outboundBufferSize","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebSocketPeer\/supportedProtocols"],"title":"Instance Properties"},{"identifiers":["doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebSocketPeer\/acceptStream(_:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebSocketPeer\/close(code:reason:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebSocketPeer\/connectToUrl(_:tlsClientOptions:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebSocketPeer\/getCloseCode()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebSocketPeer\/getCloseReason()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebSocketPeer\/getConnectedHost()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebSocketPeer\/getConnectedPort()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebSocketPeer\/getCurrentOutboundBufferedAmount()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebSocketPeer\/getReadyState()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebSocketPeer\/getRequestedUrl()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebSocketPeer\/getSelectedProtocol()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebSocketPeer\/poll()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebSocketPeer\/send(message:writeMode:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebSocketPeer\/sendText(message:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebSocketPeer\/setNoDelay(enabled:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebSocketPeer\/wasStringPacket()"],"title":"Instance Methods","generated":true,"anchor":"Instance-Methods"},{"identifiers":["doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebSocketPeer\/godotClassName"],"title":"Type Properties","generated":true,"anchor":"Type-Properties"},{"generated":true,"anchor":"Enumerations","identifiers":["doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebSocketPeer\/State","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebSocketPeer\/WriteMode"],"title":"Enumerations"}],"metadata":{"title":"WebSocketPeer","modules":[{"name":"SwiftGodot"}],"roleHeading":"Class","navigatorTitle":[{"text":"WebSocketPeer","kind":"identifier"}],"symbolKind":"class","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"WebSocketPeer","kind":"identifier"}],"role":"symbol","externalID":"s:10SwiftGodot13WebSocketPeerC"},"kind":"symbol","abstract":[{"text":"A WebSocket connection.","type":"text"}],"relationshipsSections":[{"identifiers":["doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeer"],"type":"inheritsFrom","title":"Inherits From","kind":"relationships"},{"type":"conformsTo","kind":"relationships","identifiers":["doc:\/\/SwiftGodot\/s23CustomStringConvertibleP","doc:\/\/SwiftGodot\/SQ","doc:\/\/SwiftGodot\/SH","doc:\/\/SwiftGodot\/s12IdentifiableP","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/VariantRepresentable","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/VariantStorable"],"title":"Conforms To"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"WebSocketPeer"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"type":"heading","text":"Overview","anchor":"overview","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"This class represents WebSocket connection, and can be used as a WebSocket client (RFC 6455-compliant) or as a remote peer of a WebSocket server."}]},{"inlineContent":[{"text":"You can send WebSocket binary frames using ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeer\/putPacket(buffer:)","isActive":true},{"type":"text","text":", and WebSocket text frames using "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebSocketPeer\/send(message:writeMode:)"},{"type":"text","text":" (prefer text frames when interacting with text-based API). You can check the frame type of the last packet via "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebSocketPeer\/wasStringPacket()"},{"type":"text","text":"."}],"type":"paragraph"},{"inlineContent":[{"text":"To start a WebSocket client, first call ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebSocketPeer\/connectToUrl(_:tlsClientOptions:)","isActive":true},{"type":"text","text":", then regularly call "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebSocketPeer\/poll()","isActive":true,"type":"reference"},{"text":" (e.g. during ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Node","isActive":true,"type":"reference"},{"type":"text","text":" process). You can query the socket state via "},{"isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebSocketPeer\/getReadyState()","type":"reference"},{"type":"text","text":", get the number of pending packets using "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeer\/getAvailablePacketCount()","isActive":true},{"text":", and retrieve them via ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeer\/getPacket()","isActive":true},{"text":".","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"To use the peer as part of a WebSocket server refer to "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebSocketPeer\/acceptStream(_:)"},{"type":"text","text":" and the online tutorial."}],"type":"paragraph"}]}],"sections":[],"identifier":{"url":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebSocketPeer","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftgodot\/websocketpeer"]}],"hierarchy":{"paths":[["doc:\/\/SwiftGodot\/documentation\/SwiftGodot"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://SwiftGodot/documentation/SwiftGodot/PacketPeer/getPacket()":{"kind":"symbol","abstract":[{"type":"text","text":"Gets a raw packet."}],"title":"getPacket()","type":"topic","role":"symbol","url":"\/documentation\/swiftgodot\/packetpeer\/getpacket()","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeer\/getPacket()","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"getPacket","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","text":"PackedByteArray","preciseIdentifier":"s:10SwiftGodot15PackedByteArrayC"}]},"doc://SwiftGodot/documentation/SwiftGodot/TLSOptions/client(trustedChain:commonNameOverride:)":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"client"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"trustedChain"},{"text":": ","kind":"text"},{"text":"X509Certificate","preciseIdentifier":"s:10SwiftGodot15X509CertificateC","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"text":"commonNameOverride","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot10TLSOptionsC","kind":"typeIdentifier","text":"TLSOptions"},{"text":"?","kind":"text"}],"type":"topic","abstract":[{"text":"Creates a TLS client configuration which validates certificates and their common names (fully qualified domain names).","type":"text"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/TLSOptions\/client(trustedChain:commonNameOverride:)","url":"\/documentation\/swiftgodot\/tlsoptions\/client(trustedchain:commonnameoverride:)","kind":"symbol","title":"client(trustedChain:commonNameOverride:)","role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/JSON":{"abstract":[{"type":"text","text":"Helper class for creating and parsing JSON data."}],"kind":"symbol","navigatorTitle":[{"text":"JSON","kind":"identifier"}],"title":"JSON","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/JSON","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"JSON"}],"url":"\/documentation\/swiftgodot\/json","role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/WebSocketPeer/getCloseCode()":{"url":"\/documentation\/swiftgodot\/websocketpeer\/getclosecode()","abstract":[{"type":"text","text":"Returns the received WebSocket close frame status code, or "},{"type":"codeVoice","code":"-1"},{"text":" when the connection was not cleanly closed. Only call this method when ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebSocketPeer\/getReadyState()","isActive":true},{"text":" returns .closed.","type":"text"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebSocketPeer\/getCloseCode()","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"getCloseCode"},{"text":"() -> ","kind":"text"},{"text":"Int32","kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V"}],"title":"getCloseCode()","kind":"symbol","type":"topic"},"doc://SwiftGodot/documentation/SwiftGodot/PacketPeer/getAvailablePacketCount()":{"kind":"symbol","abstract":[{"text":"Returns the number of packets currently available in the ring-buffer.","type":"text"}],"title":"getAvailablePacketCount()","type":"topic","role":"symbol","url":"\/documentation\/swiftgodot\/packetpeer\/getavailablepacketcount()","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeer\/getAvailablePacketCount()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getAvailablePacketCount","kind":"identifier"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"}]},"doc://SwiftGodot/s23CustomStringConvertibleP":{"title":"Swift.CustomStringConvertible","type":"unresolvable","identifier":"doc:\/\/SwiftGodot\/s23CustomStringConvertibleP"},"doc://SwiftGodot/documentation/SwiftGodot/WebSocketPeer/sendText(message:)":{"url":"\/documentation\/swiftgodot\/websocketpeer\/sendtext(message:)","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Sends the given "},{"code":"message","type":"codeVoice"},{"text":" using WebSocket text mode. Prefer this method over ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeer\/putPacket(buffer:)","isActive":true,"type":"reference"},{"type":"text","text":" when interacting with third-party text-based API (e.g. when using "},{"isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/JSON","type":"reference"},{"type":"text","text":" formatted messages)."}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebSocketPeer\/sendText(message:)","title":"sendText(message:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"sendText","kind":"identifier"},{"kind":"text","text":"("},{"text":"message","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"GodotError","preciseIdentifier":"s:10SwiftGodot0B5ErrorO"}],"kind":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/WebSocketPeer/outboundBufferSize":{"abstract":[{"type":"text","text":"The size of the input buffer in bytes (roughly the maximum amount of memory that will be allocated for the outbound packets)."}],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"outboundBufferSize","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier","text":"Int32"}],"role":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebSocketPeer\/outboundBufferSize","title":"outboundBufferSize","url":"\/documentation\/swiftgodot\/websocketpeer\/outboundbuffersize","type":"topic","kind":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/WebSocketPeer":{"type":"topic","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"WebSocketPeer","kind":"identifier"}],"title":"WebSocketPeer","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebSocketPeer","abstract":[{"type":"text","text":"A WebSocket connection."}],"url":"\/documentation\/swiftgodot\/websocketpeer","navigatorTitle":[{"text":"WebSocketPeer","kind":"identifier"}],"role":"symbol","kind":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/WebSocketPeer/getSelectedProtocol()":{"title":"getSelectedProtocol()","abstract":[{"type":"text","text":"Returns the selected WebSocket sub-protocol for this connection or an empty string if the sub-protocol has not been selected yet."}],"url":"\/documentation\/swiftgodot\/websocketpeer\/getselectedprotocol()","kind":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"getSelectedProtocol"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebSocketPeer\/getSelectedProtocol()","role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/WebSocketPeer/connectToUrl(_:tlsClientOptions:)":{"url":"\/documentation\/swiftgodot\/websocketpeer\/connecttourl(_:tlsclientoptions:)","type":"topic","abstract":[{"text":"Connects to the given URL. TLS certificates will be verified against the hostname when connecting using the ","type":"text"},{"code":"wss:\/\/","type":"codeVoice"},{"text":" protocol. You can pass the optional ","type":"text"},{"code":"tlsClientOptions","type":"codeVoice"},{"text":" parameter to customize the trusted certification authorities, or disable the common name verification. See ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/TLSOptions\/client(trustedChain:commonNameOverride:)"},{"text":" and ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/TLSOptions\/clientUnsafe(trustedChain:)"},{"type":"text","text":"."}],"role":"symbol","title":"connectToUrl(_:tlsClientOptions:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"connectToUrl","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"tlsClientOptions","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot10TLSOptionsC","text":"TLSOptions"},{"text":"?) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot0B5ErrorO","text":"GodotError"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebSocketPeer\/connectToUrl(_:tlsClientOptions:)","kind":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/WebSocketPeer/inboundBufferSize":{"kind":"symbol","url":"\/documentation\/swiftgodot\/websocketpeer\/inboundbuffersize","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"inboundBufferSize","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V","text":"Int32"}],"abstract":[{"text":"The size of the input buffer in bytes (roughly the maximum amount of memory that will be allocated for the inbound packets).","type":"text"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebSocketPeer\/inboundBufferSize","role":"symbol","title":"inboundBufferSize","type":"topic"},"doc://SwiftGodot/SQ":{"title":"Swift.Equatable","type":"unresolvable","identifier":"doc:\/\/SwiftGodot\/SQ"},"doc://SwiftGodot/documentation/SwiftGodot/VariantStorable":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/VariantStorable","abstract":[{"text":"Types that conform to VariantStorable can be stored in a Variant and can be extracted","type":"text"},{"type":"text","text":" "},{"text":"back out of a Variant.","type":"text"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"VariantStorable"}],"type":"topic","url":"\/documentation\/swiftgodot\/variantstorable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"VariantStorable"}],"title":"VariantStorable","role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/StreamPeerTLS/acceptStream(_:serverOptions:)":{"kind":"symbol","title":"acceptStream(_:serverOptions:)","role":"symbol","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/StreamPeerTLS\/acceptStream(_:serverOptions:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"acceptStream"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot10StreamPeerC","text":"StreamPeer","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"text":"serverOptions","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot10TLSOptionsC","text":"TLSOptions"},{"text":"?) -> ","kind":"text"},{"text":"GodotError","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot0B5ErrorO"}],"url":"\/documentation\/swiftgodot\/streampeertls\/acceptstream(_:serveroptions:)","abstract":[{"text":"Accepts a peer connection as a server using the given ","type":"text"},{"code":"serverOptions","type":"codeVoice"},{"type":"text","text":". See "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/TLSOptions\/server(key:certificate:)"},{"text":".","type":"text"}]},"doc://SwiftGodot/documentation/SwiftGodot/Node":{"type":"topic","url":"\/documentation\/swiftgodot\/node","abstract":[{"text":"Base class for all scene objects.","type":"text"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"text":"Node","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Node"}],"title":"Node","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Node"},"doc://SwiftGodot/documentation/SwiftGodot/StreamPeerTCP/setNoDelay(enabled:)":{"type":"topic","url":"\/documentation\/swiftgodot\/streampeertcp\/setnodelay(enabled:)","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/StreamPeerTCP\/setNoDelay(enabled:)","title":"setNoDelay(enabled:)","abstract":[{"text":"If ","type":"text"},{"type":"codeVoice","code":"enabled"},{"type":"text","text":" is "},{"code":"true","type":"codeVoice"},{"text":", packets will be sent immediately. If ","type":"text"},{"type":"codeVoice","code":"enabled"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"false"},{"type":"text","text":" (the default), packet transfers will be delayed and combined using "},{"text":"Nagle’s algorithm","type":"text"},{"text":".","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"setNoDelay","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"enabled"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":")","kind":"text"}]},"doc://SwiftGodot/documentation/SwiftGodot/PacketPeer":{"navigatorTitle":[{"text":"PacketPeer","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"Abstraction and base class for packet-based protocols."}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeer","title":"PacketPeer","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PacketPeer","kind":"identifier"}],"url":"\/documentation\/swiftgodot\/packetpeer","type":"topic","role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/WebSocketPeer/setNoDelay(enabled:)":{"abstract":[{"text":"Disable Nagle’s algorithm on the underling TCP socket (default). See ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/StreamPeerTCP\/setNoDelay(enabled:)"},{"type":"text","text":" for more information."}],"kind":"symbol","url":"\/documentation\/swiftgodot\/websocketpeer\/setnodelay(enabled:)","role":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebSocketPeer\/setNoDelay(enabled:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"setNoDelay","kind":"identifier"},{"kind":"text","text":"("},{"text":"enabled","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":")"}],"type":"topic","title":"setNoDelay(enabled:)"},"doc://SwiftGodot/documentation/SwiftGodot/WebSocketPeer/handshakeHeaders":{"type":"topic","role":"symbol","title":"handshakeHeaders","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"handshakeHeaders"},{"kind":"text","text":": "},{"text":"PackedStringArray","preciseIdentifier":"s:10SwiftGodot17PackedStringArrayC","kind":"typeIdentifier"}],"abstract":[{"text":"The extra HTTP headers to be sent during the WebSocket handshake.","type":"text"}],"kind":"symbol","url":"\/documentation\/swiftgodot\/websocketpeer\/handshakeheaders","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebSocketPeer\/handshakeHeaders"},"doc://SwiftGodot/documentation/SwiftGodot/WebSocketPeer/WriteMode":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebSocketPeer\/WriteMode","kind":"symbol","type":"topic","role":"symbol","title":"WebSocketPeer.WriteMode","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"WriteMode","kind":"identifier"}],"navigatorTitle":[{"text":"WriteMode","kind":"identifier"}],"abstract":[],"url":"\/documentation\/swiftgodot\/websocketpeer\/writemode"},"doc://SwiftGodot/documentation/SwiftGodot/VariantRepresentable":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/VariantRepresentable","abstract":[{"type":"text","text":"Types that conform to VariantRepresentable can be stored directly in "},{"type":"codeVoice","code":"Variant"},{"type":"text","text":" "},{"type":"text","text":"with no conversion.  These include all of the Variant types from Godot (for"},{"text":" ","type":"text"},{"text":"example ","type":"text"},{"code":"GString","type":"codeVoice"},{"type":"text","text":", "},{"code":"Rect","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Plane","type":"codeVoice"},{"type":"text","text":"), Godot objects (those that subclass"},{"type":"text","text":" "},{"type":"text","text":"SwiftGodot.Object) as well as the built-in Swift types UInt8, Int64 and Double."}],"kind":"symbol","navigatorTitle":[{"text":"VariantRepresentable","kind":"identifier"}],"type":"topic","url":"\/documentation\/swiftgodot\/variantrepresentable","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"VariantRepresentable","kind":"identifier"}],"title":"VariantRepresentable","role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/TCPServer/takeConnection()":{"url":"\/documentation\/swiftgodot\/tcpserver\/takeconnection()","abstract":[{"text":"If a connection is available, returns a StreamPeerTCP with the connection.","type":"text"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/TCPServer\/takeConnection()","title":"takeConnection()","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"takeConnection"},{"text":"() -> ","kind":"text"},{"text":"StreamPeerTCP","preciseIdentifier":"s:10SwiftGodot13StreamPeerTCPC","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/PacketPeer/putPacket(buffer:)":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeer\/putPacket(buffer:)","title":"putPacket(buffer:)","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"putPacket","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"buffer"},{"kind":"text","text":": "},{"text":"PackedByteArray","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot15PackedByteArrayC"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"GodotError","preciseIdentifier":"s:10SwiftGodot0B5ErrorO"}],"url":"\/documentation\/swiftgodot\/packetpeer\/putpacket(buffer:)","kind":"symbol","abstract":[{"type":"text","text":"Sends a raw packet."}]},"doc://SwiftGodot/documentation/SwiftGodot/TLSOptions/clientUnsafe(trustedChain:)":{"kind":"symbol","title":"clientUnsafe(trustedChain:)","role":"symbol","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/TLSOptions\/clientUnsafe(trustedChain:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"clientUnsafe","kind":"identifier"},{"text":"(","kind":"text"},{"text":"trustedChain","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot15X509CertificateC","text":"X509Certificate"},{"text":"?) -> ","kind":"text"},{"text":"TLSOptions","preciseIdentifier":"s:10SwiftGodot10TLSOptionsC","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"url":"\/documentation\/swiftgodot\/tlsoptions\/clientunsafe(trustedchain:)","abstract":[{"type":"text","text":"Creates an "},{"type":"strong","inlineContent":[{"type":"text","text":"unsafe"}]},{"text":" TLS client configuration where certificate validation is optional. You can optionally provide a valid ","type":"text"},{"type":"codeVoice","code":"trustedChain"},{"text":", but the common name of the certificates will never be checked. Using this configuration for purposes other than testing ","type":"text"},{"type":"strong","inlineContent":[{"text":"is not recommended","type":"text"}]},{"type":"text","text":"."}]},"doc://SwiftGodot/documentation/SwiftGodot/WebSocketPeer/State":{"type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"State","kind":"identifier"}],"title":"WebSocketPeer.State","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebSocketPeer\/State","abstract":[],"url":"\/documentation\/swiftgodot\/websocketpeer\/state","navigatorTitle":[{"text":"State","kind":"identifier"}],"role":"symbol","kind":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot":{"kind":"symbol","url":"\/documentation\/swiftgodot","abstract":[{"type":"text","text":"Framework to write Godot Game Extensions using the Swift Programming Language."}],"role":"collection","title":"SwiftGodot","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot"},"doc://SwiftGodot/documentation/SwiftGodot/WebSocketPeer/getConnectedHost()":{"url":"\/documentation\/swiftgodot\/websocketpeer\/getconnectedhost()","abstract":[{"type":"text","text":"Returns the IP address of the connected peer."}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebSocketPeer\/getConnectedHost()","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"getConnectedHost","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"kind":"symbol","title":"getConnectedHost()"},"doc://SwiftGodot/documentation/SwiftGodot/WebSocketPeer/getReadyState()":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"getReadyState","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot13WebSocketPeerC","text":"WebSocketPeer"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"State","preciseIdentifier":"s:10SwiftGodot13WebSocketPeerC5StateO"}],"abstract":[{"type":"text","text":"Returns the ready state of the connection. See "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebSocketPeer\/State","isActive":true},{"text":".","type":"text"}],"title":"getReadyState()","kind":"symbol","url":"\/documentation\/swiftgodot\/websocketpeer\/getreadystate()","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebSocketPeer\/getReadyState()","role":"symbol","type":"topic"},"doc://SwiftGodot/documentation/SwiftGodot/WebSocketPeer/acceptStream(_:)":{"url":"\/documentation\/swiftgodot\/websocketpeer\/acceptstream(_:)","type":"topic","abstract":[{"type":"text","text":"Accepts a peer connection performing the HTTP handshake as a WebSocket server. The "},{"code":"stream","type":"codeVoice"},{"text":" must be a valid TCP stream retrieved via ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/TCPServer\/takeConnection()","isActive":true},{"type":"text","text":", or a TLS stream accepted via "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/StreamPeerTLS\/acceptStream(_:serverOptions:)"},{"type":"text","text":"."}],"role":"symbol","title":"acceptStream(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"acceptStream","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:10SwiftGodot10StreamPeerC","text":"StreamPeer","kind":"typeIdentifier"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot0B5ErrorO","text":"GodotError"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebSocketPeer\/acceptStream(_:)","kind":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/WebSocketPeer/godotClassName":{"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"godotClassName","kind":"identifier"},{"text":": ","kind":"text"},{"text":"StringName","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot10StringNameC"}],"abstract":[],"title":"godotClassName","type":"topic","url":"\/documentation\/swiftgodot\/websocketpeer\/godotclassname","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebSocketPeer\/godotClassName","kind":"symbol","role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/WebSocketPeer/getCurrentOutboundBufferedAmount()":{"role":"symbol","abstract":[{"text":"Returns the current amount of data in the outbound websocket buffer. > Note: Web exports use WebSocket.bufferedAmount, while other platforms use an internal buffer.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"getCurrentOutboundBufferedAmount"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"}],"kind":"symbol","url":"\/documentation\/swiftgodot\/websocketpeer\/getcurrentoutboundbufferedamount()","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebSocketPeer\/getCurrentOutboundBufferedAmount()","type":"topic","title":"getCurrentOutboundBufferedAmount()"},"doc://SwiftGodot/documentation/SwiftGodot/WebSocketPeer/wasStringPacket()":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"wasStringPacket","kind":"identifier"},{"kind":"text","text":"() -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"kind":"symbol","type":"topic","url":"\/documentation\/swiftgodot\/websocketpeer\/wasstringpacket()","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebSocketPeer\/wasStringPacket()","role":"symbol","title":"wasStringPacket()","abstract":[{"text":"Returns ","type":"text"},{"code":"true","type":"codeVoice"},{"text":" if the last received packet was sent as a text payload. See ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebSocketPeer\/WriteMode","isActive":true},{"type":"text","text":"."}]},"doc://SwiftGodot/documentation/SwiftGodot/WebSocketPeer/send(message:writeMode:)":{"abstract":[{"text":"Sends the given ","type":"text"},{"code":"message","type":"codeVoice"},{"type":"text","text":" using the desired "},{"type":"codeVoice","code":"writeMode"},{"text":". When sending a ","type":"text"},{"type":"codeVoice","code":"String"},{"type":"text","text":", prefer using "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebSocketPeer\/sendText(message:)","isActive":true,"type":"reference"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebSocketPeer\/send(message:writeMode:)","kind":"symbol","type":"topic","title":"send(message:writeMode:)","url":"\/documentation\/swiftgodot\/websocketpeer\/send(message:writemode:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"send"},{"kind":"text","text":"("},{"text":"message","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"PackedByteArray","preciseIdentifier":"s:10SwiftGodot15PackedByteArrayC","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"writeMode","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"WebSocketPeer","preciseIdentifier":"s:10SwiftGodot13WebSocketPeerC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot13WebSocketPeerC9WriteModeO","text":"WriteMode"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot0B5ErrorO","text":"GodotError","kind":"typeIdentifier"}],"role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/WebSocketPeer/close(code:reason:)":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebSocketPeer\/close(code:reason:)","kind":"symbol","title":"close(code:reason:)","abstract":[{"type":"text","text":"Closes this WebSocket connection. "},{"type":"codeVoice","code":"code"},{"type":"text","text":" is the status code for the closure (see RFC 6455 section 7.4 for a list of valid status codes). "},{"code":"reason","type":"codeVoice"},{"text":" is the human readable reason for closing the connection (can be any UTF-8 string that’s smaller than 123 bytes). If ","type":"text"},{"code":"code","type":"codeVoice"},{"text":" is negative, the connection will be closed immediately without notifying the remote peer.","type":"text"}],"type":"topic","role":"symbol","url":"\/documentation\/swiftgodot\/websocketpeer\/close(code:reason:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"close","kind":"identifier"},{"text":"(","kind":"text"},{"text":"code","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"reason"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":")"}]},"doc://SwiftGodot/SH":{"title":"Swift.Hashable","type":"unresolvable","identifier":"doc:\/\/SwiftGodot\/SH"},"doc://SwiftGodot/documentation/SwiftGodot/WebSocketPeer/poll()":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebSocketPeer\/poll()","url":"\/documentation\/swiftgodot\/websocketpeer\/poll()","abstract":[{"text":"Updates the connection state and receive incoming packets. Call this function regularly to keep it in a clean state.","type":"text"}],"role":"symbol","title":"poll()","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"poll","kind":"identifier"},{"text":"()","kind":"text"}],"kind":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/WebSocketPeer/maxQueuedPackets":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebSocketPeer\/maxQueuedPackets","role":"symbol","abstract":[{"type":"text","text":"The maximum amount of packets that will be allowed in the queues (both inbound and outbound)."}],"kind":"symbol","title":"maxQueuedPackets","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"maxQueuedPackets","kind":"identifier"},{"kind":"text","text":": "},{"text":"Int32","preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier"}],"url":"\/documentation\/swiftgodot\/websocketpeer\/maxqueuedpackets"},"doc://SwiftGodot/documentation/SwiftGodot/WebSocketPeer/supportedProtocols":{"role":"symbol","type":"topic","title":"supportedProtocols","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"supportedProtocols","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot17PackedStringArrayC","kind":"typeIdentifier","text":"PackedStringArray"}],"abstract":[{"type":"text","text":"The WebSocket sub-protocols allowed during the WebSocket handshake."}],"kind":"symbol","url":"\/documentation\/swiftgodot\/websocketpeer\/supportedprotocols","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebSocketPeer\/supportedProtocols"},"doc://SwiftGodot/documentation/SwiftGodot/WebSocketPeer/getRequestedUrl()":{"url":"\/documentation\/swiftgodot\/websocketpeer\/getrequestedurl()","abstract":[{"type":"text","text":"Returns the URL requested by this peer. The URL is derived from the "},{"type":"codeVoice","code":"url"},{"type":"text","text":" passed to "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebSocketPeer\/connectToUrl(_:tlsClientOptions:)"},{"text":" or from the HTTP headers when acting as server (i.e. when using ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebSocketPeer\/acceptStream(_:)","isActive":true},{"type":"text","text":")."}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebSocketPeer\/getRequestedUrl()","title":"getRequestedUrl()","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"getRequestedUrl"},{"text":"() -> ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/WebSocketPeer/getConnectedPort()":{"url":"\/documentation\/swiftgodot\/websocketpeer\/getconnectedport()","abstract":[{"text":"Returns the remote port of the connected peer.","type":"text"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebSocketPeer\/getConnectedPort()","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"getConnectedPort","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:s6UInt16V","kind":"typeIdentifier","text":"UInt16"}],"title":"getConnectedPort()","kind":"symbol","type":"topic"},"doc://SwiftGodot/s12IdentifiableP":{"title":"Swift.Identifiable","identifier":"doc:\/\/SwiftGodot\/s12IdentifiableP","type":"unresolvable"},"doc://SwiftGodot/documentation/SwiftGodot/WebSocketPeer/getCloseReason()":{"kind":"symbol","url":"\/documentation\/swiftgodot\/websocketpeer\/getclosereason()","title":"getCloseReason()","type":"topic","role":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebSocketPeer\/getCloseReason()","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"getCloseReason","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"}],"abstract":[{"text":"Returns the received WebSocket close frame status reason string. Only call this method when ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebSocketPeer\/getReadyState()","isActive":true},{"type":"text","text":" returns .closed."}]}}}
{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftgodot\/enetmultiplayerpeer"]}],"relationshipsSections":[{"type":"inheritsFrom","identifiers":["doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/MultiplayerPeer"],"kind":"relationships","title":"Inherits From"},{"type":"conformsTo","identifiers":["doc:\/\/SwiftGodot\/s23CustomStringConvertibleP","doc:\/\/SwiftGodot\/SQ","doc:\/\/SwiftGodot\/SH","doc:\/\/SwiftGodot\/s12IdentifiableP","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/VariantRepresentable","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/VariantStorable"],"kind":"relationships","title":"Conforms To"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"topicSections":[{"generated":true,"title":"Instance Properties","identifiers":["doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/ENetMultiplayerPeer\/host"],"anchor":"Instance-Properties"},{"identifiers":["doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/ENetMultiplayerPeer\/addMeshPeer(peerId:host:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/ENetMultiplayerPeer\/createClient(address:port:channelCount:inBandwidth:outBandwidth:localPort:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/ENetMultiplayerPeer\/createMesh(uniqueId:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/ENetMultiplayerPeer\/createServer(port:maxClients:maxChannels:inBandwidth:outBandwidth:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/ENetMultiplayerPeer\/getPeer(id:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/ENetMultiplayerPeer\/setBindIp(_:)"],"title":"Instance Methods","generated":true,"anchor":"Instance-Methods"},{"identifiers":["doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/ENetMultiplayerPeer\/godotClassName"],"anchor":"Type-Properties","generated":true,"title":"Type Properties"}],"abstract":[{"text":"A MultiplayerPeer implementation using the ","type":"text"},{"text":"ENet","type":"text"},{"type":"text","text":" library."}],"hierarchy":{"paths":[["doc:\/\/SwiftGodot\/documentation\/SwiftGodot"]]},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/ENetMultiplayerPeer"},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"ENetMultiplayerPeer","kind":"identifier"}]}],"kind":"declarations"},{"content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"inlineContent":[{"type":"text","text":"A MultiplayerPeer implementation that should be passed to "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/MultiplayerAPI\/multiplayerPeer","type":"reference","isActive":true},{"text":" after being initialized as either a client, server, or mesh. Events can then be handled by connecting to ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/MultiplayerAPI","isActive":true},{"text":" signals. See ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/ENetConnection","isActive":true,"type":"reference"},{"type":"text","text":" for more information on the ENet library wrapper."}],"type":"paragraph"},{"style":"note","name":"Note","content":[{"inlineContent":[{"type":"text","text":"ENet only uses UDP, not TCP. When forwarding the server port to make your server accessible on the public Internet, you only need to forward the server port in UDP. You can use the "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/UPNP","type":"reference","isActive":true},{"type":"text","text":" class to try to forward the server port automatically when starting the server."}],"type":"paragraph"}],"type":"aside"}],"kind":"content"}],"sections":[],"metadata":{"roleHeading":"Class","navigatorTitle":[{"text":"ENetMultiplayerPeer","kind":"identifier"}],"modules":[{"name":"SwiftGodot"}],"symbolKind":"class","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ENetMultiplayerPeer"}],"role":"symbol","externalID":"s:10SwiftGodot19ENetMultiplayerPeerC","title":"ENetMultiplayerPeer"},"references":{"doc://SwiftGodot/documentation/SwiftGodot/UPNP":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/UPNP","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Universal Plug and Play (UPnP) functions for network device discovery, querying and port forwarding."}],"title":"UPNP","type":"topic","navigatorTitle":[{"text":"UPNP","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UPNP"}],"url":"\/documentation\/swiftgodot\/upnp"},"doc://SwiftGodot/documentation/SwiftGodot/MultiplayerAPI":{"type":"topic","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/MultiplayerAPI","url":"\/documentation\/swiftgodot\/multiplayerapi","title":"MultiplayerAPI","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"MultiplayerAPI","kind":"identifier"}],"abstract":[{"text":"High-level multiplayer API interface.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"MultiplayerAPI"}]},"doc://SwiftGodot/SH":{"type":"unresolvable","identifier":"doc:\/\/SwiftGodot\/SH","title":"Swift.Hashable"},"doc://SwiftGodot/documentation/SwiftGodot/ENetMultiplayerPeer/godotClassName":{"abstract":[],"type":"topic","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"godotClassName"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot10StringNameC","text":"StringName","kind":"typeIdentifier"}],"kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/ENetMultiplayerPeer\/godotClassName","role":"symbol","title":"godotClassName","url":"\/documentation\/swiftgodot\/enetmultiplayerpeer\/godotclassname"},"doc://SwiftGodot/documentation/SwiftGodot/MultiplayerAPI/multiplayerPeer":{"type":"topic","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/MultiplayerAPI\/multiplayerPeer","url":"\/documentation\/swiftgodot\/multiplayerapi\/multiplayerpeer","title":"multiplayerPeer","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"multiplayerPeer","kind":"identifier"},{"kind":"text","text":": "},{"text":"MultiplayerPeer","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot15MultiplayerPeerC"},{"text":"?","kind":"text"}],"abstract":[{"type":"text","text":"The peer object to handle the RPC system (effectively enabling networking when set). Depending on the peer itself, the MultiplayerAPI will become a network server (check with "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/MultiplayerAPI\/isServer()","isActive":true},{"type":"text","text":") and will set root node’s network mode to authority, or it will become a regular client peer. All child nodes are set to inherit the network mode by default. Handling of networking-related events (connection, disconnection, new clients) is done by connecting to MultiplayerAPI’s signals."}]},"doc://SwiftGodot/documentation/SwiftGodot/MultiplayerAPI/isServer()":{"abstract":[{"type":"text","text":"Returns "},{"type":"codeVoice","code":"true"},{"type":"text","text":" if this MultiplayerAPI’s "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/MultiplayerAPI\/multiplayerPeer","isActive":true},{"type":"text","text":" is valid and in server mode (listening for connections)."}],"kind":"symbol","type":"topic","url":"\/documentation\/swiftgodot\/multiplayerapi\/isserver()","role":"symbol","title":"isServer()","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isServer"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/MultiplayerAPI\/isServer()"},"doc://SwiftGodot/s12IdentifiableP":{"title":"Swift.Identifiable","type":"unresolvable","identifier":"doc:\/\/SwiftGodot\/s12IdentifiableP"},"doc://SwiftGodot/documentation/SwiftGodot/ENetConnection":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/ENetConnection","abstract":[{"text":"A wrapper class for an ","type":"text"},{"type":"text","text":"ENetHost"},{"type":"text","text":"."}],"kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ENetConnection"}],"title":"ENetConnection","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ENetConnection"}],"url":"\/documentation\/swiftgodot\/enetconnection","role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/ENetMultiplayerPeer/addMeshPeer(peerId:host:)":{"title":"addMeshPeer(peerId:host:)","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/ENetMultiplayerPeer\/addMeshPeer(peerId:host:)","url":"\/documentation\/swiftgodot\/enetmultiplayerpeer\/addmeshpeer(peerid:host:)","kind":"symbol","role":"symbol","abstract":[{"text":"Add a new remote peer with the given ","type":"text"},{"type":"codeVoice","code":"peerId"},{"type":"text","text":" connected to the given "},{"type":"codeVoice","code":"host"},{"text":".","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"addMeshPeer","kind":"identifier"},{"text":"(","kind":"text"},{"text":"peerId","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Int32","kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V"},{"text":", ","kind":"text"},{"text":"host","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot14ENetConnectionC","text":"ENetConnection"},{"text":"?) -> ","kind":"text"},{"text":"GodotError","preciseIdentifier":"s:10SwiftGodot0B5ErrorO","kind":"typeIdentifier"}]},"doc://SwiftGodot/documentation/SwiftGodot/VariantRepresentable":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/VariantRepresentable","abstract":[{"type":"text","text":"Types that conform to VariantRepresentable can be stored directly in "},{"type":"codeVoice","code":"Variant"},{"type":"text","text":" "},{"type":"text","text":"with no conversion.  These include all of the Variant types from Godot (for"},{"text":" ","type":"text"},{"text":"example ","type":"text"},{"code":"GString","type":"codeVoice"},{"type":"text","text":", "},{"code":"Rect","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Plane","type":"codeVoice"},{"type":"text","text":"), Godot objects (those that subclass"},{"type":"text","text":" "},{"type":"text","text":"SwiftGodot.Object) as well as the built-in Swift types UInt8, Int64 and Double."}],"kind":"symbol","navigatorTitle":[{"text":"VariantRepresentable","kind":"identifier"}],"type":"topic","url":"\/documentation\/swiftgodot\/variantrepresentable","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"VariantRepresentable","kind":"identifier"}],"title":"VariantRepresentable","role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/GodotError/ok":{"role":"symbol","type":"topic","url":"\/documentation\/swiftgodot\/godoterror\/ok","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GodotError\/ok","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ok"}],"kind":"symbol","title":"GodotError.ok","abstract":[{"type":"text","text":"Methods that return "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GodotError","type":"reference","isActive":true},{"text":" return ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GodotError\/ok"},{"type":"text","text":" when no error occurred."}]},"doc://SwiftGodot/documentation/SwiftGodot/MultiplayerPeer":{"url":"\/documentation\/swiftgodot\/multiplayerpeer","navigatorTitle":[{"kind":"identifier","text":"MultiplayerPeer"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MultiplayerPeer"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/MultiplayerPeer","type":"topic","kind":"symbol","title":"MultiplayerPeer","role":"symbol","abstract":[{"type":"text","text":"Abstract class for specialized "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeer","isActive":true,"type":"reference"},{"text":"s used by the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/MultiplayerAPI"},{"type":"text","text":"."}]},"doc://SwiftGodot/documentation/SwiftGodot/MultiplayerPeer/close()":{"url":"\/documentation\/swiftgodot\/multiplayerpeer\/close()","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/MultiplayerPeer\/close()","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Immediately close the multiplayer peer returning to the state .connectionDisconnected. Connected peers will be dropped without emitting [signal peer_disconnected]."}],"type":"topic","title":"close()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"close"},{"text":"()","kind":"text"}]},"doc://SwiftGodot/documentation/SwiftGodot/ENetMultiplayerPeer/host":{"abstract":[{"type":"text","text":"The underlying "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/ENetConnection","isActive":true,"type":"reference"},{"type":"text","text":" created after "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/ENetMultiplayerPeer\/createClient(address:port:channelCount:inBandwidth:outBandwidth:localPort:)","isActive":true},{"type":"text","text":" and "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/ENetMultiplayerPeer\/createServer(port:maxClients:maxChannels:inBandwidth:outBandwidth:)","isActive":true,"type":"reference"},{"type":"text","text":"."}],"type":"topic","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"host","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ENetConnection","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot14ENetConnectionC"},{"kind":"text","text":"?"}],"kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/ENetMultiplayerPeer\/host","role":"symbol","title":"host","url":"\/documentation\/swiftgodot\/enetmultiplayerpeer\/host"},"doc://SwiftGodot/documentation/SwiftGodot/ENetMultiplayerPeer":{"abstract":[{"type":"text","text":"A MultiplayerPeer implementation using the "},{"type":"text","text":"ENet"},{"type":"text","text":" library."}],"type":"topic","role":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/ENetMultiplayerPeer","url":"\/documentation\/swiftgodot\/enetmultiplayerpeer","kind":"symbol","navigatorTitle":[{"text":"ENetMultiplayerPeer","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"ENetMultiplayerPeer","kind":"identifier"}],"title":"ENetMultiplayerPeer"},"doc://SwiftGodot/documentation/SwiftGodot/ENetMultiplayerPeer/createClient(address:port:channelCount:inBandwidth:outBandwidth:localPort:)":{"type":"topic","url":"\/documentation\/swiftgodot\/enetmultiplayerpeer\/createclient(address:port:channelcount:inbandwidth:outbandwidth:localport:)","abstract":[{"text":"Create client that connects to a server at ","type":"text"},{"code":"address","type":"codeVoice"},{"type":"text","text":" using specified "},{"type":"codeVoice","code":"port"},{"text":". The given address needs to be either a fully qualified domain name (e.g. ","type":"text"},{"type":"codeVoice","code":"\"www.example.com\""},{"type":"text","text":") or an IP address in IPv4 or IPv6 format (e.g. "},{"code":"\"192.168.1.1\"","type":"codeVoice"},{"type":"text","text":"). The "},{"type":"codeVoice","code":"port"},{"type":"text","text":" is the port the server is listening on. The "},{"type":"codeVoice","code":"channelCount"},{"type":"text","text":" parameter can be used to specify the number of ENet channels allocated for the connection. The "},{"type":"codeVoice","code":"inBandwidth"},{"type":"text","text":" and "},{"type":"codeVoice","code":"outBandwidth"},{"text":" parameters can be used to limit the incoming and outgoing bandwidth to the given number of bytes per second. The default of 0 means unlimited bandwidth. Note that ENet will strategically drop packets on specific sides of a connection between peers to ensure the peer’s bandwidth is not overwhelmed. The bandwidth parameters also determine the window size of a connection which limits the amount of reliable packets that may be in transit at any given time. Returns ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GodotError\/ok","isActive":true},{"text":" if a client was created, ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GodotError\/errAlreadyInUse","type":"reference","isActive":true},{"text":" if this ENetMultiplayerPeer instance already has an open connection (in which case you need to call ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/MultiplayerPeer\/close()","type":"reference"},{"type":"text","text":" first) or "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GodotError\/errCantCreate","type":"reference","isActive":true},{"text":" if the client could not be created. If ","type":"text"},{"type":"codeVoice","code":"localPort"},{"text":" is specified, the client will also listen to the given port; this is useful for some NAT traversal techniques.","type":"text"}],"kind":"symbol","role":"symbol","title":"createClient(address:port:channelCount:inBandwidth:outBandwidth:localPort:)","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/ENetMultiplayerPeer\/createClient(address:port:channelCount:inBandwidth:outBandwidth:localPort:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"createClient","kind":"identifier"},{"kind":"text","text":"("},{"text":"address","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"port"},{"kind":"text","text":": "},{"text":"Int32","preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"channelCount"},{"kind":"text","text":": "},{"text":"Int32","kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V"},{"text":", ","kind":"text"},{"text":"inBandwidth","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"},{"text":", ","kind":"text"},{"text":"outBandwidth","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"},{"text":", ","kind":"text"},{"text":"localPort","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s5Int32V","text":"Int32","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot0B5ErrorO","text":"GodotError"}]},"doc://SwiftGodot/s23CustomStringConvertibleP":{"title":"Swift.CustomStringConvertible","type":"unresolvable","identifier":"doc:\/\/SwiftGodot\/s23CustomStringConvertibleP"},"doc://SwiftGodot/documentation/SwiftGodot/GodotError/errAlreadyInUse":{"abstract":[{"text":"Already in use error.","type":"text"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GodotError\/errAlreadyInUse","role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"errAlreadyInUse"}],"title":"GodotError.errAlreadyInUse","type":"topic","kind":"symbol","url":"\/documentation\/swiftgodot\/godoterror\/erralreadyinuse"},"doc://SwiftGodot/documentation/SwiftGodot/ENetMultiplayerPeer/createServer(port:maxClients:maxChannels:inBandwidth:outBandwidth:)":{"type":"topic","url":"\/documentation\/swiftgodot\/enetmultiplayerpeer\/createserver(port:maxclients:maxchannels:inbandwidth:outbandwidth:)","abstract":[{"type":"text","text":"Create server that listens to connections via "},{"code":"port","type":"codeVoice"},{"text":". The port needs to be an available, unused port between 0 and 65535. Note that ports below 1024 are privileged and may require elevated permissions depending on the platform. To change the interface the server listens on, use ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/ENetMultiplayerPeer\/setBindIp(_:)"},{"text":". The default IP is the wildcard ","type":"text"},{"type":"codeVoice","code":"\"*\""},{"type":"text","text":", which listens on all available interfaces. "},{"code":"maxClients","type":"codeVoice"},{"type":"text","text":" is the maximum number of clients that are allowed at once, any number up to 4095 may be used, although the achievable number of simultaneous clients may be far lower and depends on the application. For additional details on the bandwidth parameters, see "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/ENetMultiplayerPeer\/createClient(address:port:channelCount:inBandwidth:outBandwidth:localPort:)","isActive":true},{"text":". Returns ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GodotError\/ok","isActive":true},{"text":" if a server was created, ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GodotError\/errAlreadyInUse"},{"type":"text","text":" if this ENetMultiplayerPeer instance already has an open connection (in which case you need to call "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/MultiplayerPeer\/close()","isActive":true},{"type":"text","text":" first) or "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GodotError\/errCantCreate","isActive":true,"type":"reference"},{"type":"text","text":" if the server could not be created."}],"kind":"symbol","role":"symbol","title":"createServer(port:maxClients:maxChannels:inBandwidth:outBandwidth:)","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/ENetMultiplayerPeer\/createServer(port:maxClients:maxChannels:inBandwidth:outBandwidth:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"createServer"},{"kind":"text","text":"("},{"text":"port","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Int32","kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V"},{"text":", ","kind":"text"},{"text":"maxClients","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int32","preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"maxChannels","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int32","kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"inBandwidth"},{"text":": ","kind":"text"},{"text":"Int32","kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V"},{"kind":"text","text":", "},{"text":"outBandwidth","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s5Int32V","text":"Int32","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"GodotError","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot0B5ErrorO"}]},"doc://SwiftGodot/documentation/SwiftGodot/PacketPeer":{"navigatorTitle":[{"text":"PacketPeer","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"Abstraction and base class for packet-based protocols."}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeer","title":"PacketPeer","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PacketPeer","kind":"identifier"}],"url":"\/documentation\/swiftgodot\/packetpeer","type":"topic","role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/ENetMultiplayerPeer/getPeer(id:)":{"abstract":[{"text":"Returns the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/ENetPacketPeer","type":"reference"},{"type":"text","text":" associated to the given "},{"code":"id","type":"codeVoice"},{"type":"text","text":"."}],"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"getPeer"},{"text":"(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot14ENetPacketPeerC","text":"ENetPacketPeer","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/ENetMultiplayerPeer\/getPeer(id:)","role":"symbol","title":"getPeer(id:)","url":"\/documentation\/swiftgodot\/enetmultiplayerpeer\/getpeer(id:)"},"doc://SwiftGodot/documentation/SwiftGodot/ENetMultiplayerPeer/setBindIp(_:)":{"type":"topic","url":"\/documentation\/swiftgodot\/enetmultiplayerpeer\/setbindip(_:)","abstract":[{"type":"text","text":"The IP used when creating a server. This is set to the wildcard "},{"code":"\"*\"","type":"codeVoice"},{"type":"text","text":" by default, which binds to all available interfaces. The given IP needs to be in IPv4 or IPv6 address format, for example: "},{"code":"\"192.168.1.1\"","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol","role":"symbol","title":"setBindIp(_:)","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/ENetMultiplayerPeer\/setBindIp(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"setBindIp","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":")","kind":"text"}]},"doc://SwiftGodot/documentation/SwiftGodot/VariantStorable":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/VariantStorable","abstract":[{"text":"Types that conform to VariantStorable can be stored in a Variant and can be extracted","type":"text"},{"type":"text","text":" "},{"text":"back out of a Variant.","type":"text"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"VariantStorable"}],"type":"topic","url":"\/documentation\/swiftgodot\/variantstorable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"VariantStorable"}],"title":"VariantStorable","role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/ENetPacketPeer":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ENetPacketPeer","kind":"identifier"}],"type":"topic","title":"ENetPacketPeer","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/ENetPacketPeer","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ENetPacketPeer"}],"role":"symbol","abstract":[{"text":"A wrapper class for an ","type":"text"},{"type":"text","text":"ENetPeer"},{"text":".","type":"text"}],"url":"\/documentation\/swiftgodot\/enetpacketpeer"},"doc://SwiftGodot/documentation/SwiftGodot":{"kind":"symbol","url":"\/documentation\/swiftgodot","abstract":[{"type":"text","text":"Framework to write Godot Game Extensions using the Swift Programming Language."}],"role":"collection","title":"SwiftGodot","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot"},"doc://SwiftGodot/documentation/SwiftGodot/GodotError/errCantCreate":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GodotError\/errCantCreate","title":"GodotError.errCantCreate","kind":"symbol","url":"\/documentation\/swiftgodot\/godoterror\/errcantcreate","role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"text":"errCantCreate","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"Can’t create error."}]},"doc://SwiftGodot/documentation/SwiftGodot/ENetMultiplayerPeer/createMesh(uniqueId:)":{"abstract":[{"type":"text","text":"Initialize this "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/MultiplayerPeer","isActive":true,"type":"reference"},{"text":" in mesh mode. The provided ","type":"text"},{"type":"codeVoice","code":"uniqueId"},{"type":"text","text":" will be used as the local peer network unique ID once assigned as the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/MultiplayerAPI\/multiplayerPeer"},{"type":"text","text":". In the mesh configuration you will need to set up each new peer manually using "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/ENetConnection","isActive":true,"type":"reference"},{"text":" before calling ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/ENetMultiplayerPeer\/addMeshPeer(peerId:host:)","type":"reference"},{"type":"text","text":". While this technique is more advanced, it allows for better control over the connection process (e.g. when dealing with NAT punch-through) and for better distribution of the network load (which would otherwise be more taxing on the server)."}],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"createMesh","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"uniqueId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V","text":"Int32"},{"text":") -> ","kind":"text"},{"text":"GodotError","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot0B5ErrorO"}],"kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/ENetMultiplayerPeer\/createMesh(uniqueId:)","role":"symbol","title":"createMesh(uniqueId:)","url":"\/documentation\/swiftgodot\/enetmultiplayerpeer\/createmesh(uniqueid:)"},"doc://SwiftGodot/SQ":{"title":"Swift.Equatable","type":"unresolvable","identifier":"doc:\/\/SwiftGodot\/SQ"}}}
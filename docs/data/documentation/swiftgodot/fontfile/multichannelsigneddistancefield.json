{"kind":"symbol","sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftgodot\/fontfile\/multichannelsigneddistancefield"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"title":"multichannelSignedDistanceField","modules":[{"name":"SwiftGodot"}],"externalID":"s:10SwiftGodot8FontFileC31multichannelSignedDistanceFieldSbvp","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"multichannelSignedDistanceField"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"symbolKind":"property","roleHeading":"Instance Property","role":"symbol"},"abstract":[{"type":"text","text":"If set to "},{"type":"codeVoice","code":"true"},{"text":", glyphs of all sizes are rendered using single multichannel signed distance field (MSDF) generated from the dynamic font vector data. Since this approach does not rely on rasterizing the font every time its size changes, this allows for resizing the font in real-time without any performance penalty. Text will also not look grainy for ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control","type":"reference"},{"text":"s that are scaled down (or for ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Label3D","type":"reference"},{"text":"s viewed from a long distance). As a downside, font hinting is not available with MSDF. The lack of font hinting may result in less crisp and less readable fonts at small sizes.","type":"text"}],"identifier":{"url":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/FontFile\/multichannelSignedDistanceField","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"multichannelSignedDistanceField","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":" { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" ","kind":"text"},{"text":"set","kind":"keyword"},{"kind":"text","text":" }"}]}]},{"kind":"content","content":[{"anchor":"discussion","type":"heading","text":"Discussion","level":2},{"type":"aside","name":"Note","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If using font outlines, "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/FontFile\/msdfPixelRange","isActive":true,"type":"reference"},{"text":" must be set to at least ","type":"text"},{"inlineContent":[{"type":"text","text":"twice"}],"type":"emphasis"},{"text":" the size of the largest font outline.","type":"text"}]}]},{"style":"note","content":[{"inlineContent":[{"type":"text","text":"MSDF font rendering does not render glyphs with overlapping shapes correctly. Overlapping shapes are not valid per the OpenType standard, but are still commonly found in many font files, especially those converted by Google Fonts. To avoid issues with overlapping glyphs, consider downloading the font file directly from the type foundry instead of relying on Google Fonts."}],"type":"paragraph"}],"name":"Note","type":"aside"}]}],"hierarchy":{"paths":[["doc:\/\/SwiftGodot\/documentation\/SwiftGodot","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/FontFile"]]},"references":{"doc://SwiftGodot/documentation/SwiftGodot/FontFile/msdfPixelRange":{"kind":"symbol","title":"msdfPixelRange","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/FontFile\/msdfPixelRange","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"msdfPixelRange","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Int32","kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V"}],"url":"\/documentation\/swiftgodot\/fontfile\/msdfpixelrange","role":"symbol","abstract":[{"type":"text","text":"The width of the range around the shape between the minimum and maximum representable signed distance. If using font outlines, "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/FontFile\/msdfPixelRange","type":"reference","isActive":true},{"type":"text","text":" must be set to at least "},{"type":"emphasis","inlineContent":[{"type":"text","text":"twice"}]},{"text":" the size of the largest font outline. The default ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/FontFile\/msdfPixelRange","isActive":true,"type":"reference"},{"type":"text","text":" value of "},{"code":"16","type":"codeVoice"},{"text":" allows outline sizes up to ","type":"text"},{"type":"codeVoice","code":"8"},{"type":"text","text":" to look correct."}]},"doc://SwiftGodot/documentation/SwiftGodot/FontFile":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/FontFile","url":"\/documentation\/swiftgodot\/fontfile","title":"FontFile","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"FontFile"}],"type":"topic","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FontFile","kind":"identifier"}],"abstract":[{"text":"Holds font source data and prerendered glyph cache, imported from a dynamic or a bitmap font.","type":"text"}]},"doc://SwiftGodot/documentation/SwiftGodot/Label3D":{"abstract":[{"text":"A node for displaying plain text in 3D space.","type":"text"}],"type":"topic","role":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Label3D","title":"Label3D","url":"\/documentation\/swiftgodot\/label3d","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Label3D"}],"navigatorTitle":[{"kind":"identifier","text":"Label3D"}]},"doc://SwiftGodot/documentation/SwiftGodot":{"kind":"symbol","url":"\/documentation\/swiftgodot","abstract":[{"type":"text","text":"Framework to write Godot Game Extensions using the Swift Programming Language."}],"role":"collection","title":"SwiftGodot","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot"},"doc://SwiftGodot/documentation/SwiftGodot/FontFile/multichannelSignedDistanceField":{"abstract":[{"type":"text","text":"If set to "},{"code":"true","type":"codeVoice"},{"text":", glyphs of all sizes are rendered using single multichannel signed distance field (MSDF) generated from the dynamic font vector data. Since this approach does not rely on rasterizing the font every time its size changes, this allows for resizing the font in real-time without any performance penalty. Text will also not look grainy for ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control","type":"reference"},{"type":"text","text":"s that are scaled down (or for "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Label3D","isActive":true},{"type":"text","text":"s viewed from a long distance). As a downside, font hinting is not available with MSDF. The lack of font hinting may result in less crisp and less readable fonts at small sizes."}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/FontFile\/multichannelSignedDistanceField","kind":"symbol","type":"topic","role":"symbol","url":"\/documentation\/swiftgodot\/fontfile\/multichannelsigneddistancefield","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"multichannelSignedDistanceField"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"title":"multichannelSignedDistanceField"},"doc://SwiftGodot/documentation/SwiftGodot/Control":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Control","kind":"identifier"}],"url":"\/documentation\/swiftgodot\/control","navigatorTitle":[{"kind":"identifier","text":"Control"}],"abstract":[{"type":"text","text":"Base class for all GUI controls. Adapts its position and size based on its parent control."}],"kind":"symbol","type":"topic","title":"Control","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control","role":"symbol"}}}
{"sections":[],"primaryContentSections":[{"kind":"content","content":[{"level":2,"text":"General differences","anchor":"General-differences","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"The SwiftGodot API follows the convention of the Swift platform, and one of the","type":"text"},{"type":"text","text":" "},{"text":"most notable places where this happens is in the use of camelCase style instead","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"of the snake_case style used in GDScript."}]},{"inlineContent":[{"text":"Enumerations and their values also change, for example, rather than having a","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"constant value like "},{"code":"CORNER_TOP_LEFT","type":"codeVoice"},{"text":" for the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Corner"},{"type":"text","text":" value, we use"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Corner\/topLeft","isActive":true},{"text":".","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"In Swift, function definitions take parameter names, and sometimes this"},{"text":" ","type":"text"},{"type":"text","text":"parameter name is omitted for the first argument. Instead of"},{"type":"text","text":" "},{"code":"myNode.add_child(box)","type":"codeVoice"},{"text":", you would use ","type":"text"},{"type":"codeVoice","code":"myNode.addChild (node: box)"},{"type":"text","text":"."}],"type":"paragraph"},{"type":"heading","text":"Global Scope","anchor":"Global-Scope","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Global functions and some constants had to be moved to classes to avoid"},{"type":"text","text":" "},{"type":"text","text":"polluting the global name space, and you can find them in the "},{"isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GD","type":"reference"},{"text":" class.","type":"text"}]},{"anchor":"Type-Mappings","text":"Type Mappings","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Godot comes with some of their own data types like strings and dictionaries, but"},{"text":" ","type":"text"},{"type":"text","text":"those types would clash with the existing Swift types with the same names."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Here is a list of the current data type mappings:"}]},{"rows":[[[{"type":"paragraph","inlineContent":[{"text":"GDScript type","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"text":"SwiftGodot Name","type":"text"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"text","text":"string"}]}],[{"inlineContent":[{"text":"GString","type":"text"}],"type":"paragraph"}]],[[{"type":"paragraph","inlineContent":[{"text":"dictionary","type":"text"}]}],[{"inlineContent":[{"type":"text","text":"GDictionary"}],"type":"paragraph"}]],[[{"inlineContent":[{"type":"text","text":"array"}],"type":"paragraph"}],[{"type":"paragraph","inlineContent":[{"text":"GArray","type":"text"}]}]]],"header":"row","type":"table"},{"inlineContent":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GArray"},{"type":"text","text":" is a type-erased array that can hold any sort of element that"},{"type":"text","text":" "},{"type":"text","text":"can be managed by Godot (Variants or Objects)."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In addition, there are two special kinds of strongly-typed versions of the"},{"text":" ","type":"text"},{"text":"GArray:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/VariantCollection","isActive":true},{"type":"text","text":" that holds any "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Variant","type":"reference","isActive":true},{"text":" instances.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/ObjectCollection","isActive":true,"type":"reference"},{"text":" that holds any ","type":"text"},{"code":"SwiftGodot.Object","type":"codeVoice"},{"type":"text","text":" instances."}],"type":"paragraph"}]}]},{"type":"heading","anchor":"GDScript-Helper-Functions","level":2,"text":"GDScript Helper Functions"},{"type":"paragraph","inlineContent":[{"text":"Many global helper functions that are exposed in GDScript have been exposed in","type":"text"},{"type":"text","text":" "},{"text":"the ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GD","isActive":true},{"type":"text","text":" class as static methods."}]},{"inlineContent":[{"type":"text","text":"This means that you can invoke them like this:"}],"type":"paragraph"},{"syntax":"swift","code":["func reportError (error: Variant) {","    GD.printerr (msg)","}"],"type":"codeListing"},{"level":3,"anchor":"Godot-Math-Functions","text":"Godot Math Functions","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The various GDScript Math functions like "},{"type":"codeVoice","code":"abs"},{"type":"text","text":", "},{"type":"codeVoice","code":"acos"},{"type":"text","text":", "},{"code":"atan","type":"codeVoice"},{"text":" as well as their","type":"text"},{"type":"text","text":" "},{"type":"text","text":"helper functions like "},{"code":"clamp","type":"codeVoice"},{"text":" are defined as static functions in the ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GD","isActive":true},{"type":"text","text":" "},{"text":"class.","type":"text"}]},{"inlineContent":[{"type":"text","text":"Generally, you can use the Swift versions instead of the GDScript versions,"},{"text":" ","type":"text"},{"type":"text","text":"which are more complete and do not incurr a marshaling overhead."}],"type":"paragraph"},{"anchor":"Random-Functions","text":"Random Functions","type":"heading","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"The random functions like "},{"code":"randi","type":"codeVoice"},{"type":"text","text":", "},{"code":"randf","type":"codeVoice"},{"type":"text","text":" and under the "},{"isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GD","type":"reference"},{"text":" class. But Swift","type":"text"},{"text":" ","type":"text"},{"text":"provides a set of random functions that are just as good, like","type":"text"},{"text":" ","type":"text"},{"isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/swift\/int\/random(in:)-9mjpw","type":"reference"},{"type":"text","text":" "},{"type":"text","text":"or"},{"type":"text","text":" "},{"type":"reference","identifier":"https:\/\/developer.apple.com\/documentation\/swift\/double\/random(in:)-6idef","isActive":true},{"type":"text","text":" "},{"text":"that operate on Swift ranges.","type":"text"}]},{"level":2,"anchor":"Idiom-Mapping","type":"heading","text":"Idiom Mapping"},{"type":"table","header":"row","rows":[[[{"inlineContent":[{"text":"GDScript Idiom","type":"text"}],"type":"paragraph"}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"SwiftGodot Equivalent"}]}]],[[{"type":"paragraph","inlineContent":[{"text":"instance_from_id(n)","type":"text"}]}],[{"inlineContent":[{"text":"GD.instanceFromId (instanceId: n)","type":"text"}],"type":"paragraph"}]]]},{"type":"heading","level":3,"text":"Checking for the contents of a variant","anchor":"Checking-for-the-contents-of-a-variant"},{"inlineContent":[{"type":"text","text":"You can check in one go if a given variant contains a valid object and is of a"},{"type":"text","text":" "},{"type":"text","text":"given type, with the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Variant\/asObject(_:)"},{"text":" method, combined with Swift’s","type":"text"},{"text":" ","type":"text"},{"text":"“let”:","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["func demo(input: Variant) {","\tif let node = input.asObject(Node.self) {","\t\t\/\/ We have a happy node inside 'input'","\t} else {","\t\tprint (\"The variant did not wrap an object, if it did, it was either nil, or was not of type Node\")","\t}","}"],"syntax":"swift"},{"level":2,"text":"@export annotations","anchor":"export-annotations","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"code":"@export","type":"codeVoice"},{"text":" annotation works the same way as it does in GDScript. Some","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"parameters and directives are different see the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Exports"},{"text":" documentation","type":"text"},{"type":"text","text":" "},{"text":"for additional information.","type":"text"}]},{"type":"heading","text":"Signals","anchor":"Signals","level":2},{"type":"paragraph","inlineContent":[{"text":"Generally, use the ","type":"text"},{"code":"#signal","type":"codeVoice"},{"type":"text","text":" macro to declare a new signal for your classes,"},{"type":"text","text":" "},{"type":"text","text":"like this:"}]},{"type":"codeListing","syntax":"swift","code":["class Demo: Node {","    #signal(\"lives_changed\", argument: [\"new_lives_count\": Int.self])","}"]},{"type":"paragraph","inlineContent":[{"text":"For additional information on defining and connecting to signals see the","type":"text"},{"type":"text","text":" "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Signals","isActive":true,"type":"reference"},{"type":"text","text":" documentation."}]},{"type":"heading","anchor":"onready-annotation","level":2,"text":"@onready annotation"},{"inlineContent":[{"text":"GDScript supports an ","type":"text"},{"type":"codeVoice","code":"@onready"},{"text":" annotation on variables, like this:","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["@onready var my_label = get_node(\"MyLabel\")"],"syntax":"gdscript"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This does not exist in SwiftGodot, to achieve a similar behavior, initialize"},{"type":"text","text":" "},{"text":"those variables in an overwritten ","type":"text"},{"type":"codeVoice","code":"_ready"},{"type":"text","text":" method, so code like this:"}]},{"syntax":"swift","code":["@Godot","class Demo: Node {","\tvar myLabel: Node3D?","","\toverride func _ready () {","\t\tmyLabel = getNode (path: \"myLabel\") as? Node3D","\t}","}"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"If you do not need to load the node right away, and you merely need to be able","type":"text"},{"text":" ","type":"text"},{"text":"to access it, you can use this instead:","type":"text"}]},{"syntax":"swift","code":["class Demo: Node {","\t@BindNode var myLabel: Node3D","}"],"type":"codeListing"},{"anchor":"Running-code-before-nodes-are-added-to-the-Scene-Tree","text":"Running code before nodes are added to the Scene Tree","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you need to run some code in your constructor, but overriding the "},{"type":"codeVoice","code":"_ready()"},{"type":"text","text":" "},{"type":"text","text":"function is already too late for you, you can use the following idiom:"}]},{"code":["@Godot","class NetworkedNode: Node {","    required init() {","        super.init()","        onInit()","    }","","    required init(nativeHandle: UnsafeRawPointer) {","        super.init(nativeHandle: nativeHandle)","        onInit()","    }","","    func onInit() {","        print(\"Was init!\")","    }","}"],"type":"codeListing","syntax":"swift"},{"type":"heading","text":"Singletons","level":2,"anchor":"Singletons"},{"type":"paragraph","inlineContent":[{"text":"Godot Singletons surface their API as static methods, to make the code more","type":"text"},{"type":"text","text":" "},{"text":"shorter, for example:","type":"text"}]},{"code":["let pressed = Input.isActionPressed(ui_down)"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"However, in some very rare cases this is not enough. For example, you may want"},{"type":"text","text":" "},{"type":"text","text":"to access a member from the base class SwiftGodot.Object, like "},{"type":"codeVoice","code":"connect"},{"type":"text","text":". For such"},{"text":" ","type":"text"},{"type":"text","text":"use cases we provide a static property named "},{"type":"codeVoice","code":"shared"},{"type":"text","text":" that returns the singleton"},{"text":" ","type":"text"},{"text":"instance.","type":"text"}]},{"code":["let demo = Input.shared.joyConnectionChanged.connect { device, connected in ","   print (\"joyConnectionChanged called\")","}"],"syntax":"swift","type":"codeListing"},{"type":"heading","level":2,"text":"String","anchor":"String"},{"type":"paragraph","inlineContent":[{"type":"text","text":"SwiftGodot generally exposes a Swift-string based API, but there are some"},{"text":" ","type":"text"},{"text":"convenience methods that you might have come to expect from the Godot String","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"(things like "},{"type":"codeVoice","code":"GString\/validateFilename"},{"text":", those APIs are available in the","type":"text"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GString"},{"text":" class).","type":"text"}]},{"text":"Callable","type":"heading","level":2,"anchor":"Callable"},{"inlineContent":[{"type":"text","text":"In SwiftGodot, you can create "},{"type":"codeVoice","code":"Callable"},{"text":" instances by directly passing a Swift function that takes an array of ","type":"text"},{"type":"codeVoice","code":"Variant"},{"type":"text","text":" arguments,"},{"type":"text","text":" "},{"text":"and returns an optional ","type":"text"},{"type":"codeVoice","code":"Variant"},{"type":"text","text":" result, like this:"}],"type":"paragraph"},{"code":["func myCallback(args: borrowing Arguments)-> Variant? {","\tprint (\"MyCallback invoked with \\(args.count) arguments\")","\treturn nil","}","","let myCallable = Callable(myCallback)"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Alternatively, you can use a StringName that binds a method that you have exported (via, the "},{"code":"@Callable","type":"codeVoice"},{"type":"text","text":" macro), like this:"}]},{"type":"codeListing","syntax":"swift","code":["@Callable func myCallback(message: String) {","\tGD.print(message)","}"]},{"inlineContent":[{"type":"text","text":"You can call the callable in GDScript by invoking call() method of the exported Swift type."}],"type":"paragraph"},{"syntax":"GDScript","code":["MySwiftNode.myCallback.call(\"Hello from Swift!\")"],"type":"codeListing"},{"level":2,"type":"heading","text":"Async\/Await","anchor":"AsyncAwait"},{"inlineContent":[{"text":"GDScript comes with an ","type":"text"},{"type":"codeVoice","code":"await"},{"text":" primitive, you can achieve similar functionality","type":"text"},{"type":"text","text":" "},{"type":"text","text":"with the Swift built-in await\/async stack.   Unlike GDScript, await can only be"},{"type":"text","text":" "},{"text":"invoked from ","type":"text"},{"type":"codeVoice","code":"async"},{"text":" methods.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"This means that code like this wont work:"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["func demo() {","\tawait someSignal.emitted","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For this to work, this needs to be in an async context, like this one:"}]},{"type":"codeListing","syntax":"swift","code":["func demo() async {","\tawait someSignal.emitted","}"]},{"inlineContent":[{"type":"text","text":"If you are inside of a function that is not async, you need to wrap your code in"},{"type":"text","text":" "},{"type":"text","text":"Task, like this:"}],"type":"paragraph"},{"code":["func demo() {","\t\/\/ We are not an async function, but we can start a Task","\tTask {","\t\tawait someSignal.emitted","\t}","}"],"type":"codeListing","syntax":"swift"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftgodot\/differences"]}],"kind":"article","metadata":{"roleHeading":"Article","title":"SwiftGodot API differences to GDScript","modules":[{"name":"SwiftGodot"}],"role":"article"},"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/SwiftGodot\/documentation\/SwiftGodot"]]},"seeAlsoSections":[{"title":"Articles and Tutorials","generated":true,"identifiers":["doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Variants","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Exports","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Signals","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/CustomTypes","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/BindingNodes","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/RunningInEditor"],"anchor":"Articles-and-Tutorials"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Differences"},"abstract":[{"type":"text","text":"This document lists some common differences between GDSscript and SwiftGodot."}],"references":{"doc://SwiftGodot/documentation/SwiftGodot/CustomTypes":{"kind":"article","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/CustomTypes","url":"\/documentation\/swiftgodot\/customtypes","type":"topic","abstract":[{"text":"You will typically extend the functionality of your Godot game by creating","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"classes that derive from one of the various Godot types and adjust the"},{"text":" ","type":"text"},{"text":"behavior accordingly.","type":"text"}],"title":"Using Custom Types","role":"article"},"https://developer.apple.com/documentation/swift/double/random(in:)-6idef":{"type":"link","title":"Double.random(in:)","url":"https:\/\/developer.apple.com\/documentation\/swift\/double\/random(in:)-6idef","titleInlineContent":[{"type":"text","text":"Double.random(in:)"}],"identifier":"https:\/\/developer.apple.com\/documentation\/swift\/double\/random(in:)-6idef"},"doc://SwiftGodot/documentation/SwiftGodot":{"kind":"symbol","url":"\/documentation\/swiftgodot","abstract":[{"type":"text","text":"Framework to write Godot Game Extensions using the Swift Programming Language."}],"role":"collection","title":"SwiftGodot","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot"},"doc://SwiftGodot/documentation/SwiftGodot/Corner/topLeft":{"url":"\/documentation\/swiftgodot\/corner\/topleft","type":"topic","role":"symbol","title":"Corner.topLeft","kind":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"topLeft"}],"abstract":[{"text":"Top-left corner.","type":"text"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Corner\/topLeft"},"doc://SwiftGodot/documentation/SwiftGodot/Variant/asObject(_:)":{"type":"topic","kind":"symbol","url":"\/documentation\/swiftgodot\/variant\/asobject(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asObject"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"T","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Variant\/asObject(_:)","abstract":[{"type":"text","text":"Attempts to cast the Variant into a SwiftGodot.Object, if the variant contains a value of type "},{"code":".object","type":"codeVoice"},{"text":", then","type":"text"},{"type":"text","text":" "},{"text":"a ","type":"text"},{"code":".object, the value ","type":"codeVoice"},{"type":"text","text":"nil` is returned."}],"title":"asObject(_:)","role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/RunningInEditor":{"abstract":[{"text":"There are cases where you might want some of your Swift code for your extension","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to run while it is being used in the Godot Editor."}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/RunningInEditor","type":"topic","kind":"article","url":"\/documentation\/swiftgodot\/runningineditor","title":"Running Code in the Godot Editor","role":"article"},"doc://SwiftGodot/documentation/SwiftGodot/BindingNodes":{"type":"topic","kind":"article","url":"\/documentation\/swiftgodot\/bindingnodes","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/BindingNodes","abstract":[{"text":"You will find yourself referencing nodes from a scene in your code.   In","type":"text"},{"type":"text","text":" "},{"text":"GDScript, that is usually achieved by using the dollar sign and the name of the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"object you want to reference."}],"role":"article","title":"Referencing Nodes from your Scene"},"doc://SwiftGodot/documentation/SwiftGodot/Signals":{"abstract":[{"text":"Signals in Godot are used by objects to post interesting events that are","type":"text"},{"text":" ","type":"text"},{"text":"taking place, and can be used by users to easily add behavior and react","type":"text"},{"type":"text","text":" "},{"text":"to changes.","type":"text"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Signals","type":"topic","kind":"article","url":"\/documentation\/swiftgodot\/signals","title":"Signals","role":"article"},"doc://SwiftGodot/documentation/SwiftGodot/Variant":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Variant","navigatorTitle":[{"kind":"identifier","text":"Variant"}],"abstract":[{"text":"Variant objects box various Godot Objects, you create them with one of the","type":"text"},{"type":"text","text":" "},{"text":"constructors, and you can retrieve the contents using the various extension","type":"text"},{"type":"text","text":" "},{"type":"text","text":"constructors that are declared on the various types that are wrapped."}],"kind":"symbol","role":"symbol","url":"\/documentation\/swiftgodot\/variant","title":"Variant","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Variant","kind":"identifier"}]},"https://developer.apple.com/documentation/swift/int/random(in:)-9mjpw":{"type":"link","title":"Int.random(in:)","url":"https:\/\/developer.apple.com\/documentation\/swift\/int\/random(in:)-9mjpw","titleInlineContent":[{"type":"text","text":"Int.random(in:)"}],"identifier":"https:\/\/developer.apple.com\/documentation\/swift\/int\/random(in:)-9mjpw"},"doc://SwiftGodot/documentation/SwiftGodot/Variants":{"kind":"article","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Variants","url":"\/documentation\/swiftgodot\/variants","type":"topic","abstract":[{"type":"text","text":"Follow up on the fundamental building block of Godot’s data types."}],"title":"Variants","role":"article"},"doc://SwiftGodot/documentation/SwiftGodot/GArray":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GArray","url":"\/documentation\/swiftgodot\/garray","title":"GArray","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"GArray"}],"type":"topic","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"GArray","kind":"identifier"}],"abstract":[{"text":"A built-in data structure that holds a sequence of elements.","type":"text"}]},"doc://SwiftGodot/documentation/SwiftGodot/VariantCollection":{"url":"\/documentation\/swiftgodot\/variantcollection","navigatorTitle":[{"kind":"identifier","text":"VariantCollection"}],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"VariantCollection"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/VariantCollection","title":"VariantCollection","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"This represents a typed array of one of the built-in types from Godot"}],"role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/ObjectCollection":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"ObjectCollection","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/ObjectCollection","navigatorTitle":[{"kind":"identifier","text":"ObjectCollection"}],"type":"topic","abstract":[{"type":"text","text":"This represents a typed array of one of the built-in types from Godot"}],"url":"\/documentation\/swiftgodot\/objectcollection","title":"ObjectCollection","role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/Exports":{"kind":"article","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Exports","url":"\/documentation\/swiftgodot\/exports","type":"topic","abstract":[{"text":"In Godot, class members can be exported. This means their value gets saved along","type":"text"},{"type":"text","text":" "},{"text":"with the resource (such as the scene) they’re attached to. They will also be","type":"text"},{"text":" ","type":"text"},{"text":"available for editing in the property editor. Exporting is done by using the","type":"text"}],"title":"Exports","role":"article"},"doc://SwiftGodot/documentation/SwiftGodot/GD":{"type":"topic","abstract":[],"url":"\/documentation\/swiftgodot\/gd","title":"GD","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"GD"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GD","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"GD"}]},"doc://SwiftGodot/documentation/SwiftGodot/GString":{"navigatorTitle":[{"text":"GString","kind":"identifier"}],"abstract":[{"text":"A built-in type for strings.","type":"text"}],"kind":"symbol","type":"topic","role":"symbol","url":"\/documentation\/swiftgodot\/gstring","title":"GString","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GString","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"GString","kind":"identifier"}]},"doc://SwiftGodot/documentation/SwiftGodot/Corner":{"navigatorTitle":[{"kind":"identifier","text":"Corner"}],"role":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Corner","title":"Corner","kind":"symbol","url":"\/documentation\/swiftgodot\/corner","abstract":[],"type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"Corner","kind":"identifier"}]}}}
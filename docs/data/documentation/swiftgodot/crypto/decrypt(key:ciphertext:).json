{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftgodot\/crypto\/decrypt(key:ciphertext:)"]}],"identifier":{"url":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Crypto\/decrypt(key:ciphertext:)","interfaceLanguage":"swift"},"metadata":{"title":"decrypt(key:ciphertext:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"decrypt","kind":"identifier"},{"kind":"text","text":"("},{"text":"key","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot9CryptoKeyC","text":"CryptoKey","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"ciphertext"},{"text":": ","kind":"text"},{"text":"PackedByteArray","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot15PackedByteArrayC"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot15PackedByteArrayC","kind":"typeIdentifier","text":"PackedByteArray"}],"externalID":"s:10SwiftGodot6CryptoC7decrypt3key10ciphertextAA15PackedByteArrayCAA0C3KeyCSg_AHtF","symbolKind":"method","role":"symbol","modules":[{"name":"SwiftGodot"}],"roleHeading":"Instance Method"},"sections":[],"abstract":[{"type":"text","text":"Decrypt the given "},{"code":"ciphertext","type":"codeVoice"},{"text":" with the provided private ","type":"text"},{"type":"codeVoice","code":"key"},{"text":".","type":"text"}],"kind":"symbol","schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/SwiftGodot\/documentation\/SwiftGodot","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Crypto"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"final"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"decrypt"},{"text":"(","kind":"text"},{"text":"key","kind":"externalParam"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/CryptoKey","preciseIdentifier":"s:10SwiftGodot9CryptoKeyC","text":"CryptoKey","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"ciphertext"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PackedByteArray","text":"PackedByteArray","preciseIdentifier":"s:10SwiftGodot15PackedByteArrayC","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PackedByteArray","text":"PackedByteArray","preciseIdentifier":"s:10SwiftGodot15PackedByteArrayC","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"type":"aside","content":[{"inlineContent":[{"type":"text","text":"The maximum size of accepted ciphertext is limited by the key size."}],"type":"paragraph"}],"style":"note","name":"Note"}],"kind":"content"}],"references":{"doc://SwiftGodot/documentation/SwiftGodot/Crypto/decrypt(key:ciphertext:)":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Crypto\/decrypt(key:ciphertext:)","abstract":[{"type":"text","text":"Decrypt the given "},{"type":"codeVoice","code":"ciphertext"},{"type":"text","text":" with the provided private "},{"code":"key","type":"codeVoice"},{"text":".","type":"text"}],"title":"decrypt(key:ciphertext:)","kind":"symbol","role":"symbol","type":"topic","url":"\/documentation\/swiftgodot\/crypto\/decrypt(key:ciphertext:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"decrypt","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"key"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CryptoKey","preciseIdentifier":"s:10SwiftGodot9CryptoKeyC"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"ciphertext"},{"text":": ","kind":"text"},{"text":"PackedByteArray","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot15PackedByteArrayC"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"PackedByteArray","preciseIdentifier":"s:10SwiftGodot15PackedByteArrayC"}]},"doc://SwiftGodot/documentation/SwiftGodot/PackedByteArray":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PackedByteArray","kind":"symbol","url":"\/documentation\/swiftgodot\/packedbytearray","navigatorTitle":[{"kind":"identifier","text":"PackedByteArray"}],"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PackedByteArray"}],"title":"PackedByteArray","abstract":[{"type":"text","text":"A packed array of bytes."}],"role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/Crypto":{"abstract":[{"type":"text","text":"Provides access to advanced cryptographic functionalities."}],"type":"topic","role":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Crypto","url":"\/documentation\/swiftgodot\/crypto","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Crypto"}],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"Crypto","kind":"identifier"}],"title":"Crypto"},"doc://SwiftGodot/documentation/SwiftGodot/CryptoKey":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"CryptoKey"}],"title":"CryptoKey","role":"symbol","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/CryptoKey","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CryptoKey"}],"url":"\/documentation\/swiftgodot\/cryptokey","abstract":[{"type":"text","text":"A cryptographic key (RSA or elliptic-curve)."}]},"doc://SwiftGodot/documentation/SwiftGodot":{"kind":"symbol","url":"\/documentation\/swiftgodot","abstract":[{"type":"text","text":"Framework to write Godot Game Extensions using the Swift Programming Language."}],"role":"collection","title":"SwiftGodot","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot"}}}
{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftgodot\/crypto\/generatersa(size:)"]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/SwiftGodot\/documentation\/SwiftGodot","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Crypto"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"abstract":[{"type":"text","text":"Generates an RSA "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/CryptoKey","type":"reference","isActive":true},{"type":"text","text":" that can be used for creating self-signed certificates and passed to "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/StreamPeerTLS\/acceptStream(_:serverOptions:)","isActive":true,"type":"reference"},{"text":".","type":"text"}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Crypto\/generateRsa(size:)"},"metadata":{"symbolKind":"method","externalID":"s:10SwiftGodot6CryptoC11generateRsa4sizeAA0C3KeyCSgs5Int32V_tF","title":"generateRsa(size:)","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"generateRsa","kind":"identifier"},{"kind":"text","text":"("},{"text":"size","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V","text":"Int32"},{"kind":"text","text":") -> "},{"text":"CryptoKey","preciseIdentifier":"s:10SwiftGodot9CryptoKeyC","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"modules":[{"name":"SwiftGodot"}],"role":"symbol"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"final"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"generateRsa"},{"kind":"text","text":"("},{"text":"size","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int32","kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V"},{"kind":"text","text":") -> "},{"text":"CryptoKey","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/CryptoKey","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot9CryptoKeyC"},{"text":"?","kind":"text"}]}]}],"references":{"doc://SwiftGodot/documentation/SwiftGodot/CryptoKey":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"CryptoKey"}],"title":"CryptoKey","role":"symbol","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/CryptoKey","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CryptoKey"}],"url":"\/documentation\/swiftgodot\/cryptokey","abstract":[{"type":"text","text":"A cryptographic key (RSA or elliptic-curve)."}]},"doc://SwiftGodot/documentation/SwiftGodot/Crypto":{"abstract":[{"type":"text","text":"Provides access to advanced cryptographic functionalities."}],"type":"topic","role":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Crypto","url":"\/documentation\/swiftgodot\/crypto","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Crypto"}],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"Crypto","kind":"identifier"}],"title":"Crypto"},"doc://SwiftGodot/documentation/SwiftGodot/Crypto/generateRsa(size:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"generateRsa"},{"kind":"text","text":"("},{"text":"size","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s5Int32V","text":"Int32","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot9CryptoKeyC","text":"CryptoKey"},{"text":"?","kind":"text"}],"kind":"symbol","abstract":[{"type":"text","text":"Generates an RSA "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/CryptoKey"},{"text":" that can be used for creating self-signed certificates and passed to ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/StreamPeerTLS\/acceptStream(_:serverOptions:)"},{"text":".","type":"text"}],"type":"topic","url":"\/documentation\/swiftgodot\/crypto\/generatersa(size:)","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Crypto\/generateRsa(size:)","title":"generateRsa(size:)","role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/TLSOptions/server(key:certificate:)":{"kind":"symbol","title":"server(key:certificate:)","role":"symbol","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/TLSOptions\/server(key:certificate:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"server","kind":"identifier"},{"kind":"text","text":"("},{"text":"key","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"CryptoKey","preciseIdentifier":"s:10SwiftGodot9CryptoKeyC"},{"text":"?, ","kind":"text"},{"text":"certificate","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"X509Certificate","preciseIdentifier":"s:10SwiftGodot15X509CertificateC","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot10TLSOptionsC","text":"TLSOptions"},{"kind":"text","text":"?"}],"url":"\/documentation\/swiftgodot\/tlsoptions\/server(key:certificate:)","abstract":[{"text":"Creates a TLS server configuration using the provided ","type":"text"},{"type":"codeVoice","code":"key"},{"text":" and ","type":"text"},{"code":"certificate","type":"codeVoice"},{"type":"text","text":"."}]},"doc://SwiftGodot/documentation/SwiftGodot":{"kind":"symbol","url":"\/documentation\/swiftgodot","abstract":[{"type":"text","text":"Framework to write Godot Game Extensions using the Swift Programming Language."}],"role":"collection","title":"SwiftGodot","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot"},"doc://SwiftGodot/documentation/SwiftGodot/StreamPeerTLS/acceptStream(_:serverOptions:)":{"kind":"symbol","title":"acceptStream(_:serverOptions:)","role":"symbol","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/StreamPeerTLS\/acceptStream(_:serverOptions:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"acceptStream"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot10StreamPeerC","text":"StreamPeer","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"text":"serverOptions","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot10TLSOptionsC","text":"TLSOptions"},{"text":"?) -> ","kind":"text"},{"text":"GodotError","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot0B5ErrorO"}],"url":"\/documentation\/swiftgodot\/streampeertls\/acceptstream(_:serveroptions:)","abstract":[{"text":"Accepts a peer connection as a server using the given ","type":"text"},{"code":"serverOptions","type":"codeVoice"},{"type":"text","text":". See "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/TLSOptions\/server(key:certificate:)"},{"text":".","type":"text"}]}}}
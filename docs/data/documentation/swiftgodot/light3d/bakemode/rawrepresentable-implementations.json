{"topicSections":[{"anchor":"Instance-Properties","identifiers":["doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Light3D\/BakeMode\/hashValue"],"title":"Instance Properties","generated":true},{"anchor":"Instance-Methods","title":"Instance Methods","generated":true,"identifiers":["doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Light3D\/BakeMode\/hash(into:)"]}],"identifier":{"url":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Light3D\/BakeMode\/RawRepresentable-Implementations","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/SwiftGodot\/documentation\/SwiftGodot","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Light3D","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Light3D\/BakeMode"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"title":"RawRepresentable Implementations","role":"collectionGroup","roleHeading":"API Collection","modules":[{"name":"SwiftGodot"}]},"sections":[],"kind":"article","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftgodot\/light3d\/bakemode\/rawrepresentable-implementations"]}],"references":{"doc://SwiftGodot/documentation/SwiftGodot/Light3D/BakeMode/hashValue":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Light3D\/BakeMode\/hashValue","kind":"symbol","abstract":[],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hashValue","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"}],"type":"topic","url":"\/documentation\/swiftgodot\/light3d\/bakemode\/hashvalue","title":"hashValue","role":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"RawValue"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"text":".","type":"text"}]}},"doc://SwiftGodot/documentation/SwiftGodot/Light3D/BakeMode":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Light3D\/BakeMode","abstract":[],"type":"topic","kind":"symbol","title":"Light3D.BakeMode","url":"\/documentation\/swiftgodot\/light3d\/bakemode","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"BakeMode","kind":"identifier"}],"navigatorTitle":[{"text":"BakeMode","kind":"identifier"}]},"doc://SwiftGodot/documentation/SwiftGodot/Light3D":{"url":"\/documentation\/swiftgodot\/light3d","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"Light3D","kind":"identifier"}],"type":"topic","title":"Light3D","abstract":[{"type":"text","text":"Provides a base class for different kinds of light nodes."}],"kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Light3D","navigatorTitle":[{"kind":"identifier","text":"Light3D"}],"role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot":{"kind":"symbol","url":"\/documentation\/swiftgodot","abstract":[{"type":"text","text":"Framework to write Godot Game Extensions using the Swift Programming Language."}],"role":"collection","title":"SwiftGodot","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot"},"doc://SwiftGodot/documentation/SwiftGodot/Light3D/BakeMode/hash(into:)":{"url":"\/documentation\/swiftgodot\/light3d\/bakemode\/hash(into:)","title":"hash(into:)","abstract":[],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Light3D\/BakeMode\/hash(into:)","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hash","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"into"},{"text":": ","kind":"text"},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:s6HasherV","text":"Hasher"},{"text":")","kind":"text"}],"type":"topic","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Hashable","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"RawValue"},{"text":" conforms to ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"text":".","type":"text"}]}}}}
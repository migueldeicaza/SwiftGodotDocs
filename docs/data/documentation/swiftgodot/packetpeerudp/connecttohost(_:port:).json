{"variants":[{"paths":["\/documentation\/swiftgodot\/packetpeerudp\/connecttohost(_:port:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/SwiftGodot\/documentation\/SwiftGodot","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeerUDP"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"connectToHost","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"host"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"port"},{"kind":"text","text":": "},{"text":"Int32","kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:10SwiftGodot0B5ErrorO","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GodotError","kind":"typeIdentifier","text":"GodotError"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"name":"Note","type":"aside","style":"note","content":[{"inlineContent":[{"text":"Connecting to the remote peer does not help to protect from malicious attacks like IP spoofing, etc. Think about using an encryption technique like TLS or DTLS if you feel like your application is transferring sensitive information.","type":"text"}],"type":"paragraph"}]}],"kind":"content"}],"identifier":{"url":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeerUDP\/connectToHost(_:port:)","interfaceLanguage":"swift"},"sections":[],"kind":"symbol","abstract":[{"type":"text","text":"Calling this method connects this UDP peer to the given "},{"code":"host","type":"codeVoice"},{"type":"text","text":"\/"},{"type":"codeVoice","code":"port"},{"text":" pair. UDP is in reality connectionless, so this option only means that incoming packets from different addresses are automatically discarded, and that outgoing packets are always sent to the connected address (future calls to ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeerUDP\/setDestAddress(host:port:)"},{"type":"text","text":" are not allowed). This method does not send any data to the remote peer, to do that, use "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeer\/putVar(_:fullObjects:)","isActive":true,"type":"reference"},{"text":" or ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeer\/putPacket(buffer:)","isActive":true},{"type":"text","text":" as usual. See also "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/UDPServer","isActive":true,"type":"reference"},{"text":".","type":"text"}],"metadata":{"role":"symbol","roleHeading":"Instance Method","externalID":"s:10SwiftGodot13PacketPeerUDPC13connectToHost_4portAA0B5ErrorOSS_s5Int32VtF","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"connectToHost","kind":"identifier"},{"kind":"text","text":"("},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"text":"port","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V","text":"Int32"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"GodotError","preciseIdentifier":"s:10SwiftGodot0B5ErrorO"}],"modules":[{"name":"SwiftGodot"}],"title":"connectToHost(_:port:)"},"references":{"doc://SwiftGodot/documentation/SwiftGodot":{"kind":"symbol","url":"\/documentation\/swiftgodot","abstract":[{"type":"text","text":"Framework to write Godot Game Extensions using the Swift Programming Language."}],"role":"collection","title":"SwiftGodot","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot"},"doc://SwiftGodot/documentation/SwiftGodot/UDPServer":{"abstract":[{"type":"text","text":"Helper class to implement a UDP server."}],"type":"topic","role":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/UDPServer","url":"\/documentation\/swiftgodot\/udpserver","kind":"symbol","navigatorTitle":[{"text":"UDPServer","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UDPServer"}],"title":"UDPServer"},"doc://SwiftGodot/documentation/SwiftGodot/GodotError":{"title":"GodotError","url":"\/documentation\/swiftgodot\/godoterror","abstract":[],"type":"topic","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GodotError","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"GodotError","kind":"identifier"}],"navigatorTitle":[{"text":"GodotError","kind":"identifier"}]},"doc://SwiftGodot/documentation/SwiftGodot/PacketPeer/putVar(_:fullObjects:)":{"url":"\/documentation\/swiftgodot\/packetpeer\/putvar(_:fullobjects:)","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeer\/putVar(_:fullObjects:)","role":"symbol","title":"putVar(_:fullObjects:)","abstract":[{"type":"text","text":"Sends a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Variant"},{"type":"text","text":" as a packet. If "},{"type":"codeVoice","code":"fullObjects"},{"type":"text","text":" is "},{"code":"true","type":"codeVoice"},{"type":"text","text":", encoding objects is allowed (and can potentially include code)."}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"putVar"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Variant","preciseIdentifier":"s:10SwiftGodot7VariantC"},{"kind":"text","text":", "},{"text":"fullObjects","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"GodotError","preciseIdentifier":"s:10SwiftGodot0B5ErrorO","kind":"typeIdentifier"}],"type":"topic"},"doc://SwiftGodot/documentation/SwiftGodot/PacketPeerUDP":{"url":"\/documentation\/swiftgodot\/packetpeerudp","kind":"symbol","abstract":[{"type":"text","text":"UDP packet peer."}],"type":"topic","role":"symbol","navigatorTitle":[{"text":"PacketPeerUDP","kind":"identifier"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeerUDP","title":"PacketPeerUDP","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"PacketPeerUDP","kind":"identifier"}]},"doc://SwiftGodot/documentation/SwiftGodot/PacketPeerUDP/connectToHost(_:port:)":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeerUDP\/connectToHost(_:port:)","title":"connectToHost(_:port:)","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"connectToHost"},{"text":"(","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"port","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"},{"kind":"text","text":") -> "},{"text":"GodotError","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot0B5ErrorO"}],"url":"\/documentation\/swiftgodot\/packetpeerudp\/connecttohost(_:port:)","kind":"symbol","abstract":[{"type":"text","text":"Calling this method connects this UDP peer to the given "},{"type":"codeVoice","code":"host"},{"type":"text","text":"\/"},{"type":"codeVoice","code":"port"},{"type":"text","text":" pair. UDP is in reality connectionless, so this option only means that incoming packets from different addresses are automatically discarded, and that outgoing packets are always sent to the connected address (future calls to "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeerUDP\/setDestAddress(host:port:)"},{"type":"text","text":" are not allowed). This method does not send any data to the remote peer, to do that, use "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeer\/putVar(_:fullObjects:)","isActive":true,"type":"reference"},{"type":"text","text":" or "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeer\/putPacket(buffer:)","isActive":true},{"text":" as usual. See also ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/UDPServer","type":"reference"},{"type":"text","text":"."}]},"doc://SwiftGodot/documentation/SwiftGodot/Variant":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Variant","navigatorTitle":[{"kind":"identifier","text":"Variant"}],"abstract":[{"text":"Variant objects box various Godot Objects, you create them with one of the","type":"text"},{"type":"text","text":" "},{"text":"constructors, and you can retrieve the contents using the various extension","type":"text"},{"type":"text","text":" "},{"type":"text","text":"constructors that are declared on the various types that are wrapped."}],"kind":"symbol","role":"symbol","url":"\/documentation\/swiftgodot\/variant","title":"Variant","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Variant","kind":"identifier"}]},"doc://SwiftGodot/documentation/SwiftGodot/PacketPeerUDP/setDestAddress(host:port:)":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeerUDP\/setDestAddress(host:port:)","title":"setDestAddress(host:port:)","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"setDestAddress","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"host"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"text":"port","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot0B5ErrorO","kind":"typeIdentifier","text":"GodotError"}],"url":"\/documentation\/swiftgodot\/packetpeerudp\/setdestaddress(host:port:)","kind":"symbol","abstract":[{"type":"text","text":"Sets the destination address and port for sending packets and variables. A hostname will be resolved using DNS if needed."}]},"doc://SwiftGodot/documentation/SwiftGodot/PacketPeer/putPacket(buffer:)":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeer\/putPacket(buffer:)","title":"putPacket(buffer:)","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"putPacket","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"buffer"},{"kind":"text","text":": "},{"text":"PackedByteArray","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot15PackedByteArrayC"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"GodotError","preciseIdentifier":"s:10SwiftGodot0B5ErrorO"}],"url":"\/documentation\/swiftgodot\/packetpeer\/putpacket(buffer:)","kind":"symbol","abstract":[{"type":"text","text":"Sends a raw packet."}]}}}
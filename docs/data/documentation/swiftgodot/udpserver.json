{"identifier":{"url":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/UDPServer","interfaceLanguage":"swift"},"topicSections":[{"identifiers":["doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/UDPServer\/maxPendingConnections"],"generated":true,"anchor":"Instance-Properties","title":"Instance Properties"},{"anchor":"Instance-Methods","title":"Instance Methods","generated":true,"identifiers":["doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/UDPServer\/getLocalPort()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/UDPServer\/isConnectionAvailable()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/UDPServer\/isListening()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/UDPServer\/listen(port:bindAddress:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/UDPServer\/poll()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/UDPServer\/stop()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/UDPServer\/takeConnection()"]},{"generated":true,"title":"Type Properties","identifiers":["doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/UDPServer\/godotClassName"],"anchor":"Type-Properties"}],"hierarchy":{"paths":[["doc:\/\/SwiftGodot\/documentation\/SwiftGodot"]]},"sections":[],"metadata":{"title":"UDPServer","modules":[{"name":"SwiftGodot"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"UDPServer"}],"role":"symbol","navigatorTitle":[{"text":"UDPServer","kind":"identifier"}],"roleHeading":"Class","externalID":"s:10SwiftGodot9UDPServerC","symbolKind":"class"},"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/RefCounted"],"type":"inheritsFrom","title":"Inherits From"},{"type":"conformsTo","title":"Conforms To","identifiers":["doc:\/\/SwiftGodot\/s23CustomStringConvertibleP","doc:\/\/SwiftGodot\/SQ","doc:\/\/SwiftGodot\/SH","doc:\/\/SwiftGodot\/s12IdentifiableP","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/VariantRepresentable","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/VariantStorable"],"kind":"relationships"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"UDPServer"}]}]},{"content":[{"type":"heading","level":2,"text":"Overview","anchor":"overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A simple server that opens a UDP socket and returns connected "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeerUDP"},{"type":"text","text":" upon receiving new packets. See also "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeerUDP\/connectToHost(_:port:)","isActive":true,"type":"reference"},{"type":"text","text":"."}]},{"inlineContent":[{"text":"After starting the server (","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/UDPServer\/listen(port:bindAddress:)"},{"type":"text","text":"), you will need to "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/UDPServer\/poll()"},{"type":"text","text":" it at regular intervals (e.g. inside "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Node\/_process(delta:)","isActive":true},{"type":"text","text":") for it to process new packets, delivering them to the appropriate "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeerUDP"},{"type":"text","text":", and taking new connections."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Below a small example of how it can be used:"}],"type":"paragraph"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftgodot\/udpserver"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","abstract":[{"type":"text","text":"Helper class to implement a UDP server."}],"references":{"doc://SwiftGodot/documentation/SwiftGodot/UDPServer/isListening()":{"url":"\/documentation\/swiftgodot\/udpserver\/islistening()","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/UDPServer\/isListening()","role":"symbol","title":"isListening()","abstract":[{"text":"Returns ","type":"text"},{"code":"true","type":"codeVoice"},{"type":"text","text":" if the socket is open and listening on a port."}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"isListening","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"type":"topic"},"doc://SwiftGodot/documentation/SwiftGodot/PacketPeerUDP/connectToHost(_:port:)":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeerUDP\/connectToHost(_:port:)","title":"connectToHost(_:port:)","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"connectToHost"},{"text":"(","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"port","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"},{"kind":"text","text":") -> "},{"text":"GodotError","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot0B5ErrorO"}],"url":"\/documentation\/swiftgodot\/packetpeerudp\/connecttohost(_:port:)","kind":"symbol","abstract":[{"type":"text","text":"Calling this method connects this UDP peer to the given "},{"type":"codeVoice","code":"host"},{"type":"text","text":"\/"},{"type":"codeVoice","code":"port"},{"type":"text","text":" pair. UDP is in reality connectionless, so this option only means that incoming packets from different addresses are automatically discarded, and that outgoing packets are always sent to the connected address (future calls to "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeerUDP\/setDestAddress(host:port:)"},{"type":"text","text":" are not allowed). This method does not send any data to the remote peer, to do that, use "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeer\/putVar(_:fullObjects:)","isActive":true,"type":"reference"},{"type":"text","text":" or "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeer\/putPacket(buffer:)","isActive":true},{"text":" as usual. See also ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/UDPServer","type":"reference"},{"type":"text","text":"."}]},"doc://SwiftGodot/documentation/SwiftGodot/RefCounted":{"kind":"symbol","navigatorTitle":[{"text":"RefCounted","kind":"identifier"}],"title":"RefCounted","role":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/RefCounted","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RefCounted","kind":"identifier"}],"url":"\/documentation\/swiftgodot\/refcounted","abstract":[{"text":"Base class for reference-counted objects.","type":"text"}]},"doc://SwiftGodot/documentation/SwiftGodot/UDPServer/listen(port:bindAddress:)":{"url":"\/documentation\/swiftgodot\/udpserver\/listen(port:bindaddress:)","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/UDPServer\/listen(port:bindAddress:)","role":"symbol","title":"listen(port:bindAddress:)","abstract":[{"type":"text","text":"Starts the server by opening a UDP socket listening on the given "},{"code":"port","type":"codeVoice"},{"text":". You can optionally specify a ","type":"text"},{"type":"codeVoice","code":"bindAddress"},{"type":"text","text":" to only listen for packets sent to that address. See also "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeerUDP\/bind(port:bindAddress:recvBufSize:)"},{"text":".","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"listen"},{"kind":"text","text":"("},{"text":"port","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt16","preciseIdentifier":"s:s6UInt16V"},{"kind":"text","text":", "},{"kind":"externalParam","text":"bindAddress"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"GodotError","preciseIdentifier":"s:10SwiftGodot0B5ErrorO"}],"type":"topic"},"doc://SwiftGodot/documentation/SwiftGodot":{"kind":"symbol","url":"\/documentation\/swiftgodot","abstract":[{"type":"text","text":"Framework to write Godot Game Extensions using the Swift Programming Language."}],"role":"collection","title":"SwiftGodot","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot"},"doc://SwiftGodot/documentation/SwiftGodot/UDPServer/godotClassName":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/UDPServer\/godotClassName","title":"godotClassName","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"godotClassName"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot10StringNameC","text":"StringName"}],"url":"\/documentation\/swiftgodot\/udpserver\/godotclassname","kind":"symbol","abstract":[]},"doc://SwiftGodot/documentation/SwiftGodot/VariantRepresentable":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/VariantRepresentable","abstract":[{"type":"text","text":"Types that conform to VariantRepresentable can be stored directly in "},{"type":"codeVoice","code":"Variant"},{"type":"text","text":" "},{"type":"text","text":"with no conversion.  These include all of the Variant types from Godot (for"},{"text":" ","type":"text"},{"text":"example ","type":"text"},{"code":"GString","type":"codeVoice"},{"type":"text","text":", "},{"code":"Rect","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Plane","type":"codeVoice"},{"type":"text","text":"), Godot objects (those that subclass"},{"type":"text","text":" "},{"type":"text","text":"SwiftGodot.Object) as well as the built-in Swift types UInt8, Int64 and Double."}],"kind":"symbol","navigatorTitle":[{"text":"VariantRepresentable","kind":"identifier"}],"type":"topic","url":"\/documentation\/swiftgodot\/variantrepresentable","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"VariantRepresentable","kind":"identifier"}],"title":"VariantRepresentable","role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/PacketPeer/putVar(_:fullObjects:)":{"url":"\/documentation\/swiftgodot\/packetpeer\/putvar(_:fullobjects:)","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeer\/putVar(_:fullObjects:)","role":"symbol","title":"putVar(_:fullObjects:)","abstract":[{"type":"text","text":"Sends a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Variant"},{"type":"text","text":" as a packet. If "},{"type":"codeVoice","code":"fullObjects"},{"type":"text","text":" is "},{"code":"true","type":"codeVoice"},{"type":"text","text":", encoding objects is allowed (and can potentially include code)."}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"putVar"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Variant","preciseIdentifier":"s:10SwiftGodot7VariantC"},{"kind":"text","text":", "},{"text":"fullObjects","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"GodotError","preciseIdentifier":"s:10SwiftGodot0B5ErrorO","kind":"typeIdentifier"}],"type":"topic"},"doc://SwiftGodot/SH":{"type":"unresolvable","identifier":"doc:\/\/SwiftGodot\/SH","title":"Swift.Hashable"},"doc://SwiftGodot/s23CustomStringConvertibleP":{"type":"unresolvable","identifier":"doc:\/\/SwiftGodot\/s23CustomStringConvertibleP","title":"Swift.CustomStringConvertible"},"doc://SwiftGodot/SQ":{"type":"unresolvable","identifier":"doc:\/\/SwiftGodot\/SQ","title":"Swift.Equatable"},"doc://SwiftGodot/documentation/SwiftGodot/UDPServer/poll()":{"url":"\/documentation\/swiftgodot\/udpserver\/poll()","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/UDPServer\/poll()","role":"symbol","title":"poll()","abstract":[{"type":"text","text":"Call this method at regular intervals (e.g. inside "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Node\/_process(delta:)"},{"text":") to process new packets. And packet from known address\/port pair will be delivered to the appropriate ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeerUDP"},{"type":"text","text":", any packet received from an unknown address\/port pair will be added as a pending connection (see "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/UDPServer\/isConnectionAvailable()"},{"type":"text","text":", "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/UDPServer\/takeConnection()"},{"type":"text","text":"). The maximum number of pending connection is defined via "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/UDPServer\/maxPendingConnections"},{"text":".","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"poll"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","text":"GodotError","preciseIdentifier":"s:10SwiftGodot0B5ErrorO"}],"type":"topic"},"doc://SwiftGodot/documentation/SwiftGodot/Node/_process(delta:)":{"title":"_process(delta:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"_process","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"delta"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sd","kind":"typeIdentifier","text":"Double"},{"text":")","kind":"text"}],"role":"symbol","abstract":[{"type":"text","text":"Called during the processing step of the main loop. Processing happens at every frame and as fast as possible, so the "},{"type":"codeVoice","code":"delta"},{"type":"text","text":" time since the previous frame is not constant. "},{"type":"codeVoice","code":"delta"},{"text":" is in seconds.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Node\/_process(delta:)","url":"\/documentation\/swiftgodot\/node\/_process(delta:)"},"doc://SwiftGodot/documentation/SwiftGodot/UDPServer":{"abstract":[{"type":"text","text":"Helper class to implement a UDP server."}],"type":"topic","role":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/UDPServer","url":"\/documentation\/swiftgodot\/udpserver","kind":"symbol","navigatorTitle":[{"text":"UDPServer","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UDPServer"}],"title":"UDPServer"},"doc://SwiftGodot/documentation/SwiftGodot/VariantStorable":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/VariantStorable","abstract":[{"text":"Types that conform to VariantStorable can be stored in a Variant and can be extracted","type":"text"},{"type":"text","text":" "},{"text":"back out of a Variant.","type":"text"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"VariantStorable"}],"type":"topic","url":"\/documentation\/swiftgodot\/variantstorable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"VariantStorable"}],"title":"VariantStorable","role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/PacketPeerUDP/setDestAddress(host:port:)":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeerUDP\/setDestAddress(host:port:)","title":"setDestAddress(host:port:)","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"setDestAddress","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"host"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"text":"port","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot0B5ErrorO","kind":"typeIdentifier","text":"GodotError"}],"url":"\/documentation\/swiftgodot\/packetpeerudp\/setdestaddress(host:port:)","kind":"symbol","abstract":[{"type":"text","text":"Sets the destination address and port for sending packets and variables. A hostname will be resolved using DNS if needed."}]},"doc://SwiftGodot/documentation/SwiftGodot/UDPServer/isConnectionAvailable()":{"url":"\/documentation\/swiftgodot\/udpserver\/isconnectionavailable()","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/UDPServer\/isConnectionAvailable()","role":"symbol","title":"isConnectionAvailable()","abstract":[{"type":"text","text":"Returns "},{"type":"codeVoice","code":"true"},{"text":" if a packet with a new address\/port combination was received on the socket.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"isConnectionAvailable","kind":"identifier"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"type":"topic"},"doc://SwiftGodot/documentation/SwiftGodot/UDPServer/getLocalPort()":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/UDPServer\/getLocalPort()","title":"getLocalPort()","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"getLocalPort","kind":"identifier"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"}],"url":"\/documentation\/swiftgodot\/udpserver\/getlocalport()","kind":"symbol","abstract":[{"type":"text","text":"Returns the local port this server is listening to."}]},"doc://SwiftGodot/s12IdentifiableP":{"type":"unresolvable","title":"Swift.Identifiable","identifier":"doc:\/\/SwiftGodot\/s12IdentifiableP"},"doc://SwiftGodot/documentation/SwiftGodot/UDPServer/maxPendingConnections":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/UDPServer\/maxPendingConnections","title":"maxPendingConnections","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"maxPendingConnections"},{"text":": ","kind":"text"},{"text":"Int32","kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V"}],"url":"\/documentation\/swiftgodot\/udpserver\/maxpendingconnections","kind":"symbol","abstract":[{"type":"text","text":"Define the maximum number of pending connections, during "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/UDPServer\/poll()","isActive":true,"type":"reference"},{"type":"text","text":", any new pending connection exceeding that value will be automatically dropped. Setting this value to "},{"type":"codeVoice","code":"0"},{"text":" effectively prevents any new pending connection to be accepted (e.g. when all your players have connected).","type":"text"}]},"doc://SwiftGodot/documentation/SwiftGodot/UDPServer/stop()":{"url":"\/documentation\/swiftgodot\/udpserver\/stop()","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/UDPServer\/stop()","role":"symbol","title":"stop()","abstract":[{"text":"Stops the server, closing the UDP socket if open. Will close all connected ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeerUDP"},{"type":"text","text":" accepted via "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/UDPServer\/takeConnection()","isActive":true,"type":"reference"},{"type":"text","text":" (remote peers will not be notified)."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"stop"},{"text":"()","kind":"text"}],"type":"topic"},"doc://SwiftGodot/documentation/SwiftGodot/PacketPeer/putPacket(buffer:)":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeer\/putPacket(buffer:)","title":"putPacket(buffer:)","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"putPacket","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"buffer"},{"kind":"text","text":": "},{"text":"PackedByteArray","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot15PackedByteArrayC"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"GodotError","preciseIdentifier":"s:10SwiftGodot0B5ErrorO"}],"url":"\/documentation\/swiftgodot\/packetpeer\/putpacket(buffer:)","kind":"symbol","abstract":[{"type":"text","text":"Sends a raw packet."}]},"doc://SwiftGodot/documentation/SwiftGodot/UDPServer/takeConnection()":{"url":"\/documentation\/swiftgodot\/udpserver\/takeconnection()","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/UDPServer\/takeConnection()","role":"symbol","title":"takeConnection()","abstract":[{"type":"text","text":"Returns the first pending connection (connected to the appropriate address\/port). Will return "},{"code":"null","type":"codeVoice"},{"text":" if no new connection is available. See also ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/UDPServer\/isConnectionAvailable()"},{"type":"text","text":", "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeerUDP\/connectToHost(_:port:)","isActive":true,"type":"reference"},{"type":"text","text":"."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"takeConnection"},{"text":"() -> ","kind":"text"},{"text":"PacketPeerUDP","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot13PacketPeerUDPC"},{"text":"?","kind":"text"}],"type":"topic"},"doc://SwiftGodot/documentation/SwiftGodot/PacketPeerUDP/bind(port:bindAddress:recvBufSize:)":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeerUDP\/bind(port:bindAddress:recvBufSize:)","title":"bind(port:bindAddress:recvBufSize:)","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"bind"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"port"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V","text":"Int32"},{"kind":"text","text":", "},{"kind":"externalParam","text":"bindAddress"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"recvBufSize","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot0B5ErrorO","text":"GodotError"}],"url":"\/documentation\/swiftgodot\/packetpeerudp\/bind(port:bindaddress:recvbufsize:)","kind":"symbol","abstract":[{"type":"text","text":"Binds this "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeerUDP"},{"text":" to the specified ","type":"text"},{"type":"codeVoice","code":"port"},{"type":"text","text":" and "},{"type":"codeVoice","code":"bindAddress"},{"type":"text","text":" with a buffer size "},{"code":"recvBufSize","type":"codeVoice"},{"type":"text","text":", allowing it to receive incoming packets."}]},"doc://SwiftGodot/documentation/SwiftGodot/PacketPeerUDP":{"url":"\/documentation\/swiftgodot\/packetpeerudp","kind":"symbol","abstract":[{"type":"text","text":"UDP packet peer."}],"type":"topic","role":"symbol","navigatorTitle":[{"text":"PacketPeerUDP","kind":"identifier"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeerUDP","title":"PacketPeerUDP","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"PacketPeerUDP","kind":"identifier"}]}}}
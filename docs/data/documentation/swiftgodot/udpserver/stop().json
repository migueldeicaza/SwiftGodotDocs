{"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"url":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/UDPServer\/stop()","interfaceLanguage":"swift"},"kind":"symbol","metadata":{"roleHeading":"Instance Method","symbolKind":"method","role":"symbol","title":"stop()","externalID":"s:10SwiftGodot9UDPServerC4stopyyF","modules":[{"name":"SwiftGodot"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"stop"},{"kind":"text","text":"()"}]},"abstract":[{"text":"Stops the server, closing the UDP socket if open. Will close all connected ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeerUDP","type":"reference","isActive":true},{"type":"text","text":" accepted via "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/UDPServer\/takeConnection()","isActive":true},{"type":"text","text":" (remote peers will not be notified)."}],"sections":[],"hierarchy":{"paths":[["doc:\/\/SwiftGodot\/documentation\/SwiftGodot","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/UDPServer"]]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"stop","kind":"identifier"},{"kind":"text","text":"()"}],"platforms":["macOS"]}],"kind":"declarations"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftgodot\/udpserver\/stop()"]}],"references":{"doc://SwiftGodot/documentation/SwiftGodot/UDPServer/isConnectionAvailable()":{"url":"\/documentation\/swiftgodot\/udpserver\/isconnectionavailable()","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/UDPServer\/isConnectionAvailable()","role":"symbol","title":"isConnectionAvailable()","abstract":[{"type":"text","text":"Returns "},{"type":"codeVoice","code":"true"},{"text":" if a packet with a new address\/port combination was received on the socket.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"isConnectionAvailable","kind":"identifier"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"type":"topic"},"doc://SwiftGodot/documentation/SwiftGodot/UDPServer":{"abstract":[{"type":"text","text":"Helper class to implement a UDP server."}],"type":"topic","role":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/UDPServer","url":"\/documentation\/swiftgodot\/udpserver","kind":"symbol","navigatorTitle":[{"text":"UDPServer","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UDPServer"}],"title":"UDPServer"},"doc://SwiftGodot/documentation/SwiftGodot":{"kind":"symbol","url":"\/documentation\/swiftgodot","abstract":[{"type":"text","text":"Framework to write Godot Game Extensions using the Swift Programming Language."}],"role":"collection","title":"SwiftGodot","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot"},"doc://SwiftGodot/documentation/SwiftGodot/PacketPeerUDP":{"url":"\/documentation\/swiftgodot\/packetpeerudp","kind":"symbol","abstract":[{"type":"text","text":"UDP packet peer."}],"type":"topic","role":"symbol","navigatorTitle":[{"text":"PacketPeerUDP","kind":"identifier"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeerUDP","title":"PacketPeerUDP","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"PacketPeerUDP","kind":"identifier"}]},"doc://SwiftGodot/documentation/SwiftGodot/UDPServer/takeConnection()":{"url":"\/documentation\/swiftgodot\/udpserver\/takeconnection()","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/UDPServer\/takeConnection()","role":"symbol","title":"takeConnection()","abstract":[{"type":"text","text":"Returns the first pending connection (connected to the appropriate address\/port). Will return "},{"code":"null","type":"codeVoice"},{"text":" if no new connection is available. See also ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/UDPServer\/isConnectionAvailable()"},{"type":"text","text":", "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeerUDP\/connectToHost(_:port:)","isActive":true,"type":"reference"},{"type":"text","text":"."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"takeConnection"},{"text":"() -> ","kind":"text"},{"text":"PacketPeerUDP","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot13PacketPeerUDPC"},{"text":"?","kind":"text"}],"type":"topic"},"doc://SwiftGodot/documentation/SwiftGodot/UDPServer/stop()":{"url":"\/documentation\/swiftgodot\/udpserver\/stop()","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/UDPServer\/stop()","role":"symbol","title":"stop()","abstract":[{"text":"Stops the server, closing the UDP socket if open. Will close all connected ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeerUDP"},{"type":"text","text":" accepted via "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/UDPServer\/takeConnection()","isActive":true,"type":"reference"},{"type":"text","text":" (remote peers will not be notified)."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"stop"},{"text":"()","kind":"text"}],"type":"topic"},"doc://SwiftGodot/documentation/SwiftGodot/PacketPeerUDP/connectToHost(_:port:)":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeerUDP\/connectToHost(_:port:)","title":"connectToHost(_:port:)","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"connectToHost"},{"text":"(","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"port","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"},{"kind":"text","text":") -> "},{"text":"GodotError","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot0B5ErrorO"}],"url":"\/documentation\/swiftgodot\/packetpeerudp\/connecttohost(_:port:)","kind":"symbol","abstract":[{"type":"text","text":"Calling this method connects this UDP peer to the given "},{"type":"codeVoice","code":"host"},{"type":"text","text":"\/"},{"type":"codeVoice","code":"port"},{"type":"text","text":" pair. UDP is in reality connectionless, so this option only means that incoming packets from different addresses are automatically discarded, and that outgoing packets are always sent to the connected address (future calls to "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeerUDP\/setDestAddress(host:port:)"},{"type":"text","text":" are not allowed). This method does not send any data to the remote peer, to do that, use "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeer\/putVar(_:fullObjects:)","isActive":true,"type":"reference"},{"type":"text","text":" or "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeer\/putPacket(buffer:)","isActive":true},{"text":" as usual. See also ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/UDPServer","type":"reference"},{"type":"text","text":"."}]}}}
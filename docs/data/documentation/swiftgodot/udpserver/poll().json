{"hierarchy":{"paths":[["doc:\/\/SwiftGodot\/documentation\/SwiftGodot","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/UDPServer"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"kind":"symbol","variants":[{"paths":["\/documentation\/swiftgodot\/udpserver\/poll()"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"final"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"poll","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot0B5ErrorO","text":"GodotError","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GodotError"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"}],"metadata":{"roleHeading":"Instance Method","symbolKind":"method","title":"poll()","role":"symbol","externalID":"s:10SwiftGodot9UDPServerC4pollAA0B5ErrorOyF","modules":[{"name":"SwiftGodot"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"poll"},{"text":"() -> ","kind":"text"},{"text":"GodotError","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot0B5ErrorO"}]},"abstract":[{"type":"text","text":"Call this method at regular intervals (e.g. inside "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Node\/_process(delta:)","isActive":true,"type":"reference"},{"type":"text","text":") to process new packets. And packet from known address\/port pair will be delivered to the appropriate "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeerUDP"},{"text":", any packet received from an unknown address\/port pair will be added as a pending connection (see ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/UDPServer\/isConnectionAvailable()","isActive":true},{"type":"text","text":", "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/UDPServer\/takeConnection()","isActive":true,"type":"reference"},{"text":"). The maximum number of pending connection is defined via ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/UDPServer\/maxPendingConnections","type":"reference","isActive":true},{"text":".","type":"text"}],"identifier":{"url":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/UDPServer\/poll()","interfaceLanguage":"swift"},"references":{"doc://SwiftGodot/documentation/SwiftGodot/UDPServer/maxPendingConnections":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/UDPServer\/maxPendingConnections","title":"maxPendingConnections","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"maxPendingConnections"},{"text":": ","kind":"text"},{"text":"Int32","kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V"}],"url":"\/documentation\/swiftgodot\/udpserver\/maxpendingconnections","kind":"symbol","abstract":[{"type":"text","text":"Define the maximum number of pending connections, during "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/UDPServer\/poll()","isActive":true,"type":"reference"},{"type":"text","text":", any new pending connection exceeding that value will be automatically dropped. Setting this value to "},{"type":"codeVoice","code":"0"},{"text":" effectively prevents any new pending connection to be accepted (e.g. when all your players have connected).","type":"text"}]},"doc://SwiftGodot/documentation/SwiftGodot/UDPServer/poll()":{"url":"\/documentation\/swiftgodot\/udpserver\/poll()","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/UDPServer\/poll()","role":"symbol","title":"poll()","abstract":[{"type":"text","text":"Call this method at regular intervals (e.g. inside "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Node\/_process(delta:)"},{"text":") to process new packets. And packet from known address\/port pair will be delivered to the appropriate ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeerUDP"},{"type":"text","text":", any packet received from an unknown address\/port pair will be added as a pending connection (see "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/UDPServer\/isConnectionAvailable()"},{"type":"text","text":", "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/UDPServer\/takeConnection()"},{"type":"text","text":"). The maximum number of pending connection is defined via "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/UDPServer\/maxPendingConnections"},{"text":".","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"poll"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","text":"GodotError","preciseIdentifier":"s:10SwiftGodot0B5ErrorO"}],"type":"topic"},"doc://SwiftGodot/documentation/SwiftGodot/UDPServer/takeConnection()":{"url":"\/documentation\/swiftgodot\/udpserver\/takeconnection()","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/UDPServer\/takeConnection()","role":"symbol","title":"takeConnection()","abstract":[{"type":"text","text":"Returns the first pending connection (connected to the appropriate address\/port). Will return "},{"code":"null","type":"codeVoice"},{"text":" if no new connection is available. See also ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/UDPServer\/isConnectionAvailable()"},{"type":"text","text":", "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeerUDP\/connectToHost(_:port:)","isActive":true,"type":"reference"},{"type":"text","text":"."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"takeConnection"},{"text":"() -> ","kind":"text"},{"text":"PacketPeerUDP","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot13PacketPeerUDPC"},{"text":"?","kind":"text"}],"type":"topic"},"doc://SwiftGodot/documentation/SwiftGodot/PacketPeerUDP":{"url":"\/documentation\/swiftgodot\/packetpeerudp","kind":"symbol","abstract":[{"type":"text","text":"UDP packet peer."}],"type":"topic","role":"symbol","navigatorTitle":[{"text":"PacketPeerUDP","kind":"identifier"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeerUDP","title":"PacketPeerUDP","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"PacketPeerUDP","kind":"identifier"}]},"doc://SwiftGodot/documentation/SwiftGodot/PacketPeerUDP/connectToHost(_:port:)":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeerUDP\/connectToHost(_:port:)","title":"connectToHost(_:port:)","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"connectToHost"},{"text":"(","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"port","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"},{"kind":"text","text":") -> "},{"text":"GodotError","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot0B5ErrorO"}],"url":"\/documentation\/swiftgodot\/packetpeerudp\/connecttohost(_:port:)","kind":"symbol","abstract":[{"type":"text","text":"Calling this method connects this UDP peer to the given "},{"type":"codeVoice","code":"host"},{"type":"text","text":"\/"},{"type":"codeVoice","code":"port"},{"type":"text","text":" pair. UDP is in reality connectionless, so this option only means that incoming packets from different addresses are automatically discarded, and that outgoing packets are always sent to the connected address (future calls to "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeerUDP\/setDestAddress(host:port:)"},{"type":"text","text":" are not allowed). This method does not send any data to the remote peer, to do that, use "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeer\/putVar(_:fullObjects:)","isActive":true,"type":"reference"},{"type":"text","text":" or "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeer\/putPacket(buffer:)","isActive":true},{"text":" as usual. See also ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/UDPServer","type":"reference"},{"type":"text","text":"."}]},"doc://SwiftGodot/documentation/SwiftGodot/Node/_process(delta:)":{"title":"_process(delta:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"_process","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"delta"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sd","kind":"typeIdentifier","text":"Double"},{"text":")","kind":"text"}],"role":"symbol","abstract":[{"type":"text","text":"Called during the processing step of the main loop. Processing happens at every frame and as fast as possible, so the "},{"type":"codeVoice","code":"delta"},{"type":"text","text":" time since the previous frame is not constant. "},{"type":"codeVoice","code":"delta"},{"text":" is in seconds.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Node\/_process(delta:)","url":"\/documentation\/swiftgodot\/node\/_process(delta:)"},"doc://SwiftGodot/documentation/SwiftGodot/UDPServer/isConnectionAvailable()":{"url":"\/documentation\/swiftgodot\/udpserver\/isconnectionavailable()","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/UDPServer\/isConnectionAvailable()","role":"symbol","title":"isConnectionAvailable()","abstract":[{"type":"text","text":"Returns "},{"type":"codeVoice","code":"true"},{"text":" if a packet with a new address\/port combination was received on the socket.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"isConnectionAvailable","kind":"identifier"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"type":"topic"},"doc://SwiftGodot/documentation/SwiftGodot":{"kind":"symbol","url":"\/documentation\/swiftgodot","abstract":[{"type":"text","text":"Framework to write Godot Game Extensions using the Swift Programming Language."}],"role":"collection","title":"SwiftGodot","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot"},"doc://SwiftGodot/documentation/SwiftGodot/UDPServer":{"abstract":[{"type":"text","text":"Helper class to implement a UDP server."}],"type":"topic","role":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/UDPServer","url":"\/documentation\/swiftgodot\/udpserver","kind":"symbol","navigatorTitle":[{"text":"UDPServer","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UDPServer"}],"title":"UDPServer"},"doc://SwiftGodot/documentation/SwiftGodot/GodotError":{"title":"GodotError","url":"\/documentation\/swiftgodot\/godoterror","abstract":[],"type":"topic","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GodotError","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"GodotError","kind":"identifier"}],"navigatorTitle":[{"text":"GodotError","kind":"identifier"}]}}}
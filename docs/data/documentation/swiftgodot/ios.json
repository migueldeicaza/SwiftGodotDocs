{"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/iOS"},"hierarchy":{"paths":[["doc:\/\/SwiftGodot\/documentation\/SwiftGodot"]]},"metadata":{"role":"article","roleHeading":"Article","modules":[{"name":"SwiftGodot"}],"title":"iOS Platform Integration"},"kind":"article","abstract":[{"text":"This page contains some examples of code that might be useful to combine Godot","type":"text"},{"type":"text","text":" "},{"text":"with iOS APIs.","type":"text"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"kind":"content","content":[{"type":"heading","level":2,"anchor":"Converting-a-Viewport-into-an-Image","text":"Converting a Viewport into an Image"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you happen to have a viewport, you can create a screenshot of it like this:"}]},{"type":"codeListing","code":["func getImage (from: SceneTree) -> SwiftGodot.Image? {","\tfrom.root?.getViewport()?.getTexture()?.getImage()","}"],"syntax":"swift"},{"type":"heading","text":"Converting a SwiftGodot.image into a UIImage","anchor":"Converting-a-SwiftGodotimage-into-a-UIImage","level":2},{"inlineContent":[{"type":"text","text":"This function will attempt to convert a SwiftGodot image into a UIImage:"}],"type":"paragraph"},{"syntax":"swift","code":["extension SwiftGodot.Image {","    func toUIImage() -> UIImage? {","        let width = Int(getWidth())","        let height = Int(getHeight())","        ","        \/\/ Ensure the image format is compatible (RGBA8)","        if getFormat() != Image.Format.rgba8 {","            convert(format: Image.Format.rgba8)","        }","        ","        guard let pixelData = getData().asData() else { return nil }","        ","        let colorSpace = CGColorSpaceCreateDeviceRGB()","        let bitmapInfo = CGBitmapInfo(rawValue: CGImageAlphaInfo.premultipliedLast.rawValue)","        ","        guard let provider = CGDataProvider(data: pixelData as CFData) else { return nil }","        ","        guard let cgImage = CGImage(","            width: width,","            height: height,","            bitsPerComponent: 8,","            bitsPerPixel: 32,","            bytesPerRow: width * 4,","            space: colorSpace,","            bitmapInfo: bitmapInfo,","            provider: provider,","            decode: nil,","            shouldInterpolate: false,","            intent: .defaultIntent","        ) else { return nil }","        ","        return UIImage(cgImage: cgImage)","    }","}"],"type":"codeListing"},{"level":2,"type":"heading","anchor":"Converting-a-SwiftGodotColor-into-a-SwiftUIColor","text":"Converting a SwiftGodot.Color into a SwiftUI.Color"},{"type":"codeListing","syntax":"swift","code":["extension SwiftGodot.Color {","    \/\/\/ Creates a SwiftUI.Color from a SwiftGodot.Color","    public func asSwiftUI() -> SwiftUI.Color {","        SwiftUI.Color(","            red: Double(red),","            green: Double(green),","            blue: Double(blue),","            opacity: Double(alpha)","        )","    }","}"]},{"text":"Converting PackedByteArray into a Swift Data","type":"heading","anchor":"Converting-PackedByteArray-into-a-Swift-Data","level":3},{"type":"codeListing","code":["extension PackedByteArray {","    public func asData() -> Data? {","        return withUnsafeAccessToData { ptr, count in Data (bytes: ptr, count: count) }","    }","}"],"syntax":"swift"},{"type":"heading","anchor":"Making-GodotError-conform-to-LocalizedError","text":"Making GodotError conform to LocalizedError","level":3},{"inlineContent":[{"type":"text","text":"This is convenient if you want to easily bubble up GodotError messages in"},{"type":"text","text":" "},{"text":"SwiftUI:","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["","\/\/ The @retroactive is to avoid the warning on LocalizedError, which is not on SwiftGodot,","\/\/ because SwiftGodot avoids taking a dependency on Foundation","extension GodotError: @retroactive LocalizedError {","    public var failureReason: String? {","        return localizedDescription","    }","    public var errorDescription: String? {","        return localizedDescription","    }","}"],"type":"codeListing"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftgodot\/ios"]}],"references":{"doc://SwiftGodot/documentation/SwiftGodot":{"kind":"symbol","url":"\/documentation\/swiftgodot","abstract":[{"type":"text","text":"Framework to write Godot Game Extensions using the Swift Programming Language."}],"role":"collection","title":"SwiftGodot","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot"}}}
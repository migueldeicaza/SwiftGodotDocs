{"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/ClassInfo\/registerMethod(name:flags:returnValue:arguments:function:)"},"hierarchy":{"paths":[["doc:\/\/SwiftGodot\/documentation\/SwiftGodot","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/ClassInfo"]]},"metadata":{"role":"symbol","externalID":"s:10SwiftGodot9ClassInfoC14registerMethod4name5flags11returnValue9arguments8functionyAA10StringNameC_AA0F5FlagsVAA04PropD0VSgSayAOGAA7VariantCSgAA9ArgumentsVcxctF","symbolKind":"method","roleHeading":"Instance Method","modules":[{"name":"SwiftGodot"}],"title":"registerMethod(name:flags:returnValue:arguments:function:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"registerMethod","kind":"identifier"},{"text":"(","kind":"text"},{"text":"name","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StringName","preciseIdentifier":"s:10SwiftGodot10StringNameC"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"flags"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot11MethodFlagsV","text":"MethodFlags"},{"kind":"text","text":", "},{"kind":"externalParam","text":"returnValue"},{"text":": ","kind":"text"},{"text":"PropInfo","preciseIdentifier":"s:10SwiftGodot8PropInfoV","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"arguments"},{"text":": [","kind":"text"},{"text":"PropInfo","preciseIdentifier":"s:10SwiftGodot8PropInfoV","kind":"typeIdentifier"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"function"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":") -> (","kind":"text"},{"text":"borrowing","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot9ArgumentsV","text":"Arguments","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Variant","preciseIdentifier":"s:10SwiftGodot7VariantC","kind":"typeIdentifier"},{"kind":"text","text":"?)"}]},"kind":"symbol","abstract":[{"text":"Exposes a new method to the Godot world with the specific name","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftgodot\/classinfo\/registermethod(name:flags:returnvalue:arguments:function:)"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"registerMethod"},{"kind":"text","text":"("},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"text":"StringName","kind":"typeIdentifier","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/StringName","preciseIdentifier":"s:10SwiftGodot10StringNameC"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"flags"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"MethodFlags","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/MethodFlags","preciseIdentifier":"s:10SwiftGodot11MethodFlagsV"},{"text":", ","kind":"text"},{"text":"returnValue","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot8PropInfoV","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PropInfo","text":"PropInfo","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"arguments"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","text":"PropInfo","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PropInfo","preciseIdentifier":"s:10SwiftGodot8PropInfoV"},{"text":"], ","kind":"text"},{"kind":"externalParam","text":"function"},{"kind":"text","text":": "},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":") -> ("},{"kind":"keyword","text":"borrowing"},{"kind":"text","text":" "},{"preciseIdentifier":"s:10SwiftGodot9ArgumentsV","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Arguments","kind":"typeIdentifier","text":"Arguments"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot7VariantC","kind":"typeIdentifier","text":"Variant","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Variant"},{"text":"?)","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","type":"heading","text":"Discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"This example shows how to register a method that takes an int parameter:"}]},{"syntax":"swift","code":["class MyNode: Node {","  func initClass() -> Bool {","    let classInfo = ClassInfo<SpinningCube>(name: \"MyNode\")","    let printArgs = [","      PropInfo(","        propertyType: .string,","        propertyName: StringName (\"numberToCheck\"),","        className: \"MyNode\",","        hint: .flags,","        hintStr: \"Number of baddies to check\",","        usage: .default)","    ]","    classInfo.registerMethod (name: \"checkBaddies\", flags: .default, returnValue: .nil, arguments: [], function: MyNode.checkBaddies)","    return true","  }","","  required init () {","    super.init ()","    let _ = initClass ()","  }","","  func checkBaddies (args: borrowing Arguments) -> Variant? {","    \/\/ We are getting one integer if called from Godot of type Int","    \/\/ validate in case you called this directly from Swift","    guard args.count > 0 else {","      print (\"MyNode: Not enough parameters to checkBaddies: \\(args.count)\")","      return nil","    }","","    guard let numberToCheck = Int (args [0]) else {","      print (\"MyNode: No string in vararg\")","      return nil","    }","    \/\/ Use `numberToCheck` here","  }","}"],"type":"codeListing"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Parameters;","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"name: Name to surface the method as"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"flags: the flags that describe the method in detail","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"returnValue: if nil, this method does not return a value, otherwise, the descritption of the return value as a PropInfo"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"arguments: an array describing the parameters that this method takes"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"function: this is a curried function that will be registered.   It will be invoked on the instance of your object"}],"type":"paragraph"}]}]}]}],"references":{"doc://SwiftGodot/documentation/SwiftGodot/Variant":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Variant","navigatorTitle":[{"kind":"identifier","text":"Variant"}],"abstract":[{"text":"Variant objects box various Godot Objects, you create them with one of the","type":"text"},{"type":"text","text":" "},{"text":"constructors, and you can retrieve the contents using the various extension","type":"text"},{"type":"text","text":" "},{"type":"text","text":"constructors that are declared on the various types that are wrapped."}],"kind":"symbol","role":"symbol","url":"\/documentation\/swiftgodot\/variant","title":"Variant","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Variant","kind":"identifier"}]},"doc://SwiftGodot/documentation/SwiftGodot/PropInfo":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"PropInfo"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PropInfo","title":"PropInfo","navigatorTitle":[{"text":"PropInfo","kind":"identifier"}],"kind":"symbol","role":"symbol","url":"\/documentation\/swiftgodot\/propinfo","type":"topic","abstract":[{"type":"text","text":"PropInfo structures describe arguments to signals, and methods as well as return values from methods."}]},"doc://SwiftGodot/documentation/SwiftGodot":{"kind":"symbol","url":"\/documentation\/swiftgodot","abstract":[{"type":"text","text":"Framework to write Godot Game Extensions using the Swift Programming Language."}],"role":"collection","title":"SwiftGodot","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot"},"doc://SwiftGodot/documentation/SwiftGodot/StringName":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/StringName","type":"topic","url":"\/documentation\/swiftgodot\/stringname","title":"StringName","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"StringName","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"StringName"}],"abstract":[{"text":"A built-in type for unique strings.","type":"text"}]},"doc://SwiftGodot/documentation/SwiftGodot/MethodFlags":{"url":"\/documentation\/swiftgodot\/methodflags","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MethodFlags","kind":"identifier"}],"title":"MethodFlags","type":"topic","abstract":[],"role":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/MethodFlags","navigatorTitle":[{"text":"MethodFlags","kind":"identifier"}]},"doc://SwiftGodot/documentation/SwiftGodot/ClassInfo/registerMethod(name:flags:returnValue:arguments:function:)":{"role":"symbol","title":"registerMethod(name:flags:returnValue:arguments:function:)","type":"topic","url":"\/documentation\/swiftgodot\/classinfo\/registermethod(name:flags:returnvalue:arguments:function:)","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/ClassInfo\/registerMethod(name:flags:returnValue:arguments:function:)","abstract":[{"type":"text","text":"Exposes a new method to the Godot world with the specific name"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"registerMethod"},{"kind":"text","text":"("},{"text":"name","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot10StringNameC","text":"StringName"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"flags"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10SwiftGodot11MethodFlagsV","kind":"typeIdentifier","text":"MethodFlags"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"returnValue"},{"kind":"text","text":": "},{"text":"PropInfo","preciseIdentifier":"s:10SwiftGodot8PropInfoV","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"text":"arguments","kind":"externalParam"},{"kind":"text","text":": ["},{"text":"PropInfo","preciseIdentifier":"s:10SwiftGodot8PropInfoV","kind":"typeIdentifier"},{"kind":"text","text":"], "},{"text":"function","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":") -> (","kind":"text"},{"kind":"keyword","text":"borrowing"},{"kind":"text","text":" "},{"text":"Arguments","preciseIdentifier":"s:10SwiftGodot9ArgumentsV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot7VariantC","text":"Variant"},{"kind":"text","text":"?)"}]},"doc://SwiftGodot/documentation/SwiftGodot/ClassInfo":{"abstract":[{"type":"text","text":"Provides support to expose Swift methods and signals to the Godot runtime, making it callable"},{"text":" ","type":"text"},{"type":"text","text":"from its runtime and scripting language."}],"title":"ClassInfo","role":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/ClassInfo","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ClassInfo","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"ClassInfo","kind":"identifier"}],"url":"\/documentation\/swiftgodot\/classinfo","kind":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/Arguments":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Arguments","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Arguments","kind":"identifier"}],"type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Arguments"}],"abstract":[{"type":"text","text":"A lightweight non-copyable storage for arguments marshalled to implementations where a sequence of "},{"type":"codeVoice","code":"Variant"},{"type":"text","text":"s is expected."},{"text":" ","type":"text"},{"type":"text","text":"If you need a copy of "},{"code":"Variant","type":"codeVoice"},{"text":"s inside, you can construct an array using ","type":"text"},{"type":"codeVoice","code":"Array.init(_ args: borrowing Arguments)"},{"text":" ","type":"text"},{"type":"text","text":"Elements can be accessed using subscript operator."}],"url":"\/documentation\/swiftgodot\/arguments","title":"Arguments","kind":"symbol"}}}
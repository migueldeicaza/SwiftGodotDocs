{"sections":[],"metadata":{"navigatorTitle":[{"text":"LightProjectorFilter","kind":"identifier"}],"title":"RenderingServer.LightProjectorFilter","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"LightProjectorFilter","kind":"identifier"}],"roleHeading":"Enumeration","role":"symbol","externalID":"s:10SwiftGodot15RenderingServerC20LightProjectorFilterO","modules":[{"name":"SwiftGodot"}],"symbolKind":"enum"},"hierarchy":{"paths":[["doc:\/\/SwiftGodot\/documentation\/SwiftGodot","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/RenderingServer"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/RenderingServer\/LightProjectorFilter"},"topicSections":[{"generated":true,"identifiers":["doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/RenderingServer\/LightProjectorFilter\/linear","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/RenderingServer\/LightProjectorFilter\/linearMipmaps","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/RenderingServer\/LightProjectorFilter\/linearMipmapsAnisotropic","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/RenderingServer\/LightProjectorFilter\/nearest","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/RenderingServer\/LightProjectorFilter\/nearestMipmaps","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/RenderingServer\/LightProjectorFilter\/nearestMipmapsAnisotropic"],"anchor":"Enumeration-Cases","title":"Enumeration Cases"},{"generated":true,"title":"Initializers","identifiers":["doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/RenderingServer\/LightProjectorFilter\/init(rawValue:)"],"anchor":"Initializers"},{"title":"Instance Properties","generated":true,"identifiers":["doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/RenderingServer\/LightProjectorFilter\/debugDescription"],"anchor":"Instance-Properties"},{"title":"Default Implementations","identifiers":["doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/RenderingServer\/LightProjectorFilter\/Equatable-Implementations","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/RenderingServer\/LightProjectorFilter\/RawRepresentable-Implementations"],"generated":true,"anchor":"Default-Implementations"}],"relationshipsSections":[{"identifiers":["doc:\/\/SwiftGodot\/s12CaseIterableP","doc:\/\/SwiftGodot\/s28CustomDebugStringConvertibleP","doc:\/\/SwiftGodot\/SQ","doc:\/\/SwiftGodot\/SH","doc:\/\/SwiftGodot\/SY"],"title":"Conforms To","type":"conformsTo","kind":"relationships"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"LightProjectorFilter"}]}]}],"variants":[{"paths":["\/documentation\/swiftgodot\/renderingserver\/lightprojectorfilter"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","references":{"doc://SwiftGodot/documentation/SwiftGodot/RenderingServer/LightProjectorFilter/linearMipmaps":{"kind":"symbol","role":"symbol","abstract":[{"text":"Linear filter for light projectors (use for non-pixel art light projectors). Isotropic mipmaps are used for rendering, which means light projectors at a distance will look smooth but blurry. This has roughly the same performance cost as not using mipmaps.","type":"text"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/RenderingServer\/LightProjectorFilter\/linearMipmaps","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"linearMipmaps"}],"title":"RenderingServer.LightProjectorFilter.linearMipmaps","type":"topic","url":"\/documentation\/swiftgodot\/renderingserver\/lightprojectorfilter\/linearmipmaps"},"doc://SwiftGodot/documentation/SwiftGodot/RenderingServer/LightProjectorFilter/nearestMipmaps":{"url":"\/documentation\/swiftgodot\/renderingserver\/lightprojectorfilter\/nearestmipmaps","type":"topic","kind":"symbol","role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"text":"nearestMipmaps","kind":"identifier"}],"title":"RenderingServer.LightProjectorFilter.nearestMipmaps","abstract":[{"text":"Nearest-neighbor filter for light projectors (use for pixel art light projectors). Isotropic mipmaps are used for rendering, which means light projectors at a distance will look smooth but blurry. This has roughly the same performance cost as not using mipmaps.","type":"text"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/RenderingServer\/LightProjectorFilter\/nearestMipmaps"},"doc://SwiftGodot/s28CustomDebugStringConvertibleP":{"type":"unresolvable","title":"Swift.CustomDebugStringConvertible","identifier":"doc:\/\/SwiftGodot\/s28CustomDebugStringConvertibleP"},"doc://SwiftGodot/documentation/SwiftGodot/RenderingServer/LightProjectorFilter/linearMipmapsAnisotropic":{"fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"linearMipmapsAnisotropic"}],"title":"RenderingServer.LightProjectorFilter.linearMipmapsAnisotropic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/RenderingServer\/LightProjectorFilter\/linearMipmapsAnisotropic","role":"symbol","kind":"symbol","url":"\/documentation\/swiftgodot\/renderingserver\/lightprojectorfilter\/linearmipmapsanisotropic","abstract":[{"type":"text","text":"Linear filter for light projectors (use for non-pixel art light projectors). Anisotropic mipmaps are used for rendering, which means light projectors at a distance will look smooth and sharp when viewed from oblique angles. This looks better compared to isotropic mipmaps, but is slower. The level of anisotropic filtering is defined by "},{"type":"codeVoice","code":"ProjectSettings\/rendering\/textures\/defaultFilters\/anisotropicFilteringLevel"},{"type":"text","text":"."}],"type":"topic"},"doc://SwiftGodot/SQ":{"type":"unresolvable","title":"Swift.Equatable","identifier":"doc:\/\/SwiftGodot\/SQ"},"doc://SwiftGodot/documentation/SwiftGodot/RenderingServer/LightProjectorFilter/RawRepresentable-Implementations":{"abstract":[],"title":"RawRepresentable Implementations","role":"collectionGroup","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/RenderingServer\/LightProjectorFilter\/RawRepresentable-Implementations","kind":"article","url":"\/documentation\/swiftgodot\/renderingserver\/lightprojectorfilter\/rawrepresentable-implementations"},"doc://SwiftGodot/documentation/SwiftGodot/RenderingServer/LightProjectorFilter/debugDescription":{"kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"A textual representation of this instance, suitable for debugging"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/RenderingServer\/LightProjectorFilter\/debugDescription","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"debugDescription","kind":"identifier"},{"kind":"text","text":": "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"title":"debugDescription","type":"topic","url":"\/documentation\/swiftgodot\/renderingserver\/lightprojectorfilter\/debugdescription"},"doc://SwiftGodot/SH":{"type":"unresolvable","title":"Swift.Hashable","identifier":"doc:\/\/SwiftGodot\/SH"},"doc://SwiftGodot/documentation/SwiftGodot":{"kind":"symbol","url":"\/documentation\/swiftgodot","abstract":[{"type":"text","text":"Framework to write Godot Game Extensions using the Swift Programming Language."}],"role":"collection","title":"SwiftGodot","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot"},"doc://SwiftGodot/documentation/SwiftGodot/RenderingServer/LightProjectorFilter/Equatable-Implementations":{"kind":"article","role":"collectionGroup","abstract":[],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/RenderingServer\/LightProjectorFilter\/Equatable-Implementations","title":"Equatable Implementations","type":"topic","url":"\/documentation\/swiftgodot\/renderingserver\/lightprojectorfilter\/equatable-implementations"},"doc://SwiftGodot/documentation/SwiftGodot/RenderingServer/LightProjectorFilter":{"kind":"symbol","title":"RenderingServer.LightProjectorFilter","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LightProjectorFilter","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"LightProjectorFilter","kind":"identifier"}],"url":"\/documentation\/swiftgodot\/renderingserver\/lightprojectorfilter","abstract":[],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/RenderingServer\/LightProjectorFilter"},"doc://SwiftGodot/s12CaseIterableP":{"type":"unresolvable","title":"Swift.CaseIterable","identifier":"doc:\/\/SwiftGodot\/s12CaseIterableP"},"doc://SwiftGodot/SY":{"type":"unresolvable","title":"Swift.RawRepresentable","identifier":"doc:\/\/SwiftGodot\/SY"},"doc://SwiftGodot/documentation/SwiftGodot/RenderingServer":{"abstract":[{"text":"Server for anything visible.","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RenderingServer","kind":"identifier"}],"url":"\/documentation\/swiftgodot\/renderingserver","role":"symbol","type":"topic","navigatorTitle":[{"text":"RenderingServer","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/RenderingServer","title":"RenderingServer"},"doc://SwiftGodot/documentation/SwiftGodot/RenderingServer/LightProjectorFilter/nearest":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/RenderingServer\/LightProjectorFilter\/nearest","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"nearest","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/swiftgodot\/renderingserver\/lightprojectorfilter\/nearest","abstract":[{"text":"Nearest-neighbor filter for light projectors (use for pixel art light projectors). No mipmaps are used for rendering, which means light projectors at a distance will look sharp but grainy. This has roughly the same performance cost as using mipmaps.","type":"text"}],"role":"symbol","title":"RenderingServer.LightProjectorFilter.nearest","type":"topic"},"doc://SwiftGodot/documentation/SwiftGodot/RenderingServer/LightProjectorFilter/init(rawValue:)":{"abstract":[],"title":"init(rawValue:)","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/RenderingServer\/LightProjectorFilter\/init(rawValue:)","url":"\/documentation\/swiftgodot\/renderingserver\/lightprojectorfilter\/init(rawvalue:)","type":"topic","kind":"symbol","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"?("},{"text":"rawValue","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Int64","preciseIdentifier":"s:s5Int64V"},{"kind":"text","text":")"}]},"doc://SwiftGodot/documentation/SwiftGodot/RenderingServer/LightProjectorFilter/nearestMipmapsAnisotropic":{"abstract":[{"text":"Nearest-neighbor filter for light projectors (use for pixel art light projectors). Anisotropic mipmaps are used for rendering, which means light projectors at a distance will look smooth and sharp when viewed from oblique angles. This looks better compared to isotropic mipmaps, but is slower. The level of anisotropic filtering is defined by ","type":"text"},{"code":"ProjectSettings\/rendering\/textures\/defaultFilters\/anisotropicFilteringLevel","type":"codeVoice"},{"type":"text","text":"."}],"url":"\/documentation\/swiftgodot\/renderingserver\/lightprojectorfilter\/nearestmipmapsanisotropic","title":"RenderingServer.LightProjectorFilter.nearestMipmapsAnisotropic","type":"topic","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"nearestMipmapsAnisotropic"}],"kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/RenderingServer\/LightProjectorFilter\/nearestMipmapsAnisotropic","role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/RenderingServer/LightProjectorFilter/linear":{"kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Linear filter for light projectors (use for non-pixel art light projectors). No mipmaps are used for rendering, which means light projectors at a distance will look smooth but blurry. This has roughly the same performance cost as using mipmaps."}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/RenderingServer\/LightProjectorFilter\/linear","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"linear","kind":"identifier"}],"title":"RenderingServer.LightProjectorFilter.linear","type":"topic","url":"\/documentation\/swiftgodot\/renderingserver\/lightprojectorfilter\/linear"}}}
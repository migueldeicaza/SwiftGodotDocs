{"schemaVersion":{"patch":0,"major":0,"minor":3},"relationshipsSections":[{"identifiers":["doc:\/\/SwiftGodot\/s12CaseIterableP","doc:\/\/SwiftGodot\/s28CustomDebugStringConvertibleP","doc:\/\/SwiftGodot\/SQ","doc:\/\/SwiftGodot\/SH","doc:\/\/SwiftGodot\/SY"],"title":"Conforms To","type":"conformsTo","kind":"relationships"}],"metadata":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DecalFilter","kind":"identifier"}],"roleHeading":"Enumeration","role":"symbol","externalID":"s:10SwiftGodot15RenderingServerC11DecalFilterO","navigatorTitle":[{"kind":"identifier","text":"DecalFilter"}],"modules":[{"name":"SwiftGodot"}],"title":"RenderingServer.DecalFilter","symbolKind":"enum"},"hierarchy":{"paths":[["doc:\/\/SwiftGodot\/documentation\/SwiftGodot","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/RenderingServer"]]},"sections":[],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DecalFilter"}]}],"kind":"declarations"}],"variants":[{"paths":["\/documentation\/swiftgodot\/renderingserver\/decalfilter"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/RenderingServer\/DecalFilter"},"topicSections":[{"anchor":"Enumeration-Cases","identifiers":["doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/RenderingServer\/DecalFilter\/linear","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/RenderingServer\/DecalFilter\/linearMipmaps","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/RenderingServer\/DecalFilter\/linearMipmapsAnisotropic","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/RenderingServer\/DecalFilter\/nearest","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/RenderingServer\/DecalFilter\/nearestMipmaps","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/RenderingServer\/DecalFilter\/nearestMipmapsAnisotropic"],"title":"Enumeration Cases","generated":true},{"title":"Initializers","anchor":"Initializers","generated":true,"identifiers":["doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/RenderingServer\/DecalFilter\/init(rawValue:)"]},{"identifiers":["doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/RenderingServer\/DecalFilter\/debugDescription"],"anchor":"Instance-Properties","generated":true,"title":"Instance Properties"},{"identifiers":["doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/RenderingServer\/DecalFilter\/Equatable-Implementations","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/RenderingServer\/DecalFilter\/RawRepresentable-Implementations"],"generated":true,"title":"Default Implementations","anchor":"Default-Implementations"}],"references":{"doc://SwiftGodot/documentation/SwiftGodot/RenderingServer":{"abstract":[{"text":"Server for anything visible.","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RenderingServer","kind":"identifier"}],"url":"\/documentation\/swiftgodot\/renderingserver","role":"symbol","type":"topic","navigatorTitle":[{"text":"RenderingServer","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/RenderingServer","title":"RenderingServer"},"doc://SwiftGodot/SH":{"identifier":"doc:\/\/SwiftGodot\/SH","type":"unresolvable","title":"Swift.Hashable"},"doc://SwiftGodot/SY":{"identifier":"doc:\/\/SwiftGodot\/SY","type":"unresolvable","title":"Swift.RawRepresentable"},"doc://SwiftGodot/documentation/SwiftGodot/RenderingServer/DecalFilter/linearMipmapsAnisotropic":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/RenderingServer\/DecalFilter\/linearMipmapsAnisotropic","type":"topic","abstract":[{"type":"text","text":"Linear filter for decals (use for non-pixel art decals). Anisotropic mipmaps are used for rendering, which means decals at a distance will look smooth and sharp when viewed from oblique angles. This looks better compared to isotropic mipmaps, but is slower. The level of anisotropic filtering is defined by "},{"code":"ProjectSettings\/rendering\/textures\/defaultFilters\/anisotropicFilteringLevel","type":"codeVoice"},{"type":"text","text":"."}],"title":"RenderingServer.DecalFilter.linearMipmapsAnisotropic","kind":"symbol","url":"\/documentation\/swiftgodot\/renderingserver\/decalfilter\/linearmipmapsanisotropic","role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"text":"linearMipmapsAnisotropic","kind":"identifier"}]},"doc://SwiftGodot/documentation/SwiftGodot/RenderingServer/DecalFilter/init(rawValue:)":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/RenderingServer\/DecalFilter\/init(rawValue:)","abstract":[],"type":"topic","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"?("},{"text":"rawValue","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s5Int64V","kind":"typeIdentifier","text":"Int64"},{"kind":"text","text":")"}],"title":"init(rawValue:)","url":"\/documentation\/swiftgodot\/renderingserver\/decalfilter\/init(rawvalue:)","kind":"symbol"},"doc://SwiftGodot/s12CaseIterableP":{"identifier":"doc:\/\/SwiftGodot\/s12CaseIterableP","type":"unresolvable","title":"Swift.CaseIterable"},"doc://SwiftGodot/documentation/SwiftGodot/RenderingServer/DecalFilter/linear":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/RenderingServer\/DecalFilter\/linear","abstract":[{"type":"text","text":"Linear filter for decals (use for non-pixel art decals). No mipmaps are used for rendering, which means decals at a distance will look smooth but blurry. This has roughly the same performance cost as using mipmaps."}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"linear","kind":"identifier"}],"title":"RenderingServer.DecalFilter.linear","url":"\/documentation\/swiftgodot\/renderingserver\/decalfilter\/linear","kind":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/RenderingServer/DecalFilter/nearestMipmapsAnisotropic":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/RenderingServer\/DecalFilter\/nearestMipmapsAnisotropic","type":"topic","abstract":[{"text":"Nearest-neighbor filter for decals (use for pixel art decals). Anisotropic mipmaps are used for rendering, which means decals at a distance will look smooth and sharp when viewed from oblique angles. This looks better compared to isotropic mipmaps, but is slower. The level of anisotropic filtering is defined by ","type":"text"},{"code":"ProjectSettings\/rendering\/textures\/defaultFilters\/anisotropicFilteringLevel","type":"codeVoice"},{"text":".","type":"text"}],"title":"RenderingServer.DecalFilter.nearestMipmapsAnisotropic","kind":"symbol","url":"\/documentation\/swiftgodot\/renderingserver\/decalfilter\/nearestmipmapsanisotropic","role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"nearestMipmapsAnisotropic","kind":"identifier"}]},"doc://SwiftGodot/s28CustomDebugStringConvertibleP":{"type":"unresolvable","identifier":"doc:\/\/SwiftGodot\/s28CustomDebugStringConvertibleP","title":"Swift.CustomDebugStringConvertible"},"doc://SwiftGodot/SQ":{"type":"unresolvable","identifier":"doc:\/\/SwiftGodot\/SQ","title":"Swift.Equatable"},"doc://SwiftGodot/documentation/SwiftGodot/RenderingServer/DecalFilter/nearestMipmaps":{"abstract":[{"type":"text","text":"Nearest-neighbor filter for decals (use for pixel art decals). Isotropic mipmaps are used for rendering, which means decals at a distance will look smooth but blurry. This has roughly the same performance cost as not using mipmaps."}],"type":"topic","role":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/RenderingServer\/DecalFilter\/nearestMipmaps","kind":"symbol","url":"\/documentation\/swiftgodot\/renderingserver\/decalfilter\/nearestmipmaps","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"kind":"identifier","text":"nearestMipmaps"}],"title":"RenderingServer.DecalFilter.nearestMipmaps"},"doc://SwiftGodot/documentation/SwiftGodot":{"kind":"symbol","url":"\/documentation\/swiftgodot","abstract":[{"type":"text","text":"Framework to write Godot Game Extensions using the Swift Programming Language."}],"role":"collection","title":"SwiftGodot","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot"},"doc://SwiftGodot/documentation/SwiftGodot/RenderingServer/DecalFilter/Equatable-Implementations":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/RenderingServer\/DecalFilter\/Equatable-Implementations","role":"collectionGroup","kind":"article","title":"Equatable Implementations","type":"topic","abstract":[],"url":"\/documentation\/swiftgodot\/renderingserver\/decalfilter\/equatable-implementations"},"doc://SwiftGodot/documentation/SwiftGodot/RenderingServer/DecalFilter/RawRepresentable-Implementations":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/RenderingServer\/DecalFilter\/RawRepresentable-Implementations","abstract":[],"type":"topic","role":"collectionGroup","title":"RawRepresentable Implementations","url":"\/documentation\/swiftgodot\/renderingserver\/decalfilter\/rawrepresentable-implementations","kind":"article"},"doc://SwiftGodot/documentation/SwiftGodot/RenderingServer/DecalFilter":{"type":"topic","navigatorTitle":[{"text":"DecalFilter","kind":"identifier"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/RenderingServer\/DecalFilter","title":"RenderingServer.DecalFilter","kind":"symbol","role":"symbol","abstract":[],"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"DecalFilter","kind":"identifier"}],"url":"\/documentation\/swiftgodot\/renderingserver\/decalfilter"},"doc://SwiftGodot/documentation/SwiftGodot/RenderingServer/DecalFilter/nearest":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/RenderingServer\/DecalFilter\/nearest","type":"topic","abstract":[{"type":"text","text":"Nearest-neighbor filter for decals (use for pixel art decals). No mipmaps are used for rendering, which means decals at a distance will look sharp but grainy. This has roughly the same performance cost as using mipmaps."}],"title":"RenderingServer.DecalFilter.nearest","kind":"symbol","url":"\/documentation\/swiftgodot\/renderingserver\/decalfilter\/nearest","role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"nearest"}]},"doc://SwiftGodot/documentation/SwiftGodot/RenderingServer/DecalFilter/linearMipmaps":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/RenderingServer\/DecalFilter\/linearMipmaps","title":"RenderingServer.DecalFilter.linearMipmaps","url":"\/documentation\/swiftgodot\/renderingserver\/decalfilter\/linearmipmaps","role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"linearMipmaps","kind":"identifier"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Linear filter for decals (use for non-pixel art decals). Isotropic mipmaps are used for rendering, which means decals at a distance will look smooth but blurry. This has roughly the same performance cost as not using mipmaps."}]},"doc://SwiftGodot/documentation/SwiftGodot/RenderingServer/DecalFilter/debugDescription":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/RenderingServer\/DecalFilter\/debugDescription","abstract":[{"text":"A textual representation of this instance, suitable for debugging","type":"text"}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"debugDescription","kind":"identifier"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"title":"debugDescription","url":"\/documentation\/swiftgodot\/renderingserver\/decalfilter\/debugdescription","kind":"symbol"}}}
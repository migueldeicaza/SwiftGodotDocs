{"variants":[{"paths":["\/documentation\/swiftgodot\/engine\/maxfps"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"maxFps","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V","text":"Int32"},{"kind":"text","text":" { "},{"text":"get","kind":"keyword"},{"kind":"text","text":" "},{"text":"set","kind":"keyword"},{"kind":"text","text":" }"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Limiting the FPS can be useful to reduce the host machine’s power consumption, which reduces heat, noise emissions, and improves battery life."}]},{"inlineContent":[{"text":"If ","type":"text"},{"type":"codeVoice","code":"ProjectSettings\/display\/window\/vsync\/vsyncMode"},{"type":"text","text":" is "},{"inlineContent":[{"text":"Enabled","type":"text"}],"type":"strong"},{"text":" or ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"Adaptive"}]},{"text":", the setting takes precedence and the max FPS number cannot exceed the monitor’s refresh rate.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"If ","type":"text"},{"code":"ProjectSettings\/display\/window\/vsync\/vsyncMode","type":"codeVoice"},{"type":"text","text":" is "},{"inlineContent":[{"text":"Enabled","type":"text"}],"type":"strong"},{"text":", on monitors with variable refresh rate enabled (G-Sync\/FreeSync), using an FPS limit a few frames lower than the monitor’s refresh rate will ","type":"text"},{"type":"text","text":"reduce input lag while avoiding tearing"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"See also "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Engine\/physicsTicksPerSecond","type":"reference","isActive":true},{"text":" and ","type":"text"},{"type":"codeVoice","code":"ProjectSettings\/application\/run\/maxFps"},{"type":"text","text":"."}]},{"style":"note","content":[{"inlineContent":[{"type":"text","text":"The actual number of frames per second may still be below this value if the CPU or GPU cannot keep up with the project’s logic and rendering."}],"type":"paragraph"}],"type":"aside","name":"Note"},{"name":"Note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"If ","type":"text"},{"type":"codeVoice","code":"ProjectSettings\/display\/window\/vsync\/vsyncMode"},{"text":" is ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"Disabled"}]},{"text":", limiting the FPS to a high value that can be consistently reached on the system can reduce input lag compared to an uncapped framerate. Since this works by ensuring the GPU load is lower than 100%, this latency reduction is only effective in GPU-bottlenecked scenarios, not CPU-bottlenecked scenarios.","type":"text"}]}],"style":"note"}]}],"metadata":{"title":"maxFps","externalID":"s:10SwiftGodot6EngineC6maxFpss5Int32VvpZ","modules":[{"name":"SwiftGodot"}],"symbolKind":"property","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"maxFps","kind":"identifier"},{"kind":"text","text":": "},{"text":"Int32","kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V"}],"role":"symbol","roleHeading":"Type Property"},"hierarchy":{"paths":[["doc:\/\/SwiftGodot\/documentation\/SwiftGodot","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Engine"]]},"identifier":{"url":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Engine\/maxFps","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"The maximum number of frames that can be rendered every second (FPS). A value of "},{"type":"codeVoice","code":"0"},{"type":"text","text":" means the framerate is uncapped."}],"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://SwiftGodot/documentation/SwiftGodot/Engine":{"role":"symbol","abstract":[{"text":"Provides access to engine properties.","type":"text"}],"url":"\/documentation\/swiftgodot\/engine","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Engine","navigatorTitle":[{"text":"Engine","kind":"identifier"}],"type":"topic","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Engine"}],"title":"Engine"},"doc://SwiftGodot/documentation/SwiftGodot/Node/_physicsProcess(delta:)":{"role":"symbol","url":"\/documentation\/swiftgodot\/node\/_physicsprocess(delta:)","title":"_physicsProcess(delta:)","abstract":[{"type":"text","text":"Called during the physics processing step of the main loop. Physics processing means that the frame rate is synced to the physics, i.e. the "},{"type":"codeVoice","code":"delta"},{"type":"text","text":" variable should be constant. "},{"type":"codeVoice","code":"delta"},{"type":"text","text":" is in seconds."}],"kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Node\/_physicsProcess(delta:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"_physicsProcess","kind":"identifier"},{"text":"(","kind":"text"},{"text":"delta","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":")"}],"type":"topic"},"doc://SwiftGodot/documentation/SwiftGodot/Engine/maxFps":{"role":"symbol","url":"\/documentation\/swiftgodot\/engine\/maxfps","title":"maxFps","abstract":[{"type":"text","text":"The maximum number of frames that can be rendered every second (FPS). A value of "},{"type":"codeVoice","code":"0"},{"type":"text","text":" means the framerate is uncapped."}],"kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Engine\/maxFps","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"maxFps","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V","text":"Int32"}],"type":"topic"},"doc://SwiftGodot/documentation/SwiftGodot":{"kind":"symbol","url":"\/documentation\/swiftgodot","abstract":[{"type":"text","text":"Framework to write Godot Game Extensions using the Swift Programming Language."}],"role":"collection","title":"SwiftGodot","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot"},"doc://SwiftGodot/documentation/SwiftGodot/Engine/physicsTicksPerSecond":{"role":"symbol","url":"\/documentation\/swiftgodot\/engine\/physicstickspersecond","title":"physicsTicksPerSecond","abstract":[{"type":"text","text":"The number of fixed iterations per second. This controls how often physics simulation and "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Node\/_physicsProcess(delta:)","isActive":true,"type":"reference"},{"type":"text","text":" methods are run. This value should generally always be set to "},{"code":"60","type":"codeVoice"},{"text":" or above, as Godot doesn’t interpolate the physics step. As a result, values lower than ","type":"text"},{"code":"60","type":"codeVoice"},{"type":"text","text":" will look stuttery. This value can be increased to make input more reactive or work around collision tunneling issues, but keep in mind doing so will increase CPU usage. See also "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Engine\/maxFps","isActive":true},{"type":"text","text":" and "},{"type":"codeVoice","code":"ProjectSettings\/physics\/common\/physicsTicksPerSecond"},{"type":"text","text":"."}],"kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Engine\/physicsTicksPerSecond","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"physicsTicksPerSecond"},{"text":": ","kind":"text"},{"text":"Int32","kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V"}],"type":"topic"}}}
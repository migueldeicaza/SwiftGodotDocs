{"abstract":[{"text":"Provides access to common operating system functionalities.","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS"},"relationshipsSections":[{"identifiers":["doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Object"],"type":"inheritsFrom","kind":"relationships","title":"Inherits From"},{"type":"conformsTo","title":"Conforms To","kind":"relationships","identifiers":["doc:\/\/SwiftGodot\/s23CustomStringConvertibleP","doc:\/\/SwiftGodot\/SQ","doc:\/\/SwiftGodot\/SH","doc:\/\/SwiftGodot\/s12IdentifiableP","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/VariantRepresentable","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/VariantStorable"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"OS"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"level":2,"anchor":"overview","text":"Overview","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS"},{"type":"text","text":" class wraps the most common functionalities for communicating with the host operating system, such as the video driver, delays, environment variables, execution of binaries, command line, etc."}]},{"name":"Note","style":"note","type":"aside","content":[{"inlineContent":[{"text":"In Godot 4, ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS","isActive":true,"type":"reference"},{"type":"text","text":" functions related to window management, clipboard, and TTS were moved to the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/DisplayServer"},{"type":"text","text":" singleton (and the "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Window","isActive":true},{"type":"text","text":" class). Functions related to time were removed and are only available in the "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Time","type":"reference","isActive":true},{"text":" class.","type":"text"}],"type":"paragraph"}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftgodot\/os"]}],"hierarchy":{"paths":[["doc:\/\/SwiftGodot\/documentation\/SwiftGodot"]]},"kind":"symbol","metadata":{"roleHeading":"Class","title":"OS","modules":[{"name":"SwiftGodot"}],"symbolKind":"class","externalID":"s:10SwiftGodot2OSC","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OS","kind":"identifier"}],"navigatorTitle":[{"text":"OS","kind":"identifier"}]},"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"topicSections":[{"title":"Type Properties","anchor":"Type-Properties","generated":true,"identifiers":["doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/deltaSmoothing","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/godotClassName","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/lowProcessorUsageMode","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/lowProcessorUsageModeSleepUsec","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/shared"]},{"title":"Type Methods","generated":true,"anchor":"Type-Methods","identifiers":["doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/alert(text:title:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/closeMidiInputs()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/crash(message:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/createInstance(arguments:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/createProcess(path:arguments:openConsole:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/delayMsec(_:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/delayUsec(_:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/execute(path:arguments:output:readStderr:openConsole:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/executeWithPipe(path:arguments:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/findKeycodeFromString(_:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/getCacheDir()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/getCmdlineArgs()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/getCmdlineUserArgs()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/getConfigDir()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/getConnectedMidiInputs()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/getDataDir()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/getDistributionName()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/getEntropy(size:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/getEnvironment(variable:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/getExecutablePath()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/getGrantedPermissions()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/getKeycodeString(code:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/getLocale()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/getLocaleLanguage()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/getMainThreadId()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/getMemoryInfo()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/getModelName()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/getName()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/getProcessExitCode(pid:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/getProcessId()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/getProcessorCount()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/getProcessorName()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/getRestartOnExitArguments()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/getStaticMemoryPeakUsage()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/getStaticMemoryUsage()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/getSystemCaCertificates()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/getSystemDir(_:sharedStorage:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/getSystemFontPath(fontName:weight:stretch:italic:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/getSystemFontPathForText(fontName:text:locale:script:weight:stretch:italic:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/getSystemFonts()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/getThreadCallerId()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/getUniqueId()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/getUserDataDir()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/getVersion()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/getVideoAdapterDriverInfo()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/hasEnvironment(variable:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/hasFeature(tagName:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/isDebugBuild()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/isKeycodeUnicode(code:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/isProcessRunning(pid:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/isRestartOnExitSet()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/isSandboxed()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/isStdoutVerbose()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/isUserfsPersistent()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/kill(pid:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/moveToTrash(path:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/openMidiInputs()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/readStringFromStdin()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/requestPermission(name:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/requestPermissions()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/revokeGrantedPermissions()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/setEnvironment(variable:value:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/setRestartOnExit(restart:arguments:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/setThreadName(_:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/setUseFileAccessSaveAndSwap(enabled:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/shellOpen(uri:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/shellShowInFileManager(fileOrDirPath:openFolder:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/unsetEnvironment(variable:)"]},{"identifiers":["doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/RenderingDriver","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/SystemDir"],"anchor":"Enumerations","title":"Enumerations","generated":true}],"references":{"doc://SwiftGodot/SH":{"identifier":"doc:\/\/SwiftGodot\/SH","title":"Swift.Hashable","type":"unresolvable"},"doc://SwiftGodot/documentation/SwiftGodot/OS/getLocale()":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/getLocale()","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"getLocale"},{"text":"() -> ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"}],"type":"topic","role":"symbol","url":"\/documentation\/swiftgodot\/os\/getlocale()","abstract":[{"text":"Returns the host OS locale as a ","type":"text"},{"type":"codeVoice","code":"String"},{"text":" of the form ","type":"text"},{"code":"language_Script_COUNTRY_VARIANT@extra","type":"codeVoice"},{"text":". Every substring after ","type":"text"},{"type":"codeVoice","code":"language"},{"text":" is optional and may not exist.","type":"text"}],"title":"getLocale()","kind":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/OS/createProcess(path:arguments:openConsole:)":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"createProcess"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"path"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"arguments"},{"text":": ","kind":"text"},{"text":"PackedStringArray","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot17PackedStringArrayC"},{"kind":"text","text":", "},{"text":"openConsole","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Int32","kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V"}],"abstract":[{"text":"Creates a new process that runs independently of Godot. It will not terminate when Godot terminates. The path specified in ","type":"text"},{"type":"codeVoice","code":"path"},{"text":" must exist and be an executable file or macOS ","type":"text"},{"code":".app","type":"codeVoice"},{"type":"text","text":" bundle. The path is resolved based on the current platform. The "},{"code":"arguments","type":"codeVoice"},{"type":"text","text":" are used in the given order and separated by a space."}],"title":"createProcess(path:arguments:openConsole:)","type":"topic","url":"\/documentation\/swiftgodot\/os\/createprocess(path:arguments:openconsole:)","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/createProcess(path:arguments:openConsole:)","kind":"symbol","role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/OS/isRestartOnExitSet()":{"url":"\/documentation\/swiftgodot\/os\/isrestartonexitset()","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/isRestartOnExitSet()","title":"isRestartOnExitSet()","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"isRestartOnExitSet","kind":"identifier"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"abstract":[{"text":"Returns ","type":"text"},{"code":"true","type":"codeVoice"},{"text":" if the project will automatically restart when it exits for any reason, ","type":"text"},{"type":"codeVoice","code":"false"},{"type":"text","text":" otherwise. See also "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/setRestartOnExit(restart:arguments:)"},{"type":"text","text":" and "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/getRestartOnExitArguments()"},{"type":"text","text":"."}],"role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/Window":{"type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Window","url":"\/documentation\/swiftgodot\/window","abstract":[{"text":"Base class for all windows, dialogs, and popups.","type":"text"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Window"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Window"}],"title":"Window"},"doc://SwiftGodot/documentation/SwiftGodot/OS/openMidiInputs()":{"abstract":[{"type":"text","text":"Initializes the singleton for the system MIDI driver, allowing Godot to receive "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/InputEventMIDI","isActive":true},{"text":". See also ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/getConnectedMidiInputs()","isActive":true,"type":"reference"},{"type":"text","text":" and "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/closeMidiInputs()","isActive":true},{"text":".","type":"text"}],"type":"topic","kind":"symbol","title":"openMidiInputs()","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"openMidiInputs","kind":"identifier"},{"kind":"text","text":"()"}],"url":"\/documentation\/swiftgodot\/os\/openmidiinputs()","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/openMidiInputs()"},"doc://SwiftGodot/documentation/SwiftGodot/OS/crash(message:)":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/crash(message:)","role":"symbol","abstract":[{"type":"text","text":"Crashes the engine (or the editor if called within a "},{"type":"codeVoice","code":"@tool"},{"text":" script). See also ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/kill(pid:)"},{"type":"text","text":"."}],"kind":"symbol","title":"crash(message:)","url":"\/documentation\/swiftgodot\/os\/crash(message:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"crash","kind":"identifier"},{"text":"(","kind":"text"},{"text":"message","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic"},"doc://SwiftGodot/documentation/SwiftGodot/OS/moveToTrash(path:)":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/moveToTrash(path:)","kind":"symbol","title":"moveToTrash(path:)","type":"topic","abstract":[{"text":"Moves the file or directory at the given ","type":"text"},{"type":"codeVoice","code":"path"},{"text":" to the system’s recycle bin. See also ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/DirAccess\/remove(path:)","isActive":true},{"type":"text","text":"."}],"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"moveToTrash","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"path"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot0B5ErrorO","text":"GodotError"}],"url":"\/documentation\/swiftgodot\/os\/movetotrash(path:)","role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/Object":{"abstract":[{"type":"text","text":"Base class for all other classes in the engine."}],"url":"\/documentation\/swiftgodot\/object","role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Object","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"Object","kind":"identifier"}],"navigatorTitle":[{"text":"Object","kind":"identifier"}],"title":"Object"},"doc://SwiftGodot/documentation/SwiftGodot/OS/SystemDir":{"type":"topic","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"SystemDir","kind":"identifier"}],"title":"OS.SystemDir","url":"\/documentation\/swiftgodot\/os\/systemdir","abstract":[],"kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/SystemDir","navigatorTitle":[{"text":"SystemDir","kind":"identifier"}]},"doc://SwiftGodot/documentation/SwiftGodot/OS/getRestartOnExitArguments()":{"url":"\/documentation\/swiftgodot\/os\/getrestartonexitarguments()","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/getRestartOnExitArguments()","title":"getRestartOnExitArguments()","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"getRestartOnExitArguments"},{"kind":"text","text":"() -> "},{"text":"PackedStringArray","preciseIdentifier":"s:10SwiftGodot17PackedStringArrayC","kind":"typeIdentifier"}],"abstract":[{"text":"Returns the list of command line arguments that will be used when the project automatically restarts using ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/setRestartOnExit(restart:arguments:)","isActive":true,"type":"reference"},{"type":"text","text":". See also "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/isRestartOnExitSet()"},{"type":"text","text":"."}],"role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/OS":{"url":"\/documentation\/swiftgodot\/os","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"OS"}],"navigatorTitle":[{"kind":"identifier","text":"OS"}],"title":"OS","abstract":[{"type":"text","text":"Provides access to common operating system functionalities."}],"type":"topic","role":"symbol","kind":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/OS/isSandboxed()":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/isSandboxed()","title":"isSandboxed()","url":"\/documentation\/swiftgodot\/os\/issandboxed()","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isSandboxed"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"abstract":[{"type":"text","text":"Returns "},{"code":"true","type":"codeVoice"},{"text":" if the application is running in the sandbox.","type":"text"}],"type":"topic","kind":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/OS/isKeycodeUnicode(code:)":{"abstract":[{"type":"text","text":"Returns "},{"code":"true","type":"codeVoice"},{"text":" if the input keycode corresponds to a Unicode character. For a list of codes, see the ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Key","type":"reference","isActive":true},{"type":"text","text":" constants."}],"title":"isKeycodeUnicode(code:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"isKeycodeUnicode"},{"kind":"text","text":"("},{"text":"code","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int64V","text":"Int64"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"kind":"symbol","url":"\/documentation\/swiftgodot\/os\/iskeycodeunicode(code:)","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/isKeycodeUnicode(code:)","role":"symbol","type":"topic"},"doc://SwiftGodot/documentation/SwiftGodot/OS/findKeycodeFromString(_:)":{"kind":"symbol","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"findKeycodeFromString"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot3KeyO","text":"Key"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/findKeycodeFromString(_:)","type":"topic","url":"\/documentation\/swiftgodot\/os\/findkeycodefromstring(_:)","abstract":[{"text":"Finds the keycode for the given string. The returned values are equivalent to the ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Key","isActive":true,"type":"reference"},{"text":" constants.","type":"text"}],"title":"findKeycodeFromString(_:)"},"doc://SwiftGodot/documentation/SwiftGodot/OS/setThreadName(_:)":{"role":"symbol","url":"\/documentation\/swiftgodot\/os\/setthreadname(_:)","type":"topic","abstract":[{"type":"text","text":"Assigns the given name to the current thread. Returns "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GodotError\/errUnavailable"},{"type":"text","text":" if unavailable on the current platform."}],"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"setThreadName"},{"kind":"text","text":"("},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"GodotError","preciseIdentifier":"s:10SwiftGodot0B5ErrorO","kind":"typeIdentifier"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/setThreadName(_:)","title":"setThreadName(_:)","kind":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/OS/setEnvironment(variable:value:)":{"role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"setEnvironment","kind":"identifier"},{"text":"(","kind":"text"},{"text":"variable","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"value"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":")"}],"url":"\/documentation\/swiftgodot\/os\/setenvironment(variable:value:)","abstract":[{"text":"Sets the value of the environment variable ","type":"text"},{"type":"codeVoice","code":"variable"},{"text":" to ","type":"text"},{"type":"codeVoice","code":"value"},{"type":"text","text":". The environment variable will be set for the Godot process and any process executed with "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/execute(path:arguments:output:readStderr:openConsole:)"},{"text":" after running ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/setEnvironment(variable:value:)"},{"type":"text","text":". The environment variable will "},{"type":"emphasis","inlineContent":[{"type":"text","text":"not"}]},{"text":" persist to processes run after the Godot process was terminated.","type":"text"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/setEnvironment(variable:value:)","kind":"symbol","type":"topic","title":"setEnvironment(variable:value:)"},"doc://SwiftGodot/documentation/SwiftGodot/InputEventMIDI":{"url":"\/documentation\/swiftgodot\/inputeventmidi","role":"symbol","abstract":[{"type":"text","text":"Represents a MIDI message from a MIDI device, such as a musical keyboard."}],"type":"topic","title":"InputEventMIDI","navigatorTitle":[{"text":"InputEventMIDI","kind":"identifier"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/InputEventMIDI","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"InputEventMIDI","kind":"identifier"}],"kind":"symbol"},"doc://SwiftGodot/SQ":{"identifier":"doc:\/\/SwiftGodot\/SQ","title":"Swift.Equatable","type":"unresolvable"},"doc://SwiftGodot/s23CustomStringConvertibleP":{"identifier":"doc:\/\/SwiftGodot\/s23CustomStringConvertibleP","title":"Swift.CustomStringConvertible","type":"unresolvable"},"doc://SwiftGodot/documentation/SwiftGodot/OS/getStaticMemoryPeakUsage()":{"type":"topic","abstract":[{"text":"Returns the maximum amount of static memory used. Only works in debug builds.","type":"text"}],"title":"getStaticMemoryPeakUsage()","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/getStaticMemoryPeakUsage()","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"getStaticMemoryPeakUsage","kind":"identifier"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"}],"url":"\/documentation\/swiftgodot\/os\/getstaticmemorypeakusage()","kind":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/PackedByteArray":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PackedByteArray","kind":"symbol","url":"\/documentation\/swiftgodot\/packedbytearray","navigatorTitle":[{"kind":"identifier","text":"PackedByteArray"}],"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PackedByteArray"}],"title":"PackedByteArray","abstract":[{"type":"text","text":"A packed array of bytes."}],"role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/OS/getStaticMemoryUsage()":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"getStaticMemoryUsage"},{"text":"() -> ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"}],"kind":"symbol","role":"symbol","type":"topic","url":"\/documentation\/swiftgodot\/os\/getstaticmemoryusage()","title":"getStaticMemoryUsage()","abstract":[{"type":"text","text":"Returns the amount of static memory being used by the program in bytes. Only works in debug builds."}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/getStaticMemoryUsage()"},"doc://SwiftGodot/documentation/SwiftGodot/OS/getDistributionName()":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/getDistributionName()","role":"symbol","type":"topic","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"getDistributionName"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"title":"getDistributionName()","url":"\/documentation\/swiftgodot\/os\/getdistributionname()","abstract":[{"text":"Returns the name of the distribution for Linux and BSD platforms (e.g. “Ubuntu”, “Manjaro”, “OpenBSD”, etc.).","type":"text"}]},"doc://SwiftGodot/documentation/SwiftGodot/OS/delayUsec(_:)":{"role":"symbol","title":"delayUsec(_:)","url":"\/documentation\/swiftgodot\/os\/delayusec(_:)","abstract":[{"type":"text","text":"Delays execution of the current thread by "},{"type":"codeVoice","code":"usec"},{"text":" microseconds. ","type":"text"},{"type":"codeVoice","code":"usec"},{"type":"text","text":" must be greater than or equal to "},{"type":"codeVoice","code":"0"},{"text":". Otherwise, ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/delayUsec(_:)","type":"reference","isActive":true},{"type":"text","text":" does nothing and prints an error message."}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/delayUsec(_:)","kind":"symbol","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"delayUsec","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"},{"text":")","kind":"text"}]},"doc://SwiftGodot/documentation/SwiftGodot/OS/getMemoryInfo()":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/getMemoryInfo()","url":"\/documentation\/swiftgodot\/os\/getmemoryinfo()","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getMemoryInfo","kind":"identifier"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot11GDictionaryC","text":"GDictionary"}],"type":"topic","title":"getMemoryInfo()","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Returns a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GDictionary"},{"type":"text","text":" containing information about the current memory with the following entries:"}]},"doc://SwiftGodot/documentation/SwiftGodot/OS/isDebugBuild()":{"type":"topic","kind":"symbol","role":"symbol","title":"isDebugBuild()","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"isDebugBuild"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"abstract":[{"text":"Returns ","type":"text"},{"code":"true","type":"codeVoice"},{"type":"text","text":" if the Godot binary used to run the project is a "},{"inlineContent":[{"text":"debug","type":"text"}],"type":"emphasis"},{"text":" export template, or when running in the editor.","type":"text"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/isDebugBuild()","url":"\/documentation\/swiftgodot\/os\/isdebugbuild()"},"doc://SwiftGodot/documentation/SwiftGodot/Node":{"type":"topic","url":"\/documentation\/swiftgodot\/node","abstract":[{"text":"Base class for all scene objects.","type":"text"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"text":"Node","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Node"}],"title":"Node","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Node"},"doc://SwiftGodot/documentation/SwiftGodot/OS/getSystemFontPath(fontName:weight:stretch:italic:)":{"kind":"symbol","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"getSystemFontPath","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"fontName"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"text":", ","kind":"text"},{"text":"weight","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int32","preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"stretch"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s5Int32V","text":"Int32","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"italic"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/getSystemFontPath(fontName:weight:stretch:italic:)","title":"getSystemFontPath(fontName:weight:stretch:italic:)","abstract":[{"type":"text","text":"Returns the path to the system font file with "},{"code":"fontName","type":"codeVoice"},{"type":"text","text":" and style. Returns an empty string if no matching fonts found."}],"url":"\/documentation\/swiftgodot\/os\/getsystemfontpath(fontname:weight:stretch:italic:)","type":"topic"},"doc://SwiftGodot/documentation/SwiftGodot/OS/getName()":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/getName()","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"getName"},{"text":"() -> ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"kind":"symbol","url":"\/documentation\/swiftgodot\/os\/getname()","title":"getName()","abstract":[{"text":"Returns the name of the host platform.","type":"text"}],"role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/OS/setRestartOnExit(restart:arguments:)":{"abstract":[{"text":"If ","type":"text"},{"type":"codeVoice","code":"restart"},{"type":"text","text":" is "},{"code":"true","type":"codeVoice"},{"type":"text","text":", restarts the project automatically when it is exited with "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/SceneTree\/quit(exitCode:)","type":"reference","isActive":true},{"type":"text","text":" or "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Node","isActive":true},{"type":"text","text":"notificationWmCloseRequest````. Command-line "},{"type":"codeVoice","code":"arguments"},{"text":" can be supplied. To restart the project with the same command line arguments as originally used to run the project, pass ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/getCmdlineArgs()"},{"type":"text","text":" as the value for `arguments`."}],"url":"\/documentation\/swiftgodot\/os\/setrestartonexit(restart:arguments:)","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"setRestartOnExit"},{"text":"(","kind":"text"},{"text":"restart","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":", "},{"kind":"externalParam","text":"arguments"},{"text":": ","kind":"text"},{"text":"PackedStringArray","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot17PackedStringArrayC"},{"text":")","kind":"text"}],"kind":"symbol","role":"symbol","title":"setRestartOnExit(restart:arguments:)","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/setRestartOnExit(restart:arguments:)"},"doc://SwiftGodot/documentation/SwiftGodot/OS/closeMidiInputs()":{"abstract":[{"text":"Shuts down the system MIDI driver. Godot will no longer receive ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/InputEventMIDI","type":"reference"},{"text":". See also ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/openMidiInputs()","isActive":true},{"type":"text","text":" and "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/getConnectedMidiInputs()"},{"text":".","type":"text"}],"type":"topic","kind":"symbol","title":"closeMidiInputs()","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"closeMidiInputs"},{"kind":"text","text":"()"}],"url":"\/documentation\/swiftgodot\/os\/closemidiinputs()","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/closeMidiInputs()"},"doc://SwiftGodot/documentation/SwiftGodot/OS/getEntropy(size:)":{"title":"getEntropy(size:)","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"getEntropy"},{"kind":"text","text":"("},{"text":"size","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V","text":"Int32"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:10SwiftGodot15PackedByteArrayC","text":"PackedByteArray","kind":"typeIdentifier"}],"url":"\/documentation\/swiftgodot\/os\/getentropy(size:)","abstract":[{"type":"text","text":"Generates a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PackedByteArray"},{"text":" of cryptographically secure random bytes with given ","type":"text"},{"type":"codeVoice","code":"size"},{"text":".","type":"text"}],"role":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/getEntropy(size:)","kind":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/OS/isProcessRunning(pid:)":{"url":"\/documentation\/swiftgodot\/os\/isprocessrunning(pid:)","title":"isProcessRunning(pid:)","type":"topic","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProcessRunning"},{"kind":"text","text":"("},{"text":"pid","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Int32","kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/isProcessRunning(pid:)","role":"symbol","abstract":[{"text":"Returns ","type":"text"},{"type":"codeVoice","code":"true"},{"type":"text","text":" if the child process ID ("},{"code":"pid","type":"codeVoice"},{"text":") is still running or ","type":"text"},{"code":"false","type":"codeVoice"},{"text":" if it has terminated. ","type":"text"},{"type":"codeVoice","code":"pid"},{"text":" must be a valid ID generated from ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/createProcess(path:arguments:openConsole:)","type":"reference"},{"text":".","type":"text"}]},"doc://SwiftGodot/documentation/SwiftGodot/OS/getConnectedMidiInputs()":{"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/swiftgodot\/os\/getconnectedmidiinputs()","title":"getConnectedMidiInputs()","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/getConnectedMidiInputs()","abstract":[{"type":"text","text":"Returns an array of connected MIDI device names, if they exist. Returns an empty array if the system MIDI driver has not previously been initialized with "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/openMidiInputs()"},{"text":". See also ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/closeMidiInputs()"},{"type":"text","text":"."}],"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"getConnectedMidiInputs"},{"kind":"text","text":"() -> "},{"text":"PackedStringArray","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot17PackedStringArrayC"}]},"doc://SwiftGodot/documentation/SwiftGodot/OS/hasEnvironment(variable:)":{"role":"symbol","abstract":[{"text":"Returns ","type":"text"},{"type":"codeVoice","code":"true"},{"type":"text","text":" if the environment variable with the name "},{"type":"codeVoice","code":"variable"},{"type":"text","text":" exists."}],"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"hasEnvironment"},{"text":"(","kind":"text"},{"text":"variable","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":") -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"url":"\/documentation\/swiftgodot\/os\/hasenvironment(variable:)","kind":"symbol","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/hasEnvironment(variable:)","title":"hasEnvironment(variable:)"},"doc://SwiftGodot/documentation/SwiftGodot/VariantRepresentable":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/VariantRepresentable","abstract":[{"type":"text","text":"Types that conform to VariantRepresentable can be stored directly in "},{"type":"codeVoice","code":"Variant"},{"type":"text","text":" "},{"type":"text","text":"with no conversion.  These include all of the Variant types from Godot (for"},{"text":" ","type":"text"},{"text":"example ","type":"text"},{"code":"GString","type":"codeVoice"},{"type":"text","text":", "},{"code":"Rect","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Plane","type":"codeVoice"},{"type":"text","text":"), Godot objects (those that subclass"},{"type":"text","text":" "},{"type":"text","text":"SwiftGodot.Object) as well as the built-in Swift types UInt8, Int64 and Double."}],"kind":"symbol","navigatorTitle":[{"text":"VariantRepresentable","kind":"identifier"}],"type":"topic","url":"\/documentation\/swiftgodot\/variantrepresentable","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"VariantRepresentable","kind":"identifier"}],"title":"VariantRepresentable","role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/OS/alert(text:title:)":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/alert(text:title:)","role":"symbol","abstract":[{"type":"text","text":"Displays a modal dialog box using the host platform’s implementation. The engine execution is blocked until the dialog is closed."}],"kind":"symbol","title":"alert(text:title:)","url":"\/documentation\/swiftgodot\/os\/alert(text:title:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"alert"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"text"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"text":"title","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":")"}],"type":"topic"},"doc://SwiftGodot/documentation/SwiftGodot/Time":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"Time","kind":"identifier"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Time","url":"\/documentation\/swiftgodot\/time","navigatorTitle":[{"text":"Time","kind":"identifier"}],"title":"Time","kind":"symbol","role":"symbol","type":"topic","abstract":[{"type":"text","text":"A singleton for working with time data."}]},"doc://SwiftGodot/documentation/SwiftGodot/OS/getKeycodeString(code:)":{"type":"topic","role":"symbol","url":"\/documentation\/swiftgodot\/os\/getkeycodestring(code:)","abstract":[{"text":"Returns the given keycode as a ","type":"text"},{"code":"String","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"getKeycodeString"},{"text":"(","kind":"text"},{"text":"code","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Key","preciseIdentifier":"s:10SwiftGodot3KeyO","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/getKeycodeString(code:)","title":"getKeycodeString(code:)"},"doc://SwiftGodot/documentation/SwiftGodot/OS/getProcessorCount()":{"role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"getProcessorCount"},{"kind":"text","text":"() -> "},{"text":"Int32","preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier"}],"kind":"symbol","abstract":[{"type":"text","text":"Returns the number of "},{"type":"emphasis","inlineContent":[{"text":"logical","type":"text"}]},{"text":" CPU cores available on the host machine. On CPUs with HyperThreading enabled, this number will be greater than the number of ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"physical","type":"text"}]},{"text":" CPU cores.","type":"text"}],"type":"topic","url":"\/documentation\/swiftgodot\/os\/getprocessorcount()","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/getProcessorCount()","title":"getProcessorCount()"},"doc://SwiftGodot/documentation/SwiftGodot":{"kind":"symbol","url":"\/documentation\/swiftgodot","abstract":[{"type":"text","text":"Framework to write Godot Game Extensions using the Swift Programming Language."}],"role":"collection","title":"SwiftGodot","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot"},"doc://SwiftGodot/documentation/SwiftGodot/OS/getDataDir()":{"kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getDataDir","kind":"identifier"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"title":"getDataDir()","abstract":[{"text":"Returns the ","type":"text"},{"inlineContent":[{"type":"text","text":"global"}],"type":"emphasis"},{"text":" user data directory according to the operating system’s standards.","type":"text"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/getDataDir()","role":"symbol","type":"topic","url":"\/documentation\/swiftgodot\/os\/getdatadir()"},"doc://SwiftGodot/documentation/SwiftGodot/PackedStringArray":{"abstract":[{"text":"A packed array of ","type":"text"},{"type":"codeVoice","code":"String"},{"text":"s.","type":"text"}],"title":"PackedStringArray","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PackedStringArray","kind":"identifier"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PackedStringArray","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PackedStringArray"}],"role":"symbol","url":"\/documentation\/swiftgodot\/packedstringarray"},"doc://SwiftGodot/documentation/SwiftGodot/SceneTree/quit(exitCode:)":{"url":"\/documentation\/swiftgodot\/scenetree\/quit(exitcode:)","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/SceneTree\/quit(exitCode:)","title":"quit(exitCode:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"quit","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"exitCode"},{"text":": ","kind":"text"},{"text":"Int32","preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"Quits the application at the end of the current iteration, with the given "},{"code":"exitCode","type":"codeVoice"},{"type":"text","text":"."}],"role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/OS/getMainThreadId()":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/getMainThreadId()","type":"topic","title":"getMainThreadId()","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"getMainThreadId","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"}],"role":"symbol","abstract":[{"text":"Returns the ID of the main thread. See ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/getThreadCallerId()"},{"type":"text","text":"."}],"url":"\/documentation\/swiftgodot\/os\/getmainthreadid()"},"doc://SwiftGodot/documentation/SwiftGodot/OS/getCacheDir()":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/getCacheDir()","kind":"symbol","type":"topic","title":"getCacheDir()","abstract":[{"type":"text","text":"Returns the "},{"type":"emphasis","inlineContent":[{"type":"text","text":"global"}]},{"text":" cache data directory according to the operating system’s standards.","type":"text"}],"url":"\/documentation\/swiftgodot\/os\/getcachedir()","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"getCacheDir","kind":"identifier"},{"kind":"text","text":"() -> "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}]},"doc://SwiftGodot/documentation/SwiftGodot/OS/requestPermissions()":{"url":"\/documentation\/swiftgodot\/os\/requestpermissions()","title":"requestPermissions()","abstract":[{"type":"text","text":"Requests "},{"inlineContent":[{"text":"dangerous","type":"text"}],"type":"emphasis"},{"text":" permissions from the OS. Returns ","type":"text"},{"code":"true","type":"codeVoice"},{"text":" if permissions have been successfully granted.","type":"text"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/requestPermissions()","kind":"symbol","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"requestPermissions","kind":"identifier"},{"kind":"text","text":"() -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"type":"topic"},"doc://SwiftGodot/documentation/SwiftGodot/GDictionary":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GDictionary","abstract":[{"type":"text","text":"A built-in data structure that holds key-value pairs."}],"kind":"symbol","navigatorTitle":[{"text":"GDictionary","kind":"identifier"}],"type":"topic","url":"\/documentation\/swiftgodot\/gdictionary","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"GDictionary","kind":"identifier"}],"title":"GDictionary","role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/OS/shellShowInFileManager(fileOrDirPath:openFolder:)":{"kind":"symbol","title":"shellShowInFileManager(fileOrDirPath:openFolder:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"shellShowInFileManager","kind":"identifier"},{"text":"(","kind":"text"},{"text":"fileOrDirPath","kind":"externalParam"},{"kind":"text","text":": "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"openFolder"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:10SwiftGodot0B5ErrorO","text":"GodotError","kind":"typeIdentifier"}],"url":"\/documentation\/swiftgodot\/os\/shellshowinfilemanager(fileordirpath:openfolder:)","role":"symbol","abstract":[{"type":"text","text":"Requests the OS to open the file manager, navigate to the given "},{"type":"codeVoice","code":"fileOrDirPath"},{"text":" and select the target file or folder.","type":"text"}],"type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/shellShowInFileManager(fileOrDirPath:openFolder:)"},"doc://SwiftGodot/documentation/SwiftGodot/OS/getConfigDir()":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/getConfigDir()","kind":"symbol","type":"topic","title":"getConfigDir()","abstract":[{"text":"Returns the ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"global","type":"text"}]},{"text":" user configuration directory according to the operating system’s standards.","type":"text"}],"url":"\/documentation\/swiftgodot\/os\/getconfigdir()","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getConfigDir","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"}]},"doc://SwiftGodot/documentation/SwiftGodot/OS/getExecutablePath()":{"type":"topic","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getExecutablePath","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"abstract":[{"type":"text","text":"Returns the file path to the current engine executable."}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/getExecutablePath()","title":"getExecutablePath()","role":"symbol","url":"\/documentation\/swiftgodot\/os\/getexecutablepath()"},"doc://SwiftGodot/documentation/SwiftGodot/DisplayServer":{"type":"topic","navigatorTitle":[{"text":"DisplayServer","kind":"identifier"}],"abstract":[{"text":"A server interface for low-level window management.","type":"text"}],"title":"DisplayServer","url":"\/documentation\/swiftgodot\/displayserver","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/DisplayServer","role":"symbol","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"DisplayServer","kind":"identifier"}]},"doc://SwiftGodot/documentation/SwiftGodot/OS/execute(path:arguments:output:readStderr:openConsole:)":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"execute","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"path"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"text":"arguments","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10SwiftGodot17PackedStringArrayC","text":"PackedStringArray","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"output","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"GArray","preciseIdentifier":"s:10SwiftGodot6GArrayC","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"readStderr","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"openConsole","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"text":"Int32","preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Executes the given process in a "},{"inlineContent":[{"text":"blocking","type":"text"}],"type":"emphasis"},{"type":"text","text":" way. The file specified in "},{"type":"codeVoice","code":"path"},{"text":" must exist and be executable. The system path resolution will be used. The ","type":"text"},{"code":"arguments","type":"codeVoice"},{"type":"text","text":" are used in the given order, separated by spaces, and wrapped in quotes."}],"url":"\/documentation\/swiftgodot\/os\/execute(path:arguments:output:readstderr:openconsole:)","kind":"symbol","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/execute(path:arguments:output:readStderr:openConsole:)","role":"symbol","title":"execute(path:arguments:output:readStderr:openConsole:)"},"doc://SwiftGodot/documentation/SwiftGodot/OS/getSystemFontPathForText(fontName:text:locale:script:weight:stretch:italic:)":{"type":"topic","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/getSystemFontPathForText(fontName:text:locale:script:weight:stretch:italic:)","abstract":[{"text":"Returns an array of the system substitute font file paths, which are similar to the font with ","type":"text"},{"type":"codeVoice","code":"fontName"},{"text":" and style for the specified text, locale, and script. Returns an empty array if no matching fonts found.","type":"text"}],"url":"\/documentation\/swiftgodot\/os\/getsystemfontpathfortext(fontname:text:locale:script:weight:stretch:italic:)","title":"getSystemFontPathForText(fontName:text:locale:script:weight:stretch:italic:)","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"getSystemFontPathForText","kind":"identifier"},{"text":"(","kind":"text"},{"text":"fontName","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"text"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"text":"locale","kind":"externalParam"},{"kind":"text","text":": "},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"script"},{"kind":"text","text":": "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"weight","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier","text":"Int32"},{"kind":"text","text":", "},{"kind":"externalParam","text":"stretch"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier","text":"Int32"},{"kind":"text","text":", "},{"text":"italic","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"PackedStringArray","preciseIdentifier":"s:10SwiftGodot17PackedStringArrayC"}]},"doc://SwiftGodot/documentation/SwiftGodot/OS/executeWithPipe(path:arguments:)":{"type":"topic","title":"executeWithPipe(path:arguments:)","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"executeWithPipe","kind":"identifier"},{"text":"(","kind":"text"},{"text":"path","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"arguments"},{"text":": ","kind":"text"},{"text":"PackedStringArray","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot17PackedStringArrayC"},{"text":") -> ","kind":"text"},{"text":"GDictionary","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot11GDictionaryC"}],"abstract":[{"type":"text","text":"Creates a new process that runs independently of Godot with redirected IO. It will not terminate when Godot terminates. The path specified in "},{"type":"codeVoice","code":"path"},{"type":"text","text":" must exist and be an executable file or macOS "},{"code":".app","type":"codeVoice"},{"type":"text","text":" bundle. The path is resolved based on the current platform. The "},{"type":"codeVoice","code":"arguments"},{"text":" are used in the given order and separated by a space.","type":"text"}],"url":"\/documentation\/swiftgodot\/os\/executewithpipe(path:arguments:)","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/executeWithPipe(path:arguments:)","kind":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/OS/lowProcessorUsageMode":{"url":"\/documentation\/swiftgodot\/os\/lowprocessorusagemode","abstract":[{"type":"text","text":"If "},{"type":"codeVoice","code":"true"},{"text":", the engine optimizes for low processor usage by only refreshing the screen if needed. Can improve battery consumption on mobile.","type":"text"}],"kind":"symbol","role":"symbol","type":"topic","title":"lowProcessorUsageMode","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"lowProcessorUsageMode"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/lowProcessorUsageMode"},"doc://SwiftGodot/documentation/SwiftGodot/OS/getSystemCaCertificates()":{"abstract":[{"type":"text","text":"Returns the list of certification authorities trusted by the operating system as a string of concatenated certificates in PEM format."}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/getSystemCaCertificates()","url":"\/documentation\/swiftgodot\/os\/getsystemcacertificates()","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"getSystemCaCertificates","kind":"identifier"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"type":"topic","role":"symbol","title":"getSystemCaCertificates()","kind":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/OS/lowProcessorUsageModeSleepUsec":{"url":"\/documentation\/swiftgodot\/os\/lowprocessorusagemodesleepusec","abstract":[{"text":"The amount of sleeping between frames when the low-processor usage mode is enabled, in microseconds. Higher values will result in lower CPU usage. See also ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/lowProcessorUsageMode","type":"reference"},{"text":".","type":"text"}],"type":"topic","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"lowProcessorUsageModeSleepUsec","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V","text":"Int32"}],"role":"symbol","title":"lowProcessorUsageModeSleepUsec","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/lowProcessorUsageModeSleepUsec"},"doc://SwiftGodot/documentation/SwiftGodot/OS/revokeGrantedPermissions()":{"url":"\/documentation\/swiftgodot\/os\/revokegrantedpermissions()","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"revokeGrantedPermissions"},{"text":"()","kind":"text"}],"abstract":[{"type":"text","text":"On macOS (sandboxed applications only), this function clears list of user selected folders accessible to the application."}],"role":"symbol","title":"revokeGrantedPermissions()","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/revokeGrantedPermissions()","kind":"symbol","type":"topic"},"doc://SwiftGodot/documentation/SwiftGodot/RenderingServer/getVideoAdapterApiVersion()":{"type":"topic","title":"getVideoAdapterApiVersion()","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"getVideoAdapterApiVersion"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/RenderingServer\/getVideoAdapterApiVersion()","url":"\/documentation\/swiftgodot\/renderingserver\/getvideoadapterapiversion()","kind":"symbol","abstract":[{"text":"Returns the version of the graphics video adapter ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"currently in use"}]},{"type":"text","text":" (e.g. “1.2.189” for Vulkan, “3.3.0 NVIDIA 510.60.02” for OpenGL). This version may be different from the actual latest version supported by the hardware, as Godot may not always request the latest version. See also "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/getVideoAdapterDriverInfo()","isActive":true},{"text":".","type":"text"}],"role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/OS/getUniqueId()":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/getUniqueId()","kind":"symbol","url":"\/documentation\/swiftgodot\/os\/getuniqueid()","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getUniqueId","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"type":"topic","title":"getUniqueId()","abstract":[{"type":"text","text":"Returns a string that is unique to the device."}]},"doc://SwiftGodot/documentation/SwiftGodot/OS/getModelName()":{"abstract":[{"text":"Returns the model name of the current device.","type":"text"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/getModelName()","title":"getModelName()","url":"\/documentation\/swiftgodot\/os\/getmodelname()","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getModelName"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"}],"role":"symbol","type":"topic"},"doc://SwiftGodot/documentation/SwiftGodot/OS/isStdoutVerbose()":{"type":"topic","title":"isStdoutVerbose()","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isStdoutVerbose"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"url":"\/documentation\/swiftgodot\/os\/isstdoutverbose()","abstract":[{"type":"text","text":"Returns "},{"type":"codeVoice","code":"true"},{"type":"text","text":" if the engine was executed with the "},{"type":"codeVoice","code":"--verbose"},{"type":"text","text":" or "},{"code":"-v","type":"codeVoice"},{"type":"text","text":" command line argument, or if "},{"code":"ProjectSettings\/debug\/settings\/stdout\/verboseStdout","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"true","type":"codeVoice"},{"text":". See also ","type":"text"},{"code":"@GlobalScope.print_verbose","type":"codeVoice"},{"type":"text","text":"."}],"kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/isStdoutVerbose()","role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/DirAccess/remove(path:)":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/DirAccess\/remove(path:)","kind":"symbol","title":"remove(path:)","type":"topic","abstract":[{"type":"text","text":"Permanently deletes the target file or an empty directory. The argument can be relative to the current directory, or an absolute path. If the target directory is not empty, the operation will fail."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"remove"},{"text":"(","kind":"text"},{"text":"path","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":") -> ","kind":"text"},{"text":"GodotError","preciseIdentifier":"s:10SwiftGodot0B5ErrorO","kind":"typeIdentifier"}],"url":"\/documentation\/swiftgodot\/diraccess\/remove(path:)","role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/OS/getEnvironment(variable:)":{"url":"\/documentation\/swiftgodot\/os\/getenvironment(variable:)","abstract":[{"type":"text","text":"Returns the value of the given environment variable, or an empty string if "},{"type":"codeVoice","code":"variable"},{"text":" doesn’t exist.","type":"text"}],"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getEnvironment"},{"kind":"text","text":"("},{"kind":"externalParam","text":"variable"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":") -> "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/getEnvironment(variable:)","title":"getEnvironment(variable:)","type":"topic","role":"symbol","kind":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/OS/getThreadCallerId()":{"kind":"symbol","abstract":[{"type":"text","text":"Returns the ID of the current thread. This can be used in logs to ease debugging of multi-threaded applications."}],"url":"\/documentation\/swiftgodot\/os\/getthreadcallerid()","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/getThreadCallerId()","title":"getThreadCallerId()","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"getThreadCallerId"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"}],"role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/OS/delayMsec(_:)":{"type":"topic","title":"delayMsec(_:)","kind":"symbol","role":"symbol","url":"\/documentation\/swiftgodot\/os\/delaymsec(_:)","abstract":[{"type":"text","text":"Delays execution of the current thread by "},{"code":"msec","type":"codeVoice"},{"text":" milliseconds. ","type":"text"},{"type":"codeVoice","code":"msec"},{"type":"text","text":" must be greater than or equal to "},{"type":"codeVoice","code":"0"},{"type":"text","text":". Otherwise, "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/delayMsec(_:)","isActive":true,"type":"reference"},{"type":"text","text":" does nothing and prints an error message."}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/delayMsec(_:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"delayMsec","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V","text":"Int32"},{"kind":"text","text":")"}]},"doc://SwiftGodot/documentation/SwiftGodot/OS/hasFeature(tagName:)":{"kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hasFeature","kind":"identifier"},{"kind":"text","text":"("},{"text":"tagName","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"url":"\/documentation\/swiftgodot\/os\/hasfeature(tagname:)","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/hasFeature(tagName:)","abstract":[{"text":"Returns ","type":"text"},{"code":"true","type":"codeVoice"},{"text":" if the feature for the given feature tag is supported in the currently running instance, depending on the platform, build, etc. Can be used to check whether you’re currently running a debug build, on a certain platform or arch, etc. Refer to the ","type":"text"},{"type":"text","text":"Feature Tags"},{"type":"text","text":" documentation for more details."}],"type":"topic","title":"hasFeature(tagName:)","role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/OS/getProcessExitCode(pid:)":{"title":"getProcessExitCode(pid:)","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"getProcessExitCode","kind":"identifier"},{"text":"(","kind":"text"},{"text":"pid","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s5Int32V","text":"Int32","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"}],"role":"symbol","abstract":[{"text":"Returns the exit code of a spawned process once it has finished running (see ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/isProcessRunning(pid:)","isActive":true},{"text":").","type":"text"}],"kind":"symbol","url":"\/documentation\/swiftgodot\/os\/getprocessexitcode(pid:)","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/getProcessExitCode(pid:)"},"doc://SwiftGodot/documentation/SwiftGodot/OS/getSystemDir(_:sharedStorage:)":{"title":"getSystemDir(_:sharedStorage:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"getSystemDir"},{"kind":"text","text":"("},{"text":"OS","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot2OSC"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot2OSC9SystemDirO","text":"SystemDir"},{"kind":"text","text":", "},{"text":"sharedStorage","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"}],"type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/getSystemDir(_:sharedStorage:)","url":"\/documentation\/swiftgodot\/os\/getsystemdir(_:sharedstorage:)","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Returns the path to commonly used folders across different platforms, as defined by "},{"type":"codeVoice","code":"dir"},{"type":"text","text":". See the "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/SystemDir","isActive":true},{"text":" constants for available locations.","type":"text"}]},"doc://SwiftGodot/documentation/SwiftGodot/GodotError/errUnavailable":{"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"errUnavailable","kind":"identifier"}],"abstract":[{"text":"Unavailable error.","type":"text"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GodotError\/errUnavailable","title":"GodotError.errUnavailable","url":"\/documentation\/swiftgodot\/godoterror\/errunavailable","kind":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/OS/kill(pid:)":{"title":"kill(pid:)","url":"\/documentation\/swiftgodot\/os\/kill(pid:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"kill","kind":"identifier"},{"text":"(","kind":"text"},{"text":"pid","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"GodotError","preciseIdentifier":"s:10SwiftGodot0B5ErrorO"}],"role":"symbol","abstract":[{"type":"text","text":"Kill (terminate) the process identified by the given process ID ("},{"type":"codeVoice","code":"pid"},{"text":"), such as the ID returned by ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/execute(path:arguments:output:readStderr:openConsole:)","isActive":true,"type":"reference"},{"type":"text","text":" in non-blocking mode. See also "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/crash(message:)"},{"type":"text","text":"."}],"kind":"symbol","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/kill(pid:)"},"doc://SwiftGodot/documentation/SwiftGodot/OS/requestPermission(name:)":{"abstract":[{"text":"Requests permission from the OS for the given ","type":"text"},{"type":"codeVoice","code":"name"},{"type":"text","text":". Returns "},{"code":"true","type":"codeVoice"},{"type":"text","text":" if the permission has been successfully granted."}],"role":"symbol","title":"requestPermission(name:)","url":"\/documentation\/swiftgodot\/os\/requestpermission(name:)","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"requestPermission"},{"kind":"text","text":"("},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/requestPermission(name:)"},"doc://SwiftGodot/documentation/SwiftGodot/OS/setUseFileAccessSaveAndSwap(enabled:)":{"type":"topic","role":"symbol","abstract":[{"type":"text","text":"If "},{"code":"enabled","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"true"},{"text":", when opening a file for writing, a temporary file is used in its place. When closed, it is automatically applied to the target file.","type":"text"}],"kind":"symbol","title":"setUseFileAccessSaveAndSwap(enabled:)","url":"\/documentation\/swiftgodot\/os\/setusefileaccesssaveandswap(enabled:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"setUseFileAccessSaveAndSwap","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"enabled"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":")","kind":"text"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/setUseFileAccessSaveAndSwap(enabled:)"},"doc://SwiftGodot/documentation/SwiftGodot/OS/shared":{"role":"symbol","type":"topic","url":"\/documentation\/swiftgodot\/os\/shared","abstract":[{"text":"The shared instance of this class","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"shared"},{"text":": ","kind":"text"},{"text":"OS","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot2OSC"}],"title":"shared","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/shared"},"doc://SwiftGodot/documentation/SwiftGodot/OS/getProcessId()":{"kind":"symbol","title":"getProcessId()","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/getProcessId()","type":"topic","role":"symbol","abstract":[{"text":"Returns the number used by the host machine to uniquely identify this application.","type":"text"}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getProcessId","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:s5Int32V","text":"Int32","kind":"typeIdentifier"}],"url":"\/documentation\/swiftgodot\/os\/getprocessid()"},"doc://SwiftGodot/documentation/SwiftGodot/OS/getGrantedPermissions()":{"url":"\/documentation\/swiftgodot\/os\/getgrantedpermissions()","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getGrantedPermissions","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"PackedStringArray","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot17PackedStringArrayC"}],"type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/getGrantedPermissions()","abstract":[{"type":"text","text":"On Android devices: Returns the list of dangerous permissions that have been granted."}],"title":"getGrantedPermissions()","kind":"symbol","role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/OS/shellOpen(uri:)":{"kind":"symbol","title":"shellOpen(uri:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"shellOpen"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"uri"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot0B5ErrorO","text":"GodotError"}],"url":"\/documentation\/swiftgodot\/os\/shellopen(uri:)","role":"symbol","abstract":[{"type":"text","text":"Requests the OS to open a resource identified by "},{"code":"uri","type":"codeVoice"},{"text":" with the most appropriate program. For example:","type":"text"}],"type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/shellOpen(uri:)"},"doc://SwiftGodot/s12IdentifiableP":{"title":"Swift.Identifiable","type":"unresolvable","identifier":"doc:\/\/SwiftGodot\/s12IdentifiableP"},"doc://SwiftGodot/documentation/SwiftGodot/OS/getLocaleLanguage()":{"kind":"symbol","type":"topic","abstract":[{"text":"Returns the host OS locale’s 2 or 3-letter ","type":"text"},{"type":"text","text":"language code"},{"text":" as a string which should be consistent on all platforms. This is equivalent to extracting the ","type":"text"},{"code":"language","type":"codeVoice"},{"text":" part of the ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/getLocale()","isActive":true},{"text":" string.","type":"text"}],"role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"getLocaleLanguage","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"title":"getLocaleLanguage()","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/getLocaleLanguage()","url":"\/documentation\/swiftgodot\/os\/getlocalelanguage()"},"doc://SwiftGodot/documentation/SwiftGodot/OS/getVersion()":{"type":"topic","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"getVersion","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"}],"title":"getVersion()","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/getVersion()","url":"\/documentation\/swiftgodot\/os\/getversion()","role":"symbol","abstract":[{"text":"Returns the exact production and build version of the operating system. This is different from the branded version used in marketing. This helps to distinguish between different releases of operating systems, including minor versions, and insider and custom builds.","type":"text"}]},"doc://SwiftGodot/documentation/SwiftGodot/OS/getUserDataDir()":{"url":"\/documentation\/swiftgodot\/os\/getuserdatadir()","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"getUserDataDir"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"role":"symbol","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/getUserDataDir()","title":"getUserDataDir()","kind":"symbol","abstract":[{"text":"Returns the absolute directory path where user data is written (the ","type":"text"},{"type":"codeVoice","code":"user:\/\/"},{"type":"text","text":" directory in Godot). The path depends on the project name and "},{"code":"ProjectSettings\/application\/config\/useCustomUserDir","type":"codeVoice"},{"type":"text","text":"."}]},"doc://SwiftGodot/documentation/SwiftGodot/OS/createInstance(arguments:)":{"abstract":[{"type":"text","text":"Creates a new instance of Godot that runs independently. The "},{"code":"arguments","type":"codeVoice"},{"text":" are used in the given order and separated by a space.","type":"text"}],"type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"createInstance","kind":"identifier"},{"kind":"text","text":"("},{"text":"arguments","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"PackedStringArray","preciseIdentifier":"s:10SwiftGodot17PackedStringArrayC","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s5Int32V","text":"Int32","kind":"typeIdentifier"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/createInstance(arguments:)","url":"\/documentation\/swiftgodot\/os\/createinstance(arguments:)","title":"createInstance(arguments:)","role":"symbol","kind":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/OS/getCmdlineArgs()":{"abstract":[{"type":"text","text":"Returns the command-line arguments passed to the engine."}],"url":"\/documentation\/swiftgodot\/os\/getcmdlineargs()","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getCmdlineArgs"},{"text":"() -> ","kind":"text"},{"text":"PackedStringArray","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot17PackedStringArrayC"}],"kind":"symbol","role":"symbol","title":"getCmdlineArgs()","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/getCmdlineArgs()"},"doc://SwiftGodot/documentation/SwiftGodot/Key":{"abstract":[],"kind":"symbol","role":"symbol","url":"\/documentation\/swiftgodot\/key","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Key"}],"type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Key","title":"Key","navigatorTitle":[{"text":"Key","kind":"identifier"}]},"doc://SwiftGodot/documentation/SwiftGodot/OS/getProcessorName()":{"title":"getProcessorName()","url":"\/documentation\/swiftgodot\/os\/getprocessorname()","kind":"symbol","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/getProcessorName()","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"getProcessorName","kind":"identifier"},{"kind":"text","text":"() -> "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"abstract":[{"type":"text","text":"Returns the full name of the CPU model on the host machine (e.g. "},{"code":"\"Intel(R) Core(TM) i7-6700K CPU @ 4.00GHz\"","type":"codeVoice"},{"type":"text","text":")."}]},"doc://SwiftGodot/documentation/SwiftGodot/OS/unsetEnvironment(variable:)":{"title":"unsetEnvironment(variable:)","url":"\/documentation\/swiftgodot\/os\/unsetenvironment(variable:)","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"unsetEnvironment","kind":"identifier"},{"text":"(","kind":"text"},{"text":"variable","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":")"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/unsetEnvironment(variable:)","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Removes the given environment variable from the current environment, if it exists. The "},{"code":"variable","type":"codeVoice"},{"text":" name cannot be empty or include the ","type":"text"},{"type":"codeVoice","code":"="},{"text":" character. The environment variable will be removed for the Godot process and any process executed with ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/execute(path:arguments:output:readStderr:openConsole:)","isActive":true},{"text":" after running ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/unsetEnvironment(variable:)","isActive":true,"type":"reference"},{"text":". The removal of the environment variable will ","type":"text"},{"inlineContent":[{"type":"text","text":"not"}],"type":"emphasis"},{"type":"text","text":" persist to processes run after the Godot process was terminated."}]},"doc://SwiftGodot/documentation/SwiftGodot/OS/isUserfsPersistent()":{"type":"topic","title":"isUserfsPersistent()","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/isUserfsPersistent()","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"isUserfsPersistent","kind":"identifier"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"abstract":[{"text":"Returns ","type":"text"},{"code":"true","type":"codeVoice"},{"type":"text","text":" if the "},{"type":"codeVoice","code":"user:\/\/"},{"text":" file system is persistent, that is, its state is the same after a player quits and starts the game again. Relevant to the Web platform, where this persistence may be unavailable.","type":"text"}],"url":"\/documentation\/swiftgodot\/os\/isuserfspersistent()"},"doc://SwiftGodot/documentation/SwiftGodot/VariantStorable":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/VariantStorable","abstract":[{"text":"Types that conform to VariantStorable can be stored in a Variant and can be extracted","type":"text"},{"type":"text","text":" "},{"text":"back out of a Variant.","type":"text"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"VariantStorable"}],"type":"topic","url":"\/documentation\/swiftgodot\/variantstorable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"VariantStorable"}],"title":"VariantStorable","role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/OS/godotClassName":{"url":"\/documentation\/swiftgodot\/os\/godotclassname","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"godotClassName","kind":"identifier"},{"kind":"text","text":": "},{"text":"StringName","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot10StringNameC"}],"type":"topic","kind":"symbol","title":"godotClassName","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/godotClassName","abstract":[],"role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/OS/getCmdlineUserArgs()":{"kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/getCmdlineUserArgs()","role":"symbol","url":"\/documentation\/swiftgodot\/os\/getcmdlineuserargs()","title":"getCmdlineUserArgs()","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"getCmdlineUserArgs"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot17PackedStringArrayC","text":"PackedStringArray","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Returns the command-line user arguments passed to the engine. User arguments are ignored by the engine and reserved for the user. They are passed after the double dash "},{"type":"codeVoice","code":"--"},{"type":"text","text":" argument. "},{"type":"codeVoice","code":"++"},{"text":" may be used when ","type":"text"},{"type":"codeVoice","code":"--"},{"type":"text","text":" is intercepted by another program (such as "},{"type":"codeVoice","code":"startx"},{"type":"text","text":")."}]},"doc://SwiftGodot/documentation/SwiftGodot/OS/RenderingDriver":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/RenderingDriver","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"RenderingDriver","kind":"identifier"}],"role":"symbol","url":"\/documentation\/swiftgodot\/os\/renderingdriver","kind":"symbol","navigatorTitle":[{"text":"RenderingDriver","kind":"identifier"}],"abstract":[],"type":"topic","title":"OS.RenderingDriver"},"doc://SwiftGodot/documentation/SwiftGodot/OS/deltaSmoothing":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/deltaSmoothing","title":"deltaSmoothing","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"If "},{"type":"codeVoice","code":"true"},{"type":"text","text":", the engine filters the time delta measured between each frame, and attempts to compensate for random variation. This only works on systems where V-Sync is active."}],"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"deltaSmoothing"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"url":"\/documentation\/swiftgodot\/os\/deltasmoothing","type":"topic"},"doc://SwiftGodot/documentation/SwiftGodot/OS/getSystemFonts()":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getSystemFonts"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:10SwiftGodot17PackedStringArrayC","kind":"typeIdentifier","text":"PackedStringArray"}],"url":"\/documentation\/swiftgodot\/os\/getsystemfonts()","title":"getSystemFonts()","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/getSystemFonts()","abstract":[{"type":"text","text":"Returns the list of font family names available."}],"kind":"symbol","type":"topic","role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/OS/getVideoAdapterDriverInfo()":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"getVideoAdapterDriverInfo","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot17PackedStringArrayC","text":"PackedStringArray"}],"title":"getVideoAdapterDriverInfo()","type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/getVideoAdapterDriverInfo()","abstract":[{"text":"Returns the video adapter driver name and version for the user’s currently active graphics card, as a ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PackedStringArray"},{"type":"text","text":". See also "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/RenderingServer\/getVideoAdapterApiVersion()","isActive":true},{"type":"text","text":"."}],"url":"\/documentation\/swiftgodot\/os\/getvideoadapterdriverinfo()"},"doc://SwiftGodot/documentation/SwiftGodot/OS/readStringFromStdin()":{"role":"symbol","url":"\/documentation\/swiftgodot\/os\/readstringfromstdin()","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"readStringFromStdin"},{"kind":"text","text":"() -> "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"kind":"symbol","title":"readStringFromStdin()","abstract":[{"text":"Reads a user input string from the standard input (usually the terminal). This operation is ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"blocking"}]},{"text":", which causes the window to freeze if ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/readStringFromStdin()"},{"text":" is called on the main thread. The thread calling ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/readStringFromStdin()"},{"type":"text","text":" will block until the program receives a line break in standard input (usually by the user pressing [kbd]Enter[\/kbd])."}],"type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/OS\/readStringFromStdin()"}}}
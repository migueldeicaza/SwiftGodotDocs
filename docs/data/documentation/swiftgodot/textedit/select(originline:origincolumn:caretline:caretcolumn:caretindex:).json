{"metadata":{"symbolKind":"method","roleHeading":"Instance Method","title":"select(originLine:originColumn:caretLine:caretColumn:caretIndex:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"select","kind":"identifier"},{"kind":"text","text":"("},{"text":"originLine","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V","text":"Int32"},{"kind":"text","text":", "},{"text":"originColumn","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V","text":"Int32"},{"kind":"text","text":", "},{"kind":"externalParam","text":"caretLine"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s5Int32V","text":"Int32","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"caretColumn"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s5Int32V","text":"Int32","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"caretIndex"},{"kind":"text","text":": "},{"text":"Int32","kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V"},{"text":")","kind":"text"}],"externalID":"s:10SwiftGodot8TextEditC6select10originLine0F6Column05caretG00iH00I5Indexys5Int32V_A4KtF","modules":[{"name":"SwiftGodot"}]},"variants":[{"paths":["\/documentation\/swiftgodot\/textedit\/select(originline:origincolumn:caretline:caretcolumn:caretindex:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/TextEdit\/select(originLine:originColumn:caretLine:caretColumn:caretIndex:)"},"hierarchy":{"paths":[["doc:\/\/SwiftGodot\/documentation\/SwiftGodot","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/TextEdit"]]},"abstract":[{"type":"text","text":"Selects text from "},{"code":"originLine","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"originColumn"},{"text":" to ","type":"text"},{"code":"caretLine","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"caretColumn","type":"codeVoice"},{"text":" for the given ","type":"text"},{"type":"codeVoice","code":"caretIndex"},{"type":"text","text":". This moves the selection origin and the caret. If the positions are the same, the selection will be deselected."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"select"},{"text":"(","kind":"text"},{"text":"originLine","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"},{"text":", ","kind":"text"},{"text":"originColumn","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier","text":"Int32"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"caretLine"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"},{"kind":"text","text":", "},{"kind":"externalParam","text":"caretColumn"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s5Int32V","text":"Int32","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"caretIndex","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"},{"text":" = 0)","kind":"text"}],"platforms":["macOS"]}]},{"content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/TextEdit\/selectingEnabled"},{"type":"text","text":" is "},{"code":"false","type":"codeVoice"},{"type":"text","text":", no selection will occur."}]},{"style":"note","type":"aside","content":[{"inlineContent":[{"type":"text","text":"If supporting multiple carets this will not check for any overlap. See "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/TextEdit\/mergeOverlappingCarets()","type":"reference","isActive":true},{"text":".","type":"text"}],"type":"paragraph"}],"name":"Note"}],"kind":"content"}],"references":{"doc://SwiftGodot/documentation/SwiftGodot/TextEdit/selectingEnabled":{"abstract":[{"text":"If ","type":"text"},{"type":"codeVoice","code":"true"},{"type":"text","text":", text can be selected."}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/TextEdit\/selectingEnabled","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"selectingEnabled","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/swiftgodot\/textedit\/selectingenabled","title":"selectingEnabled"},"doc://SwiftGodot/documentation/SwiftGodot":{"kind":"symbol","url":"\/documentation\/swiftgodot","abstract":[{"type":"text","text":"Framework to write Godot Game Extensions using the Swift Programming Language."}],"role":"collection","title":"SwiftGodot","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot"},"doc://SwiftGodot/documentation/SwiftGodot/TextEdit/select(originLine:originColumn:caretLine:caretColumn:caretIndex:)":{"abstract":[{"type":"text","text":"Selects text from "},{"code":"originLine","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"originColumn"},{"type":"text","text":" to "},{"code":"caretLine","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"caretColumn","type":"codeVoice"},{"type":"text","text":" for the given "},{"code":"caretIndex","type":"codeVoice"},{"text":". This moves the selection origin and the caret. If the positions are the same, the selection will be deselected.","type":"text"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/TextEdit\/select(originLine:originColumn:caretLine:caretColumn:caretIndex:)","title":"select(originLine:originColumn:caretLine:caretColumn:caretIndex:)","url":"\/documentation\/swiftgodot\/textedit\/select(originline:origincolumn:caretline:caretcolumn:caretindex:)","kind":"symbol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"select","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"originLine"},{"text":": ","kind":"text"},{"text":"Int32","kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"originColumn"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s5Int32V","text":"Int32","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"caretLine","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int32","kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V"},{"kind":"text","text":", "},{"text":"caretColumn","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"},{"text":", ","kind":"text"},{"text":"caretIndex","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"},{"text":")","kind":"text"}]},"doc://SwiftGodot/documentation/SwiftGodot/TextEdit":{"title":"TextEdit","role":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/TextEdit","url":"\/documentation\/swiftgodot\/textedit","kind":"symbol","abstract":[{"type":"text","text":"A multiline text editor."}],"type":"topic","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"TextEdit","kind":"identifier"}],"navigatorTitle":[{"text":"TextEdit","kind":"identifier"}]},"doc://SwiftGodot/documentation/SwiftGodot/TextEdit/mergeOverlappingCarets()":{"type":"topic","url":"\/documentation\/swiftgodot\/textedit\/mergeoverlappingcarets()","kind":"symbol","abstract":[{"text":"Merges any overlapping carets. Will favor the newest caret, or the caret with a selection.","type":"text"}],"role":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/TextEdit\/mergeOverlappingCarets()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"mergeOverlappingCarets","kind":"identifier"},{"text":"()","kind":"text"}],"title":"mergeOverlappingCarets()"}}}
{"identifier":{"url":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/TextEdit\/collapseCarets(fromLine:fromColumn:toLine:toColumn:inclusive:)","interfaceLanguage":"swift"},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"collapseCarets","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"fromLine"},{"kind":"text","text":": "},{"text":"Int32","preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"fromColumn","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s5Int32V","text":"Int32","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"toLine"},{"text":": ","kind":"text"},{"text":"Int32","kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V"},{"text":", ","kind":"text"},{"text":"toColumn","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int32","kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V"},{"text":", ","kind":"text"},{"text":"inclusive","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"kind":"text","text":" = false)"}],"languages":["swift"],"platforms":["macOS"]}]},{"content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"code":"inclusive","type":"codeVoice"},{"type":"text","text":" applies to both ends."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/TextEdit\/isInMulitcaretEdit()"},{"type":"text","text":" is "},{"type":"codeVoice","code":"true"},{"type":"text","text":", carets that are collapsed will be "},{"type":"codeVoice","code":"true"},{"text":" for ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/TextEdit\/multicaretEditIgnoreCaret(caretIndex:)"},{"text":".","type":"text"}]},{"inlineContent":[{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/TextEdit\/mergeOverlappingCarets()","isActive":true},{"type":"text","text":" will be called if any carets were collapsed."}],"type":"paragraph"}],"kind":"content"}],"metadata":{"modules":[{"name":"SwiftGodot"}],"role":"symbol","symbolKind":"method","title":"collapseCarets(fromLine:fromColumn:toLine:toColumn:inclusive:)","externalID":"s:10SwiftGodot8TextEditC14collapseCarets8fromLine0G6Column02toH00jI09inclusiveys5Int32V_A3KSbtF","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"collapseCarets","kind":"identifier"},{"kind":"text","text":"("},{"text":"fromLine","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s5Int32V","text":"Int32","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"fromColumn","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V","text":"Int32"},{"kind":"text","text":", "},{"kind":"externalParam","text":"toLine"},{"kind":"text","text":": "},{"text":"Int32","kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V"},{"kind":"text","text":", "},{"text":"toColumn","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V","text":"Int32"},{"kind":"text","text":", "},{"kind":"externalParam","text":"inclusive"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":")","kind":"text"}]},"sections":[],"hierarchy":{"paths":[["doc:\/\/SwiftGodot\/documentation\/SwiftGodot","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/TextEdit"]]},"abstract":[{"type":"text","text":"Collapse all carets in the given range to the "},{"type":"codeVoice","code":"fromLine"},{"text":" and ","type":"text"},{"code":"fromColumn","type":"codeVoice"},{"type":"text","text":" position."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftgodot\/textedit\/collapsecarets(fromline:fromcolumn:toline:tocolumn:inclusive:)"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://SwiftGodot/documentation/SwiftGodot/TextEdit/collapseCarets(fromLine:fromColumn:toLine:toColumn:inclusive:)":{"type":"topic","title":"collapseCarets(fromLine:fromColumn:toLine:toColumn:inclusive:)","role":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/TextEdit\/collapseCarets(fromLine:fromColumn:toLine:toColumn:inclusive:)","url":"\/documentation\/swiftgodot\/textedit\/collapsecarets(fromline:fromcolumn:toline:tocolumn:inclusive:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"collapseCarets"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"fromLine"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s5Int32V","text":"Int32","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"fromColumn","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V","text":"Int32"},{"text":", ","kind":"text"},{"text":"toLine","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier","text":"Int32"},{"text":", ","kind":"text"},{"text":"toColumn","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier","text":"Int32"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"inclusive"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"text":"Collapse all carets in the given range to the ","type":"text"},{"code":"fromLine","type":"codeVoice"},{"type":"text","text":" and "},{"code":"fromColumn","type":"codeVoice"},{"text":" position.","type":"text"}]},"doc://SwiftGodot/documentation/SwiftGodot/TextEdit/isInMulitcaretEdit()":{"url":"\/documentation\/swiftgodot\/textedit\/isinmulitcaretedit()","type":"topic","abstract":[{"text":"Returns ","type":"text"},{"type":"codeVoice","code":"true"},{"text":" if a ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/TextEdit\/beginMulticaretEdit()","isActive":true,"type":"reference"},{"text":" has been called and ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/TextEdit\/endMulticaretEdit()","type":"reference"},{"type":"text","text":" has not yet been called."}],"role":"symbol","title":"isInMulitcaretEdit()","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/TextEdit\/isInMulitcaretEdit()","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"isInMulitcaretEdit","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}]},"doc://SwiftGodot/documentation/SwiftGodot/TextEdit":{"title":"TextEdit","role":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/TextEdit","url":"\/documentation\/swiftgodot\/textedit","kind":"symbol","abstract":[{"type":"text","text":"A multiline text editor."}],"type":"topic","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"TextEdit","kind":"identifier"}],"navigatorTitle":[{"text":"TextEdit","kind":"identifier"}]},"doc://SwiftGodot/documentation/SwiftGodot":{"kind":"symbol","url":"\/documentation\/swiftgodot","abstract":[{"type":"text","text":"Framework to write Godot Game Extensions using the Swift Programming Language."}],"role":"collection","title":"SwiftGodot","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot"},"doc://SwiftGodot/documentation/SwiftGodot/TextEdit/mergeOverlappingCarets()":{"type":"topic","url":"\/documentation\/swiftgodot\/textedit\/mergeoverlappingcarets()","kind":"symbol","abstract":[{"text":"Merges any overlapping carets. Will favor the newest caret, or the caret with a selection.","type":"text"}],"role":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/TextEdit\/mergeOverlappingCarets()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"mergeOverlappingCarets","kind":"identifier"},{"text":"()","kind":"text"}],"title":"mergeOverlappingCarets()"},"doc://SwiftGodot/documentation/SwiftGodot/TextEdit/beginMulticaretEdit()":{"url":"\/documentation\/swiftgodot\/textedit\/beginmulticaretedit()","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"beginMulticaretEdit","kind":"identifier"},{"text":"()","kind":"text"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/TextEdit\/beginMulticaretEdit()","title":"beginMulticaretEdit()","abstract":[{"type":"text","text":"Starts an edit for multiple carets. The edit must be ended with "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/TextEdit\/endMulticaretEdit()"},{"text":". Multicaret edits can be used to edit text at multiple carets and delay merging the carets until the end, so the caret indexes arenâ€™t affected immediately. ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/TextEdit\/beginMulticaretEdit()","isActive":true},{"text":" and ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/TextEdit\/endMulticaretEdit()"},{"text":" can be nested, and the merge will happen at the last ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/TextEdit\/endMulticaretEdit()"},{"text":".","type":"text"}],"role":"symbol","type":"topic"},"doc://SwiftGodot/documentation/SwiftGodot/TextEdit/endMulticaretEdit()":{"type":"topic","url":"\/documentation\/swiftgodot\/textedit\/endmulticaretedit()","kind":"symbol","abstract":[{"text":"Ends an edit for multiple carets, that was started with ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/TextEdit\/beginMulticaretEdit()","isActive":true},{"text":". If this was the last ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/TextEdit\/endMulticaretEdit()"},{"text":" and ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/TextEdit\/mergeOverlappingCarets()"},{"text":" was called, carets will be merged.","type":"text"}],"role":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/TextEdit\/endMulticaretEdit()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"endMulticaretEdit"},{"text":"()","kind":"text"}],"title":"endMulticaretEdit()"},"doc://SwiftGodot/documentation/SwiftGodot/TextEdit/multicaretEditIgnoreCaret(caretIndex:)":{"url":"\/documentation\/swiftgodot\/textedit\/multicareteditignorecaret(caretindex:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"multicaretEditIgnoreCaret","kind":"identifier"},{"text":"(","kind":"text"},{"text":"caretIndex","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int32","kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/TextEdit\/multicaretEditIgnoreCaret(caretIndex:)","title":"multicaretEditIgnoreCaret(caretIndex:)","abstract":[{"text":"Returns ","type":"text"},{"code":"true","type":"codeVoice"},{"text":" if the given ","type":"text"},{"type":"codeVoice","code":"caretIndex"},{"text":" should be ignored as part of a multicaret edit. See ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/TextEdit\/beginMulticaretEdit()"},{"text":" and ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/TextEdit\/endMulticaretEdit()","isActive":true},{"text":". Carets that should be ignored are ones that were part of removed text and will likely be merged at the end of the edit, or carets that were added during the edit.","type":"text"}],"role":"symbol","type":"topic"}}}
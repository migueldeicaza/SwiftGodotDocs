{"topicSections":[{"identifiers":["doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeerDTLS\/connectToPeer(packetPeer:hostname:clientOptions:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeerDTLS\/disconnectFromPeer()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeerDTLS\/getStatus()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeerDTLS\/poll()"],"generated":true,"anchor":"Instance-Methods","title":"Instance Methods"},{"generated":true,"title":"Type Properties","identifiers":["doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeerDTLS\/godotClassName"],"anchor":"Type-Properties"},{"title":"Enumerations","anchor":"Enumerations","identifiers":["doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeerDTLS\/Status"],"generated":true}],"metadata":{"title":"PacketPeerDTLS","symbolKind":"class","role":"symbol","externalID":"s:10SwiftGodot14PacketPeerDTLSC","navigatorTitle":[{"text":"PacketPeerDTLS","kind":"identifier"}],"modules":[{"name":"SwiftGodot"}],"roleHeading":"Class","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"PacketPeerDTLS","kind":"identifier"}]},"kind":"symbol","relationshipsSections":[{"type":"inheritsFrom","kind":"relationships","title":"Inherits From","identifiers":["doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeer"]},{"kind":"relationships","identifiers":["doc:\/\/SwiftGodot\/s23CustomStringConvertibleP","doc:\/\/SwiftGodot\/SQ","doc:\/\/SwiftGodot\/SH","doc:\/\/SwiftGodot\/s12IdentifiableP","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/VariantRepresentable","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/VariantStorable"],"title":"Conforms To","type":"conformsTo"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/SwiftGodot\/documentation\/SwiftGodot"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PacketPeerDTLS"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"anchor":"overview","text":"Overview","type":"heading"},{"inlineContent":[{"type":"text","text":"This class represents a DTLS peer connection. It can be used to connect to a DTLS server, and is returned by "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/DTLSServer\/takeConnection(udpPeer:)","isActive":true},{"type":"text","text":"."}],"type":"paragraph"},{"name":"Note","style":"note","content":[{"inlineContent":[{"type":"text","text":"When exporting to Android, make sure to enable the "},{"type":"codeVoice","code":"INTERNET"},{"text":" permission in the Android export preset before exporting the project or using one-click deploy. Otherwise, network communication of any kind will be blocked by Android.","type":"text"}],"type":"paragraph"}],"type":"aside"},{"content":[{"inlineContent":[{"text":"TLS certificate revocation and certificate pinning are currently not supported. Revoked certificates are accepted as long as they are otherwise valid. If this is a concern, you may want to use automatically managed certificates with a short validity period.","type":"text"}],"type":"paragraph"}],"style":"warning","type":"aside","name":"Warning"}]}],"variants":[{"paths":["\/documentation\/swiftgodot\/packetpeerdtls"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"DTLS packet peer."}],"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"url":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeerDTLS","interfaceLanguage":"swift"},"references":{"doc://SwiftGodot/documentation/SwiftGodot/VariantStorable":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/VariantStorable","abstract":[{"text":"Types that conform to VariantStorable can be stored in a Variant and can be extracted","type":"text"},{"type":"text","text":" "},{"text":"back out of a Variant.","type":"text"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"VariantStorable"}],"type":"topic","url":"\/documentation\/swiftgodot\/variantstorable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"VariantStorable"}],"title":"VariantStorable","role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/TLSOptions/client(trustedChain:commonNameOverride:)":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"client"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"trustedChain"},{"text":": ","kind":"text"},{"text":"X509Certificate","preciseIdentifier":"s:10SwiftGodot15X509CertificateC","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"text":"commonNameOverride","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot10TLSOptionsC","kind":"typeIdentifier","text":"TLSOptions"},{"text":"?","kind":"text"}],"type":"topic","abstract":[{"text":"Creates a TLS client configuration which validates certificates and their common names (fully qualified domain names).","type":"text"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/TLSOptions\/client(trustedChain:commonNameOverride:)","url":"\/documentation\/swiftgodot\/tlsoptions\/client(trustedchain:commonnameoverride:)","kind":"symbol","title":"client(trustedChain:commonNameOverride:)","role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/PacketPeerUDP/connectToHost(_:port:)":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeerUDP\/connectToHost(_:port:)","title":"connectToHost(_:port:)","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"connectToHost"},{"text":"(","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"port","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"},{"kind":"text","text":") -> "},{"text":"GodotError","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot0B5ErrorO"}],"url":"\/documentation\/swiftgodot\/packetpeerudp\/connecttohost(_:port:)","kind":"symbol","abstract":[{"type":"text","text":"Calling this method connects this UDP peer to the given "},{"type":"codeVoice","code":"host"},{"type":"text","text":"\/"},{"type":"codeVoice","code":"port"},{"type":"text","text":" pair. UDP is in reality connectionless, so this option only means that incoming packets from different addresses are automatically discarded, and that outgoing packets are always sent to the connected address (future calls to "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeerUDP\/setDestAddress(host:port:)"},{"type":"text","text":" are not allowed). This method does not send any data to the remote peer, to do that, use "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeer\/putVar(_:fullObjects:)","isActive":true,"type":"reference"},{"type":"text","text":" or "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeer\/putPacket(buffer:)","isActive":true},{"text":" as usual. See also ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/UDPServer","type":"reference"},{"type":"text","text":"."}]},"doc://SwiftGodot/documentation/SwiftGodot/PacketPeerDTLS/poll()":{"role":"symbol","title":"poll()","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeerDTLS\/poll()","abstract":[{"text":"Poll the connection to check for incoming packets. Call this frequently to update the status and keep the connection working.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"poll"},{"text":"()","kind":"text"}],"url":"\/documentation\/swiftgodot\/packetpeerdtls\/poll()","kind":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/PacketPeerUDP":{"url":"\/documentation\/swiftgodot\/packetpeerudp","kind":"symbol","abstract":[{"type":"text","text":"UDP packet peer."}],"type":"topic","role":"symbol","navigatorTitle":[{"text":"PacketPeerUDP","kind":"identifier"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeerUDP","title":"PacketPeerUDP","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"PacketPeerUDP","kind":"identifier"}]},"doc://SwiftGodot/documentation/SwiftGodot/PacketPeer":{"navigatorTitle":[{"text":"PacketPeer","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"Abstraction and base class for packet-based protocols."}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeer","title":"PacketPeer","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PacketPeer","kind":"identifier"}],"url":"\/documentation\/swiftgodot\/packetpeer","type":"topic","role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/DTLSServer/takeConnection(udpPeer:)":{"url":"\/documentation\/swiftgodot\/dtlsserver\/takeconnection(udppeer:)","abstract":[{"type":"text","text":"Try to initiate the DTLS handshake with the given "},{"type":"codeVoice","code":"udpPeer"},{"type":"text","text":" which must be already connected (see "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeerUDP\/connectToHost(_:port:)","isActive":true},{"text":").","type":"text"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/DTLSServer\/takeConnection(udpPeer:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"takeConnection","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"udpPeer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot13PacketPeerUDPC","text":"PacketPeerUDP"},{"kind":"text","text":"?) -> "},{"text":"PacketPeerDTLS","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot14PacketPeerDTLSC"},{"kind":"text","text":"?"}],"kind":"symbol","role":"symbol","title":"takeConnection(udpPeer:)"},"doc://SwiftGodot/documentation/SwiftGodot/PacketPeerDTLS/godotClassName":{"abstract":[],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"godotClassName","kind":"identifier"},{"kind":"text","text":": "},{"text":"StringName","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot10StringNameC"}],"kind":"symbol","type":"topic","url":"\/documentation\/swiftgodot\/packetpeerdtls\/godotclassname","title":"godotClassName","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeerDTLS\/godotClassName","role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/PacketPeerDTLS":{"abstract":[{"text":"DTLS packet peer.","type":"text"}],"type":"topic","role":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeerDTLS","url":"\/documentation\/swiftgodot\/packetpeerdtls","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"PacketPeerDTLS"}],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"PacketPeerDTLS","kind":"identifier"}],"title":"PacketPeerDTLS"},"doc://SwiftGodot/documentation/SwiftGodot/PacketPeerDTLS/connectToPeer(packetPeer:hostname:clientOptions:)":{"url":"\/documentation\/swiftgodot\/packetpeerdtls\/connecttopeer(packetpeer:hostname:clientoptions:)","kind":"symbol","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Connects a "},{"type":"codeVoice","code":"packetPeer"},{"type":"text","text":" beginning the DTLS handshake using the underlying "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeerUDP","isActive":true,"type":"reference"},{"type":"text","text":" which must be connected (see "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeerUDP\/connectToHost(_:port:)","type":"reference","isActive":true},{"text":"). You can optionally specify the ","type":"text"},{"code":"clientOptions","type":"codeVoice"},{"text":" to be used while verifying the TLS connections. See ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/TLSOptions\/client(trustedChain:commonNameOverride:)","type":"reference"},{"text":" and ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/TLSOptions\/clientUnsafe(trustedChain:)","isActive":true},{"type":"text","text":"."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"connectToPeer","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"packetPeer"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot13PacketPeerUDPC","kind":"typeIdentifier","text":"PacketPeerUDP"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"hostname"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"clientOptions"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot10TLSOptionsC","text":"TLSOptions"},{"kind":"text","text":"?) -> "},{"text":"GodotError","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot0B5ErrorO"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeerDTLS\/connectToPeer(packetPeer:hostname:clientOptions:)","title":"connectToPeer(packetPeer:hostname:clientOptions:)"},"doc://SwiftGodot/documentation/SwiftGodot/VariantRepresentable":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/VariantRepresentable","abstract":[{"type":"text","text":"Types that conform to VariantRepresentable can be stored directly in "},{"type":"codeVoice","code":"Variant"},{"type":"text","text":" "},{"type":"text","text":"with no conversion.  These include all of the Variant types from Godot (for"},{"text":" ","type":"text"},{"text":"example ","type":"text"},{"code":"GString","type":"codeVoice"},{"type":"text","text":", "},{"code":"Rect","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Plane","type":"codeVoice"},{"type":"text","text":"), Godot objects (those that subclass"},{"type":"text","text":" "},{"type":"text","text":"SwiftGodot.Object) as well as the built-in Swift types UInt8, Int64 and Double."}],"kind":"symbol","navigatorTitle":[{"text":"VariantRepresentable","kind":"identifier"}],"type":"topic","url":"\/documentation\/swiftgodot\/variantrepresentable","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"VariantRepresentable","kind":"identifier"}],"title":"VariantRepresentable","role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot":{"kind":"symbol","url":"\/documentation\/swiftgodot","abstract":[{"type":"text","text":"Framework to write Godot Game Extensions using the Swift Programming Language."}],"role":"collection","title":"SwiftGodot","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot"},"doc://SwiftGodot/documentation/SwiftGodot/PacketPeerDTLS/Status":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeerDTLS\/Status","url":"\/documentation\/swiftgodot\/packetpeerdtls\/status","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"Status","kind":"identifier"}],"type":"topic","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"Status"}],"title":"PacketPeerDTLS.Status","kind":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/TLSOptions/clientUnsafe(trustedChain:)":{"kind":"symbol","title":"clientUnsafe(trustedChain:)","role":"symbol","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/TLSOptions\/clientUnsafe(trustedChain:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"clientUnsafe","kind":"identifier"},{"text":"(","kind":"text"},{"text":"trustedChain","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot15X509CertificateC","text":"X509Certificate"},{"text":"?) -> ","kind":"text"},{"text":"TLSOptions","preciseIdentifier":"s:10SwiftGodot10TLSOptionsC","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"url":"\/documentation\/swiftgodot\/tlsoptions\/clientunsafe(trustedchain:)","abstract":[{"type":"text","text":"Creates an "},{"type":"strong","inlineContent":[{"type":"text","text":"unsafe"}]},{"text":" TLS client configuration where certificate validation is optional. You can optionally provide a valid ","type":"text"},{"type":"codeVoice","code":"trustedChain"},{"text":", but the common name of the certificates will never be checked. Using this configuration for purposes other than testing ","type":"text"},{"type":"strong","inlineContent":[{"text":"is not recommended","type":"text"}]},{"type":"text","text":"."}]},"doc://SwiftGodot/documentation/SwiftGodot/PacketPeerDTLS/getStatus()":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeerDTLS\/getStatus()","abstract":[{"text":"Returns the status of the connection. See ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeerDTLS\/Status","isActive":true,"type":"reference"},{"type":"text","text":" for values."}],"title":"getStatus()","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"getStatus"},{"text":"() -> ","kind":"text"},{"text":"PacketPeerDTLS","preciseIdentifier":"s:10SwiftGodot14PacketPeerDTLSC","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot14PacketPeerDTLSC6StatusO","text":"Status"}],"type":"topic","url":"\/documentation\/swiftgodot\/packetpeerdtls\/getstatus()","kind":"symbol"},"doc://SwiftGodot/SH":{"identifier":"doc:\/\/SwiftGodot\/SH","type":"unresolvable","title":"Swift.Hashable"},"doc://SwiftGodot/s23CustomStringConvertibleP":{"identifier":"doc:\/\/SwiftGodot\/s23CustomStringConvertibleP","type":"unresolvable","title":"Swift.CustomStringConvertible"},"doc://SwiftGodot/documentation/SwiftGodot/PacketPeerDTLS/disconnectFromPeer()":{"url":"\/documentation\/swiftgodot\/packetpeerdtls\/disconnectfrompeer()","abstract":[{"text":"Disconnects this peer, terminating the DTLS session.","type":"text"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeerDTLS\/disconnectFromPeer()","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"disconnectFromPeer"},{"kind":"text","text":"()"}],"kind":"symbol","role":"symbol","title":"disconnectFromPeer()"},"doc://SwiftGodot/SQ":{"title":"Swift.Equatable","identifier":"doc:\/\/SwiftGodot\/SQ","type":"unresolvable"},"doc://SwiftGodot/s12IdentifiableP":{"title":"Swift.Identifiable","identifier":"doc:\/\/SwiftGodot\/s12IdentifiableP","type":"unresolvable"}}}
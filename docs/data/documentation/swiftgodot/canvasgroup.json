{"variants":[{"paths":["\/documentation\/swiftgodot\/canvasgroup"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","identifier":{"url":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/CanvasGroup","interfaceLanguage":"swift"},"relationshipsSections":[{"title":"Inherits From","identifiers":["doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Node2D"],"type":"inheritsFrom","kind":"relationships"},{"title":"Conforms To","type":"conformsTo","kind":"relationships","identifiers":["doc:\/\/SwiftGodot\/s23CustomStringConvertibleP","doc:\/\/SwiftGodot\/SQ","doc:\/\/SwiftGodot\/SH","doc:\/\/SwiftGodot\/s12IdentifiableP","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/VariantRepresentable","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/VariantStorable"]}],"metadata":{"modules":[{"name":"SwiftGodot"}],"role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"CanvasGroup"}],"symbolKind":"class","roleHeading":"Class","externalID":"s:10SwiftGodot11CanvasGroupC","navigatorTitle":[{"kind":"identifier","text":"CanvasGroup"}],"title":"CanvasGroup"},"sections":[],"hierarchy":{"paths":[["doc:\/\/SwiftGodot\/documentation\/SwiftGodot"]]},"topicSections":[{"generated":true,"identifiers":["doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/CanvasGroup\/clearMargin","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/CanvasGroup\/fitMargin","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/CanvasGroup\/useMipmaps"],"anchor":"Instance-Properties","title":"Instance Properties"},{"anchor":"Type-Properties","title":"Type Properties","identifiers":["doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/CanvasGroup\/godotClassName"],"generated":true}],"abstract":[{"text":"Merges several 2D nodes into a single draw operation.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"CanvasGroup"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"type":"heading","anchor":"overview","text":"Overview","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Child "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/CanvasItem","type":"reference","isActive":true},{"type":"text","text":" nodes of a "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/CanvasGroup","isActive":true},{"type":"text","text":" are drawn as a single object. It allows to e.g. draw overlapping translucent 2D nodes without blending (set "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/CanvasItem\/selfModulate","type":"reference","isActive":true},{"text":" property of ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/CanvasGroup","isActive":true},{"text":" to achieve this effect).","type":"text"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/CanvasGroup"},{"type":"text","text":" uses a custom shader to read from the backbuffer to draw its children. Assigning a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Material"},{"text":" to the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/CanvasGroup"},{"text":" overrides the builtin shader. To duplicate the behavior of the builtin shader in a custom ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Shader","isActive":true},{"text":" use the following:","type":"text"}]}],"name":"Note","style":"note","type":"aside"},{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"Since ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/CanvasGroup","isActive":true,"type":"reference"},{"text":" and ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/CanvasItem\/clipChildren","type":"reference"},{"text":" both utilize the backbuffer, children of a ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/CanvasGroup","type":"reference","isActive":true},{"type":"text","text":" who have their "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/CanvasItem\/clipChildren"},{"text":" set to anything other than ","type":"text"},{"code":"CanvasItem\/ClipChildrenMode\/clipChildrenDisabled","type":"codeVoice"},{"text":" will not function correctly.","type":"text"}]}],"style":"note","name":"Note"}]}],"references":{"doc://SwiftGodot/documentation/SwiftGodot/CanvasItem/modulate":{"type":"topic","title":"modulate","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"modulate"},{"kind":"text","text":": "},{"text":"Color","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot5ColorV"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/CanvasItem\/modulate","url":"\/documentation\/swiftgodot\/canvasitem\/modulate","kind":"symbol","abstract":[{"text":"The color applied to this ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/CanvasItem"},{"text":". This property does affect child ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/CanvasItem"},{"text":"s, unlike ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/CanvasItem\/selfModulate"},{"type":"text","text":" which only affects the node itself."}],"role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/CanvasItem":{"url":"\/documentation\/swiftgodot\/canvasitem","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"CanvasItem","kind":"identifier"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/CanvasItem","title":"CanvasItem","abstract":[{"type":"text","text":"Abstract base class for everything in 2D space."}],"navigatorTitle":[{"text":"CanvasItem","kind":"identifier"}],"role":"symbol","type":"topic"},"doc://SwiftGodot/documentation/SwiftGodot/CanvasGroup/fitMargin":{"kind":"symbol","abstract":[{"type":"text","text":"Sets the size of a margin used to expand the drawable rect of this "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/CanvasGroup","isActive":true,"type":"reference"},{"type":"text","text":". The size of the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/CanvasGroup"},{"text":" is determined by fitting a rect around its children then expanding that rect by ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/CanvasGroup\/fitMargin","type":"reference"},{"type":"text","text":". This increases both the backbuffer area used and the area covered by the "},{"isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/CanvasGroup","type":"reference"},{"type":"text","text":" both of which can reduce performance. This should be kept as small as possible and should only be expanded when an increased size is needed (e.g. for custom shader effects)."}],"role":"symbol","url":"\/documentation\/swiftgodot\/canvasgroup\/fitmargin","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/CanvasGroup\/fitMargin","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"fitMargin","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"}],"type":"topic","title":"fitMargin"},"doc://SwiftGodot/documentation/SwiftGodot/Node2D":{"role":"symbol","abstract":[{"text":"A 2D game object, inherited by all 2D-related nodes. Has a position, rotation, scale, and Z index.","type":"text"}],"type":"topic","title":"Node2D","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Node2D","url":"\/documentation\/swiftgodot\/node2d","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"Node2D","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Node2D"}],"kind":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/CanvasGroup/useMipmaps":{"type":"topic","url":"\/documentation\/swiftgodot\/canvasgroup\/usemipmaps","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/CanvasGroup\/useMipmaps","abstract":[{"type":"text","text":"If "},{"code":"true","type":"codeVoice"},{"text":", calculates mipmaps for the backbuffer before drawing the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/CanvasGroup"},{"text":" so that mipmaps can be used in a custom ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/ShaderMaterial"},{"text":" attached to the ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/CanvasGroup","isActive":true,"type":"reference"},{"text":". Generating mipmaps has a performance cost so this should not be enabled unless required.","type":"text"}],"role":"symbol","title":"useMipmaps","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"useMipmaps"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}]},"doc://SwiftGodot/s23CustomStringConvertibleP":{"title":"Swift.CustomStringConvertible","type":"unresolvable","identifier":"doc:\/\/SwiftGodot\/s23CustomStringConvertibleP"},"doc://SwiftGodot/documentation/SwiftGodot/VariantStorable":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/VariantStorable","abstract":[{"text":"Types that conform to VariantStorable can be stored in a Variant and can be extracted","type":"text"},{"type":"text","text":" "},{"text":"back out of a Variant.","type":"text"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"VariantStorable"}],"type":"topic","url":"\/documentation\/swiftgodot\/variantstorable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"VariantStorable"}],"title":"VariantStorable","role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot":{"kind":"symbol","url":"\/documentation\/swiftgodot","abstract":[{"type":"text","text":"Framework to write Godot Game Extensions using the Swift Programming Language."}],"role":"collection","title":"SwiftGodot","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot"},"doc://SwiftGodot/documentation/SwiftGodot/CanvasGroup/clearMargin":{"type":"topic","url":"\/documentation\/swiftgodot\/canvasgroup\/clearmargin","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/CanvasGroup\/clearMargin","abstract":[{"text":"Sets the size of the margin used to expand the clearing rect of this ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/CanvasGroup"},{"text":". This expands the area of the backbuffer that will be used by the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/CanvasGroup"},{"text":". A smaller margin will reduce the area of the backbuffer used which can increase performance, however if ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/CanvasGroup\/useMipmaps","isActive":true,"type":"reference"},{"type":"text","text":" is enabled, a small margin may result in mipmap errors at the edge of the "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/CanvasGroup","isActive":true},{"text":". Accordingly, this should be left as small as possible, but should be increased if artifacts appear along the edges of the canvas group.","type":"text"}],"role":"symbol","title":"clearMargin","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"clearMargin"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sd","text":"Double"}]},"doc://SwiftGodot/documentation/SwiftGodot/CanvasGroup/godotClassName":{"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"godotClassName","kind":"identifier"},{"text":": ","kind":"text"},{"text":"StringName","preciseIdentifier":"s:10SwiftGodot10StringNameC","kind":"typeIdentifier"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/CanvasGroup\/godotClassName","type":"topic","url":"\/documentation\/swiftgodot\/canvasgroup\/godotclassname","abstract":[],"title":"godotClassName"},"doc://SwiftGodot/SQ":{"title":"Swift.Equatable","type":"unresolvable","identifier":"doc:\/\/SwiftGodot\/SQ"},"doc://SwiftGodot/documentation/SwiftGodot/VariantRepresentable":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/VariantRepresentable","abstract":[{"type":"text","text":"Types that conform to VariantRepresentable can be stored directly in "},{"type":"codeVoice","code":"Variant"},{"type":"text","text":" "},{"type":"text","text":"with no conversion.  These include all of the Variant types from Godot (for"},{"text":" ","type":"text"},{"text":"example ","type":"text"},{"code":"GString","type":"codeVoice"},{"type":"text","text":", "},{"code":"Rect","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Plane","type":"codeVoice"},{"type":"text","text":"), Godot objects (those that subclass"},{"type":"text","text":" "},{"type":"text","text":"SwiftGodot.Object) as well as the built-in Swift types UInt8, Int64 and Double."}],"kind":"symbol","navigatorTitle":[{"text":"VariantRepresentable","kind":"identifier"}],"type":"topic","url":"\/documentation\/swiftgodot\/variantrepresentable","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"VariantRepresentable","kind":"identifier"}],"title":"VariantRepresentable","role":"symbol"},"doc://SwiftGodot/SH":{"title":"Swift.Hashable","type":"unresolvable","identifier":"doc:\/\/SwiftGodot\/SH"},"doc://SwiftGodot/documentation/SwiftGodot/ShaderMaterial":{"abstract":[{"text":"A material defined by a custom ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Shader","type":"reference"},{"type":"text","text":" program and the values of its shader parameters."}],"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"ShaderMaterial","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"ShaderMaterial"}],"url":"\/documentation\/swiftgodot\/shadermaterial","kind":"symbol","title":"ShaderMaterial","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/ShaderMaterial","type":"topic"},"doc://SwiftGodot/documentation/SwiftGodot/Material":{"url":"\/documentation\/swiftgodot\/material","abstract":[{"text":"Virtual base class for applying visual properties to an object, such as color and roughness.","type":"text"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Material","title":"Material","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Material"}],"navigatorTitle":[{"text":"Material","kind":"identifier"}],"type":"topic","kind":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/CanvasItem/selfModulate":{"type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/CanvasItem\/selfModulate","title":"selfModulate","url":"\/documentation\/swiftgodot\/canvasitem\/selfmodulate","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"The color applied to this "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/CanvasItem"},{"text":". This property does ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"not"}]},{"text":" affect child ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/CanvasItem","type":"reference","isActive":true},{"text":"s, unlike ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/CanvasItem\/modulate","type":"reference"},{"type":"text","text":" which affects both the node itself and its children."}],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"selfModulate"},{"kind":"text","text":": "},{"text":"Color","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot5ColorV"}]},"doc://SwiftGodot/documentation/SwiftGodot/CanvasGroup":{"kind":"symbol","title":"CanvasGroup","type":"topic","url":"\/documentation\/swiftgodot\/canvasgroup","navigatorTitle":[{"kind":"identifier","text":"CanvasGroup"}],"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CanvasGroup"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/CanvasGroup","abstract":[{"type":"text","text":"Merges several 2D nodes into a single draw operation."}]},"doc://SwiftGodot/documentation/SwiftGodot/Shader":{"url":"\/documentation\/swiftgodot\/shader","abstract":[{"text":"A shader implemented in the Godot shading language.","type":"text"}],"title":"Shader","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Shader","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"Shader","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Shader"}],"type":"topic","kind":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/CanvasItem/clipChildren":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"clipChildren","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot10CanvasItemC","text":"CanvasItem"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot10CanvasItemC16ClipChildrenModeO","text":"ClipChildrenMode"}],"kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/CanvasItem\/clipChildren","type":"topic","abstract":[{"text":"Allows the current node to clip child nodes, essentially acting as a mask.","type":"text"}],"title":"clipChildren","role":"symbol","url":"\/documentation\/swiftgodot\/canvasitem\/clipchildren"},"doc://SwiftGodot/s12IdentifiableP":{"title":"Swift.Identifiable","type":"unresolvable","identifier":"doc:\/\/SwiftGodot\/s12IdentifiableP"}}}
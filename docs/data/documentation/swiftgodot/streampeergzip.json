{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/StreamPeerGZIP"},"variants":[{"paths":["\/documentation\/swiftgodot\/streampeergzip"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/StreamPeer"],"title":"Inherits From","type":"inheritsFrom","kind":"relationships"},{"kind":"relationships","title":"Conforms To","type":"conformsTo","identifiers":["doc:\/\/SwiftGodot\/s23CustomStringConvertibleP","doc:\/\/SwiftGodot\/SQ","doc:\/\/SwiftGodot\/SH","doc:\/\/SwiftGodot\/s12IdentifiableP","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/VariantRepresentable","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/VariantStorable"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"type":"text","text":"A stream peer that handles GZIP and deflate compression\/decompression."}],"topicSections":[{"generated":true,"anchor":"Instance-Methods","identifiers":["doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/StreamPeerGZIP\/clear()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/StreamPeerGZIP\/finish()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/StreamPeerGZIP\/startCompression(useDeflate:bufferSize:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/StreamPeerGZIP\/startDecompression(useDeflate:bufferSize:)"],"title":"Instance Methods"},{"generated":true,"anchor":"Type-Properties","identifiers":["doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/StreamPeerGZIP\/godotClassName"],"title":"Type Properties"}],"metadata":{"title":"StreamPeerGZIP","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"StreamPeerGZIP"}],"externalID":"s:10SwiftGodot14StreamPeerGZIPC","symbolKind":"class","modules":[{"name":"SwiftGodot"}],"roleHeading":"Class","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"StreamPeerGZIP"}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"StreamPeerGZIP"}]}]},{"content":[{"type":"heading","text":"Overview","anchor":"overview","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"This class allows to compress or decompress data using GZIP\/deflate in a streaming fashion. This is particularly useful when compressing or decompressing files that have to be sent through the network without needing to allocate them all in memory."}]},{"type":"paragraph","inlineContent":[{"text":"After starting the stream via ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/StreamPeerGZIP\/startCompression(useDeflate:bufferSize:)","type":"reference","isActive":true},{"type":"text","text":" (or "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/StreamPeerGZIP\/startDecompression(useDeflate:bufferSize:)","isActive":true},{"type":"text","text":"), calling "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/StreamPeer\/putPartialData(_:)","isActive":true,"type":"reference"},{"text":" on this stream will compress (or decompress) the data, writing it to the internal buffer. Calling ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/StreamPeer\/getAvailableBytes()","type":"reference","isActive":true},{"text":" will return the pending bytes in the internal buffer, and ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/StreamPeer\/getPartialData(bytes:)","type":"reference","isActive":true},{"text":" will retrieve the compressed (or decompressed) bytes from it. When the stream is over, you must call ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/StreamPeerGZIP\/finish()","type":"reference"},{"type":"text","text":" to ensure the internal buffer is properly flushed (make sure to call "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/StreamPeer\/getAvailableBytes()","isActive":true,"type":"reference"},{"type":"text","text":" on last time to check if more data needs to be read after that)."}]}],"kind":"content"}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/SwiftGodot\/documentation\/SwiftGodot"]]},"sections":[],"references":{"doc://SwiftGodot/documentation/SwiftGodot/StreamPeerGZIP":{"kind":"symbol","abstract":[{"type":"text","text":"A stream peer that handles GZIP and deflate compression\/decompression."}],"url":"\/documentation\/swiftgodot\/streampeergzip","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/StreamPeerGZIP","role":"symbol","navigatorTitle":[{"text":"StreamPeerGZIP","kind":"identifier"}],"title":"StreamPeerGZIP","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"StreamPeerGZIP"}],"type":"topic"},"doc://SwiftGodot/documentation/SwiftGodot/StreamPeerGZIP/startCompression(useDeflate:bufferSize:)":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/StreamPeerGZIP\/startCompression(useDeflate:bufferSize:)","role":"symbol","url":"\/documentation\/swiftgodot\/streampeergzip\/startcompression(usedeflate:buffersize:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"startCompression","kind":"identifier"},{"text":"(","kind":"text"},{"text":"useDeflate","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":", "},{"text":"bufferSize","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier","text":"Int32"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot0B5ErrorO","text":"GodotError"}],"title":"startCompression(useDeflate:bufferSize:)","kind":"symbol","abstract":[{"type":"text","text":"Start the stream in compression mode with the given "},{"type":"codeVoice","code":"bufferSize"},{"text":", if ","type":"text"},{"type":"codeVoice","code":"useDeflate"},{"type":"text","text":" is "},{"code":"true","type":"codeVoice"},{"type":"text","text":" uses deflate instead of GZIP."}],"type":"topic"},"doc://SwiftGodot/documentation/SwiftGodot/VariantStorable":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/VariantStorable","abstract":[{"text":"Types that conform to VariantStorable can be stored in a Variant and can be extracted","type":"text"},{"type":"text","text":" "},{"text":"back out of a Variant.","type":"text"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"VariantStorable"}],"type":"topic","url":"\/documentation\/swiftgodot\/variantstorable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"VariantStorable"}],"title":"VariantStorable","role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/VariantRepresentable":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/VariantRepresentable","abstract":[{"type":"text","text":"Types that conform to VariantRepresentable can be stored directly in "},{"type":"codeVoice","code":"Variant"},{"type":"text","text":" "},{"type":"text","text":"with no conversion.  These include all of the Variant types from Godot (for"},{"text":" ","type":"text"},{"text":"example ","type":"text"},{"code":"GString","type":"codeVoice"},{"type":"text","text":", "},{"code":"Rect","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Plane","type":"codeVoice"},{"type":"text","text":"), Godot objects (those that subclass"},{"type":"text","text":" "},{"type":"text","text":"SwiftGodot.Object) as well as the built-in Swift types UInt8, Int64 and Double."}],"kind":"symbol","navigatorTitle":[{"text":"VariantRepresentable","kind":"identifier"}],"type":"topic","url":"\/documentation\/swiftgodot\/variantrepresentable","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"VariantRepresentable","kind":"identifier"}],"title":"VariantRepresentable","role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/StreamPeer/getPartialData(bytes:)":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"getPartialData","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"bytes"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier","text":"Int32"},{"kind":"text","text":") -> "},{"text":"GArray","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot6GArrayC"}],"url":"\/documentation\/swiftgodot\/streampeer\/getpartialdata(bytes:)","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/StreamPeer\/getPartialData(bytes:)","title":"getPartialData(bytes:)","abstract":[{"type":"text","text":"Returns a chunk data with the received bytes. The number of bytes to be received can be requested in the “bytes” argument. If not enough bytes are available, the function will return how many were actually received. This function returns two values, an "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GodotError"},{"text":" code, and a data array.","type":"text"}],"kind":"symbol","type":"topic","role":"symbol"},"doc://SwiftGodot/s12IdentifiableP":{"identifier":"doc:\/\/SwiftGodot\/s12IdentifiableP","title":"Swift.Identifiable","type":"unresolvable"},"doc://SwiftGodot/documentation/SwiftGodot/StreamPeerGZIP/startDecompression(useDeflate:bufferSize:)":{"title":"startDecompression(useDeflate:bufferSize:)","role":"symbol","kind":"symbol","url":"\/documentation\/swiftgodot\/streampeergzip\/startdecompression(usedeflate:buffersize:)","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/StreamPeerGZIP\/startDecompression(useDeflate:bufferSize:)","abstract":[{"text":"Start the stream in decompression mode with the given ","type":"text"},{"type":"codeVoice","code":"bufferSize"},{"type":"text","text":", if "},{"code":"useDeflate","type":"codeVoice"},{"type":"text","text":" is "},{"code":"true","type":"codeVoice"},{"text":" uses deflate instead of GZIP.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"startDecompression","kind":"identifier"},{"text":"(","kind":"text"},{"text":"useDeflate","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"bufferSize","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V","text":"Int32"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot0B5ErrorO","text":"GodotError","kind":"typeIdentifier"}]},"doc://SwiftGodot/SH":{"identifier":"doc:\/\/SwiftGodot\/SH","type":"unresolvable","title":"Swift.Hashable"},"doc://SwiftGodot/documentation/SwiftGodot/StreamPeer":{"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"StreamPeer","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"Abstract base class for interacting with streams."}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/StreamPeer","navigatorTitle":[{"kind":"identifier","text":"StreamPeer"}],"url":"\/documentation\/swiftgodot\/streampeer","kind":"symbol","title":"StreamPeer","role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/StreamPeerGZIP/finish()":{"type":"topic","role":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/StreamPeerGZIP\/finish()","url":"\/documentation\/swiftgodot\/streampeergzip\/finish()","abstract":[{"type":"text","text":"Finalizes the stream, compressing or decompressing any buffered chunk left."}],"title":"finish()","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"finish","kind":"identifier"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot0B5ErrorO","text":"GodotError"}]},"doc://SwiftGodot/SQ":{"identifier":"doc:\/\/SwiftGodot\/SQ","type":"unresolvable","title":"Swift.Equatable"},"doc://SwiftGodot/documentation/SwiftGodot/StreamPeer/putPartialData(_:)":{"type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/StreamPeer\/putPartialData(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"putPartialData"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot15PackedByteArrayC","text":"PackedByteArray"},{"text":") -> ","kind":"text"},{"text":"GArray","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot6GArrayC"}],"abstract":[{"type":"text","text":"Sends a chunk of data through the connection. If all the data could not be sent at once, only part of it will. This function returns two values, an "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GodotError","isActive":true},{"type":"text","text":" code and an integer, describing how much data was actually sent."}],"url":"\/documentation\/swiftgodot\/streampeer\/putpartialdata(_:)","title":"putPartialData(_:)","kind":"symbol","role":"symbol"},"doc://SwiftGodot/s23CustomStringConvertibleP":{"type":"unresolvable","title":"Swift.CustomStringConvertible","identifier":"doc:\/\/SwiftGodot\/s23CustomStringConvertibleP"},"doc://SwiftGodot/documentation/SwiftGodot/GodotError":{"title":"GodotError","url":"\/documentation\/swiftgodot\/godoterror","abstract":[],"type":"topic","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GodotError","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"GodotError","kind":"identifier"}],"navigatorTitle":[{"text":"GodotError","kind":"identifier"}]},"doc://SwiftGodot/documentation/SwiftGodot":{"kind":"symbol","url":"\/documentation\/swiftgodot","abstract":[{"type":"text","text":"Framework to write Godot Game Extensions using the Swift Programming Language."}],"role":"collection","title":"SwiftGodot","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot"},"doc://SwiftGodot/documentation/SwiftGodot/StreamPeerGZIP/godotClassName":{"abstract":[],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"godotClassName","kind":"identifier"},{"kind":"text","text":": "},{"text":"StringName","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot10StringNameC"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/StreamPeerGZIP\/godotClassName","type":"topic","role":"symbol","title":"godotClassName","url":"\/documentation\/swiftgodot\/streampeergzip\/godotclassname","kind":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/StreamPeer/getAvailableBytes()":{"role":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/StreamPeer\/getAvailableBytes()","abstract":[{"type":"text","text":"Returns the number of bytes this "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/StreamPeer"},{"type":"text","text":" has available."}],"kind":"symbol","url":"\/documentation\/swiftgodot\/streampeer\/getavailablebytes()","title":"getAvailableBytes()","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getAvailableBytes","kind":"identifier"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier","text":"Int32"}]},"doc://SwiftGodot/documentation/SwiftGodot/StreamPeerGZIP/clear()":{"type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/StreamPeerGZIP\/clear()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"clear","kind":"identifier"},{"text":"()","kind":"text"}],"abstract":[{"type":"text","text":"Clears this stream, resetting the internal state."}],"url":"\/documentation\/swiftgodot\/streampeergzip\/clear()","title":"clear()","kind":"symbol","role":"symbol"}}}
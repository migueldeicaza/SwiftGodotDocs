{"hierarchy":{"paths":[["doc:\/\/SwiftGodot\/documentation\/SwiftGodot","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/ENetConnection"]]},"sections":[],"identifier":{"url":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/ENetConnection\/refuseNewConnections(refuse:)","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","metadata":{"symbolKind":"method","roleHeading":"Instance Method","modules":[{"name":"SwiftGodot"}],"title":"refuseNewConnections(refuse:)","externalID":"s:10SwiftGodot14ENetConnectionC20refuseNewConnections0E0ySb_tF","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"refuseNewConnections","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"refuse"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":")","kind":"text"}]},"abstract":[{"text":"Configures the DTLS server to automatically drop new connections.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftgodot\/enetconnection\/refusenewconnections(refuse:)"]}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"refuseNewConnections","kind":"identifier"},{"text":"(","kind":"text"},{"text":"refuse","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":")"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"content":[{"inlineContent":[{"type":"text","text":"This method is only relevant after calling "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/ENetConnection\/dtlsServerSetup(serverOptions:)"},{"type":"text","text":"."}],"type":"paragraph"}],"name":"Note","type":"aside","style":"note"}],"kind":"content"}],"references":{"doc://SwiftGodot/documentation/SwiftGodot":{"kind":"symbol","url":"\/documentation\/swiftgodot","abstract":[{"type":"text","text":"Framework to write Godot Game Extensions using the Swift Programming Language."}],"role":"collection","title":"SwiftGodot","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot"},"doc://SwiftGodot/documentation/SwiftGodot/ENetConnection/createHostBound(bindAddress:bindPort:maxPeers:maxChannels:inBandwidth:outBandwidth:)":{"url":"\/documentation\/swiftgodot\/enetconnection\/createhostbound(bindaddress:bindport:maxpeers:maxchannels:inbandwidth:outbandwidth:)","title":"createHostBound(bindAddress:bindPort:maxPeers:maxChannels:inBandwidth:outBandwidth:)","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/ENetConnection\/createHostBound(bindAddress:bindPort:maxPeers:maxChannels:inBandwidth:outBandwidth:)","kind":"symbol","role":"symbol","abstract":[{"text":"Create an ENetHost like ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/ENetConnection\/createHost(maxPeers:maxChannels:inBandwidth:outBandwidth:)","type":"reference"},{"type":"text","text":" which is also bound to the given "},{"type":"codeVoice","code":"bindAddress"},{"type":"text","text":" and "},{"type":"codeVoice","code":"bindPort"},{"text":".","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"createHostBound","kind":"identifier"},{"text":"(","kind":"text"},{"text":"bindAddress","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"bindPort","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int32","kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V"},{"kind":"text","text":", "},{"text":"maxPeers","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int32","kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V"},{"kind":"text","text":", "},{"text":"maxChannels","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int32","kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V"},{"kind":"text","text":", "},{"text":"inBandwidth","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V","text":"Int32"},{"kind":"text","text":", "},{"kind":"externalParam","text":"outBandwidth"},{"text":": ","kind":"text"},{"text":"Int32","kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot0B5ErrorO","text":"GodotError"}],"type":"topic"},"doc://SwiftGodot/documentation/SwiftGodot/ENetConnection/dtlsServerSetup(serverOptions:)":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/ENetConnection\/dtlsServerSetup(serverOptions:)","url":"\/documentation\/swiftgodot\/enetconnection\/dtlsserversetup(serveroptions:)","title":"dtlsServerSetup(serverOptions:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"dtlsServerSetup"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"serverOptions"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot10TLSOptionsC","text":"TLSOptions","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot0B5ErrorO","text":"GodotError"}],"role":"symbol","abstract":[{"type":"text","text":"Configure this ENetHost to use the custom Godot extension allowing DTLS encryption for ENet servers. Call this right after "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/ENetConnection\/createHostBound(bindAddress:bindPort:maxPeers:maxChannels:inBandwidth:outBandwidth:)","type":"reference","isActive":true},{"type":"text","text":" to have ENet expect peers to connect using DTLS. See "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/TLSOptions\/server(key:certificate:)"},{"type":"text","text":"."}],"type":"topic","kind":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/ENetConnection/refuseNewConnections(refuse:)":{"url":"\/documentation\/swiftgodot\/enetconnection\/refusenewconnections(refuse:)","title":"refuseNewConnections(refuse:)","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/ENetConnection\/refuseNewConnections(refuse:)","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Configures the DTLS server to automatically drop new connections."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"refuseNewConnections","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"refuse"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic"},"doc://SwiftGodot/documentation/SwiftGodot/ENetConnection":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/ENetConnection","abstract":[{"text":"A wrapper class for an ","type":"text"},{"type":"text","text":"ENetHost"},{"type":"text","text":"."}],"kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ENetConnection"}],"title":"ENetConnection","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ENetConnection"}],"url":"\/documentation\/swiftgodot\/enetconnection","role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/TLSOptions/server(key:certificate:)":{"kind":"symbol","title":"server(key:certificate:)","role":"symbol","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/TLSOptions\/server(key:certificate:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"server","kind":"identifier"},{"kind":"text","text":"("},{"text":"key","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"CryptoKey","preciseIdentifier":"s:10SwiftGodot9CryptoKeyC"},{"text":"?, ","kind":"text"},{"text":"certificate","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"X509Certificate","preciseIdentifier":"s:10SwiftGodot15X509CertificateC","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot10TLSOptionsC","text":"TLSOptions"},{"kind":"text","text":"?"}],"url":"\/documentation\/swiftgodot\/tlsoptions\/server(key:certificate:)","abstract":[{"text":"Creates a TLS server configuration using the provided ","type":"text"},{"type":"codeVoice","code":"key"},{"text":" and ","type":"text"},{"code":"certificate","type":"codeVoice"},{"type":"text","text":"."}]}}}
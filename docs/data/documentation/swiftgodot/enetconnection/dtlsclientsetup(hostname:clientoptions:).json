{"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"dtlsClientSetup","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"hostname"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"clientOptions","kind":"externalParam"},{"kind":"text","text":": "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/TLSOptions","text":"TLSOptions","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot10TLSOptionsC"},{"kind":"text","text":"? = nil) -> "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GodotError","text":"GodotError","preciseIdentifier":"s:10SwiftGodot0B5ErrorO","kind":"typeIdentifier"}],"platforms":["macOS"]}]}],"variants":[{"paths":["\/documentation\/swiftgodot\/enetconnection\/dtlsclientsetup(hostname:clientoptions:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/SwiftGodot\/documentation\/SwiftGodot","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/ENetConnection"]]},"sections":[],"identifier":{"url":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/ENetConnection\/dtlsClientSetup(hostname:clientOptions:)","interfaceLanguage":"swift"},"metadata":{"modules":[{"name":"SwiftGodot"}],"symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"dtlsClientSetup","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"hostname"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"text":"clientOptions","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot10TLSOptionsC","kind":"typeIdentifier","text":"TLSOptions"},{"text":"?) -> ","kind":"text"},{"kind":"typeIdentifier","text":"GodotError","preciseIdentifier":"s:10SwiftGodot0B5ErrorO"}],"externalID":"s:10SwiftGodot14ENetConnectionC15dtlsClientSetup8hostname13clientOptionsAA0B5ErrorOSS_AA10TLSOptionsCSgtF","roleHeading":"Instance Method","title":"dtlsClientSetup(hostname:clientOptions:)","role":"symbol"},"schemaVersion":{"major":0,"patch":0,"minor":3},"abstract":[{"type":"text","text":"Configure this ENetHost to use the custom Godot extension allowing DTLS encryption for ENet clients. Call this before "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/ENetConnection\/connectToHost(address:port:channels:data:)"},{"type":"text","text":" to have ENet connect using DTLS validating the server certificate against "},{"type":"codeVoice","code":"hostname"},{"text":". You can pass the optional ","type":"text"},{"type":"codeVoice","code":"clientOptions"},{"type":"text","text":" parameter to customize the trusted certification authorities, or disable the common name verification. See "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/TLSOptions\/client(trustedChain:commonNameOverride:)","isActive":true},{"text":" and ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/TLSOptions\/clientUnsafe(trustedChain:)"},{"text":".","type":"text"}],"references":{"doc://SwiftGodot/documentation/SwiftGodot/ENetConnection":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/ENetConnection","abstract":[{"text":"A wrapper class for an ","type":"text"},{"type":"text","text":"ENetHost"},{"type":"text","text":"."}],"kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ENetConnection"}],"title":"ENetConnection","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ENetConnection"}],"url":"\/documentation\/swiftgodot\/enetconnection","role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/TLSOptions/clientUnsafe(trustedChain:)":{"kind":"symbol","title":"clientUnsafe(trustedChain:)","role":"symbol","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/TLSOptions\/clientUnsafe(trustedChain:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"clientUnsafe","kind":"identifier"},{"text":"(","kind":"text"},{"text":"trustedChain","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot15X509CertificateC","text":"X509Certificate"},{"text":"?) -> ","kind":"text"},{"text":"TLSOptions","preciseIdentifier":"s:10SwiftGodot10TLSOptionsC","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"url":"\/documentation\/swiftgodot\/tlsoptions\/clientunsafe(trustedchain:)","abstract":[{"type":"text","text":"Creates an "},{"type":"strong","inlineContent":[{"type":"text","text":"unsafe"}]},{"text":" TLS client configuration where certificate validation is optional. You can optionally provide a valid ","type":"text"},{"type":"codeVoice","code":"trustedChain"},{"text":", but the common name of the certificates will never be checked. Using this configuration for purposes other than testing ","type":"text"},{"type":"strong","inlineContent":[{"text":"is not recommended","type":"text"}]},{"type":"text","text":"."}]},"doc://SwiftGodot/documentation/SwiftGodot/GodotError":{"title":"GodotError","url":"\/documentation\/swiftgodot\/godoterror","abstract":[],"type":"topic","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GodotError","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"GodotError","kind":"identifier"}],"navigatorTitle":[{"text":"GodotError","kind":"identifier"}]},"doc://SwiftGodot/documentation/SwiftGodot/TLSOptions/client(trustedChain:commonNameOverride:)":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"client"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"trustedChain"},{"text":": ","kind":"text"},{"text":"X509Certificate","preciseIdentifier":"s:10SwiftGodot15X509CertificateC","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"text":"commonNameOverride","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot10TLSOptionsC","kind":"typeIdentifier","text":"TLSOptions"},{"text":"?","kind":"text"}],"type":"topic","abstract":[{"text":"Creates a TLS client configuration which validates certificates and their common names (fully qualified domain names).","type":"text"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/TLSOptions\/client(trustedChain:commonNameOverride:)","url":"\/documentation\/swiftgodot\/tlsoptions\/client(trustedchain:commonnameoverride:)","kind":"symbol","title":"client(trustedChain:commonNameOverride:)","role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot":{"kind":"symbol","url":"\/documentation\/swiftgodot","abstract":[{"type":"text","text":"Framework to write Godot Game Extensions using the Swift Programming Language."}],"role":"collection","title":"SwiftGodot","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot"},"doc://SwiftGodot/documentation/SwiftGodot/ENetConnection/dtlsClientSetup(hostname:clientOptions:)":{"kind":"symbol","role":"symbol","url":"\/documentation\/swiftgodot\/enetconnection\/dtlsclientsetup(hostname:clientoptions:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"dtlsClientSetup"},{"kind":"text","text":"("},{"text":"hostname","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"clientOptions"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10SwiftGodot10TLSOptionsC","text":"TLSOptions","kind":"typeIdentifier"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot0B5ErrorO","text":"GodotError"}],"type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/ENetConnection\/dtlsClientSetup(hostname:clientOptions:)","title":"dtlsClientSetup(hostname:clientOptions:)","abstract":[{"text":"Configure this ENetHost to use the custom Godot extension allowing DTLS encryption for ENet clients. Call this before ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/ENetConnection\/connectToHost(address:port:channels:data:)"},{"text":" to have ENet connect using DTLS validating the server certificate against ","type":"text"},{"type":"codeVoice","code":"hostname"},{"type":"text","text":". You can pass the optional "},{"type":"codeVoice","code":"clientOptions"},{"text":" parameter to customize the trusted certification authorities, or disable the common name verification. See ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/TLSOptions\/client(trustedChain:commonNameOverride:)"},{"type":"text","text":" and "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/TLSOptions\/clientUnsafe(trustedChain:)"},{"type":"text","text":"."}]},"doc://SwiftGodot/documentation/SwiftGodot/ENetConnection/connectToHost(address:port:channels:data:)":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/ENetConnection\/connectToHost(address:port:channels:data:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"connectToHost"},{"kind":"text","text":"("},{"text":"address","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"text":"port","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Int32","preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"channels"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier","text":"Int32"},{"text":", ","kind":"text"},{"text":"data","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int32","preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot14ENetPacketPeerC","text":"ENetPacketPeer"},{"text":"?","kind":"text"}],"abstract":[{"type":"text","text":"Initiates a connection to a foreign "},{"type":"codeVoice","code":"address"},{"type":"text","text":" using the specified "},{"type":"codeVoice","code":"port"},{"text":" and allocating the requested ","type":"text"},{"type":"codeVoice","code":"channels"},{"type":"text","text":". Optional "},{"type":"codeVoice","code":"data"},{"text":" can be passed during connection in the form of a 32 bit integer.","type":"text"}],"kind":"symbol","title":"connectToHost(address:port:channels:data:)","url":"\/documentation\/swiftgodot\/enetconnection\/connecttohost(address:port:channels:data:)","role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/TLSOptions":{"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"TLSOptions","kind":"identifier"}],"role":"symbol","abstract":[{"text":"TLS configuration for clients and servers.","type":"text"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/TLSOptions","url":"\/documentation\/swiftgodot\/tlsoptions","title":"TLSOptions","navigatorTitle":[{"kind":"identifier","text":"TLSOptions"}]}}}
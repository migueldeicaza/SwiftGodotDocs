{"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"decompressDynamic"},{"kind":"text","text":"("},{"text":"maxOutputSize","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int64V","text":"Int64"},{"text":", ","kind":"text"},{"text":"compressionMode","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int64","preciseIdentifier":"s:s5Int64V"},{"kind":"text","text":" = 0) -> "},{"preciseIdentifier":"s:10SwiftGodot15PackedByteArrayC","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PackedByteArray","kind":"typeIdentifier","text":"PackedByteArray"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"This method is potentially slower than ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PackedByteArray\/decompress(bufferSize:compressionMode:)","isActive":true,"type":"reference"},{"type":"text","text":", as it may have to re-allocate its output buffer multiple times while decompressing, whereas "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PackedByteArray\/decompress(bufferSize:compressionMode:)","isActive":true,"type":"reference"},{"text":" knows it’s output buffer size from the beginning.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"GZIP has a maximal compression ratio of 1032:1, meaning it’s very possible for a small compressed payload to decompress to a potentially very large output. To guard against this, you may provide a maximum size this function is allowed to allocate in bytes via "},{"code":"maxOutputSize","type":"codeVoice"},{"type":"text","text":". Passing -1 will allow for unbounded output. If any positive value is passed, and the decompression exceeds that amount in bytes, then an error will be returned."}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Decompression is not guaranteed to work with data not compressed by Godot, for example if data compressed with the deflate compression mode lacks a checksum or header."}]}],"type":"aside","name":"Note","style":"note"}]}],"sections":[],"kind":"symbol","abstract":[{"type":"text","text":"Returns a new "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PackedByteArray"},{"text":" with the data decompressed. Set the compression mode using one of ","type":"text"},{"code":"FileAccess.CompressionMode","type":"codeVoice"},{"type":"text","text":"’s constants. "},{"type":"strong","inlineContent":[{"text":"This method only accepts brotli, gzip, and deflate compression modes.","type":"text"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftgodot\/packedbytearray\/decompressdynamic(maxoutputsize:compressionmode:)"]}],"metadata":{"role":"symbol","symbolKind":"method","externalID":"s:10SwiftGodot15PackedByteArrayC17decompressDynamic13maxOutputSize15compressionModeACs5Int64V_AHtF","modules":[{"name":"SwiftGodot"}],"title":"decompressDynamic(maxOutputSize:compressionMode:)","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"decompressDynamic"},{"kind":"text","text":"("},{"text":"maxOutputSize","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int64V","text":"Int64"},{"kind":"text","text":", "},{"kind":"externalParam","text":"compressionMode"},{"kind":"text","text":": "},{"text":"Int64","kind":"typeIdentifier","preciseIdentifier":"s:s5Int64V"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:10SwiftGodot15PackedByteArrayC","text":"PackedByteArray","kind":"typeIdentifier"}]},"hierarchy":{"paths":[["doc:\/\/SwiftGodot\/documentation\/SwiftGodot","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PackedByteArray"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"url":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PackedByteArray\/decompressDynamic(maxOutputSize:compressionMode:)","interfaceLanguage":"swift"},"references":{"doc://SwiftGodot/documentation/SwiftGodot/PackedByteArray/decompress(bufferSize:compressionMode:)":{"type":"topic","abstract":[{"type":"text","text":"Returns a new "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PackedByteArray"},{"text":" with the data decompressed. Set ","type":"text"},{"type":"codeVoice","code":"bufferSize"},{"type":"text","text":" to the size of the uncompressed data. Set the compression mode using one of "},{"code":"FileAccess.CompressionMode","type":"codeVoice"},{"type":"text","text":"’s constants."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"decompress","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"bufferSize"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s5Int64V","text":"Int64","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"compressionMode"},{"text":": ","kind":"text"},{"text":"Int64","preciseIdentifier":"s:s5Int64V","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:10SwiftGodot15PackedByteArrayC","kind":"typeIdentifier","text":"PackedByteArray"}],"role":"symbol","url":"\/documentation\/swiftgodot\/packedbytearray\/decompress(buffersize:compressionmode:)","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PackedByteArray\/decompress(bufferSize:compressionMode:)","kind":"symbol","title":"decompress(bufferSize:compressionMode:)"},"doc://SwiftGodot/documentation/SwiftGodot":{"kind":"symbol","url":"\/documentation\/swiftgodot","abstract":[{"type":"text","text":"Framework to write Godot Game Extensions using the Swift Programming Language."}],"role":"collection","title":"SwiftGodot","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot"},"doc://SwiftGodot/documentation/SwiftGodot/PackedByteArray":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PackedByteArray","kind":"symbol","url":"\/documentation\/swiftgodot\/packedbytearray","navigatorTitle":[{"kind":"identifier","text":"PackedByteArray"}],"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PackedByteArray"}],"title":"PackedByteArray","abstract":[{"type":"text","text":"A packed array of bytes."}],"role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/PackedByteArray/decompressDynamic(maxOutputSize:compressionMode:)":{"role":"symbol","type":"topic","title":"decompressDynamic(maxOutputSize:compressionMode:)","url":"\/documentation\/swiftgodot\/packedbytearray\/decompressdynamic(maxoutputsize:compressionmode:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"decompressDynamic","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"maxOutputSize"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s5Int64V","text":"Int64","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"compressionMode"},{"text":": ","kind":"text"},{"text":"Int64","kind":"typeIdentifier","preciseIdentifier":"s:s5Int64V"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"PackedByteArray","preciseIdentifier":"s:10SwiftGodot15PackedByteArrayC"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PackedByteArray\/decompressDynamic(maxOutputSize:compressionMode:)","kind":"symbol","abstract":[{"type":"text","text":"Returns a new "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PackedByteArray","isActive":true},{"type":"text","text":" with the data decompressed. Set the compression mode using one of "},{"type":"codeVoice","code":"FileAccess.CompressionMode"},{"text":"’s constants. ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"This method only accepts brotli, gzip, and deflate compression modes."}]}]}}}
{"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"externalID":"s:10SwiftGodot4NodeC12findChildren7pattern4type9recursive5ownedAA16ObjectCollectionCyACGSS_SSS2btF","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"findChildren","kind":"identifier"},{"text":"(","kind":"text"},{"text":"pattern","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"type","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"recursive"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"owned"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot16ObjectCollectionC","text":"ObjectCollection","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Node","preciseIdentifier":"s:10SwiftGodot4NodeC"},{"text":">","kind":"text"}],"symbolKind":"method","role":"symbol","modules":[{"name":"SwiftGodot"}],"roleHeading":"Instance Method","title":"findChildren(pattern:type:recursive:owned:)"},"hierarchy":{"paths":[["doc:\/\/SwiftGodot\/documentation\/SwiftGodot","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Node"]]},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Node\/findChildren(pattern:type:recursive:owned:)"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftgodot\/node\/findchildren(pattern:type:recursive:owned:)"]}],"abstract":[{"text":"Finds all descendants of this node whose names match ","type":"text"},{"type":"codeVoice","code":"pattern"},{"text":", returning an empty ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GArray"},{"type":"text","text":" if no match is found. The matching is done against node names, "},{"inlineContent":[{"type":"text","text":"not"}],"type":"emphasis"},{"type":"text","text":" their paths, through "},{"type":"codeVoice","code":"String\/match(expr:)"},{"type":"text","text":". As such, it is case-sensitive, "},{"type":"codeVoice","code":"\"*\""},{"type":"text","text":" matches zero or more characters, and "},{"type":"codeVoice","code":"\"?\""},{"type":"text","text":" matches any single character."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"findChildren"},{"kind":"text","text":"("},{"text":"pattern","kind":"externalParam"},{"kind":"text","text":": "},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"type"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":" = \"\", ","kind":"text"},{"kind":"externalParam","text":"recursive"},{"kind":"text","text":": "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":" = true, ","kind":"text"},{"kind":"externalParam","text":"owned"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":" = true) -> ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/ObjectCollection","preciseIdentifier":"s:10SwiftGodot16ObjectCollectionC","text":"ObjectCollection"},{"kind":"text","text":"<"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Node","kind":"typeIdentifier","text":"Node","preciseIdentifier":"s:10SwiftGodot4NodeC"},{"kind":"text","text":">"}],"platforms":["macOS"]}]},{"content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"inlineContent":[{"text":"If ","type":"text"},{"type":"codeVoice","code":"type"},{"type":"text","text":" is not empty, only ancestors inheriting from "},{"type":"codeVoice","code":"type"},{"type":"text","text":" are included (see "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Object\/isClass(_:)","isActive":true},{"type":"text","text":")."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If "},{"code":"recursive","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"false","type":"codeVoice"},{"type":"text","text":", only this node’s direct children are checked. Nodes are checked in tree order, so this node’s first direct child is checked first, then its own direct children, etc., before moving to the second direct child, and so on. Internal children are also included in the search (see "},{"type":"codeVoice","code":"internal"},{"type":"text","text":" parameter in "},{"code":"addChild(node:forceReadableName:`internal`:)","type":"codeVoice"},{"type":"text","text":")."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If "},{"type":"codeVoice","code":"owned"},{"type":"text","text":" is "},{"code":"true","type":"codeVoice"},{"text":", only descendants with a valid ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Node\/owner"},{"type":"text","text":" node are checked."}]},{"name":"Note","content":[{"type":"paragraph","inlineContent":[{"text":"This method can be very slow. Consider storing references to the found nodes in a variable.","type":"text"}]}],"type":"aside","style":"note"},{"content":[{"inlineContent":[{"type":"text","text":"To find a single descendant node matching a pattern, see "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Node\/findChild(pattern:recursive:owned:)"},{"type":"text","text":"."}],"type":"paragraph"}],"type":"aside","name":"Note","style":"note"}],"kind":"content"}],"sections":[],"references":{"doc://SwiftGodot/documentation/SwiftGodot/Node/findChildren(pattern:type:recursive:owned:)":{"title":"findChildren(pattern:type:recursive:owned:)","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Node\/findChildren(pattern:type:recursive:owned:)","kind":"symbol","abstract":[{"type":"text","text":"Finds all descendants of this node whose names match "},{"code":"pattern","type":"codeVoice"},{"type":"text","text":", returning an empty "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GArray","isActive":true,"type":"reference"},{"text":" if no match is found. The matching is done against node names, ","type":"text"},{"inlineContent":[{"text":"not","type":"text"}],"type":"emphasis"},{"type":"text","text":" their paths, through "},{"type":"codeVoice","code":"String\/match(expr:)"},{"text":". As such, it is case-sensitive, ","type":"text"},{"code":"\"*\"","type":"codeVoice"},{"type":"text","text":" matches zero or more characters, and "},{"code":"\"?\"","type":"codeVoice"},{"text":" matches any single character.","type":"text"}],"role":"symbol","url":"\/documentation\/swiftgodot\/node\/findchildren(pattern:type:recursive:owned:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"findChildren"},{"text":"(","kind":"text"},{"text":"pattern","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"type","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"text":"recursive","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"owned","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"text":"ObjectCollection","preciseIdentifier":"s:10SwiftGodot16ObjectCollectionC","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Node","preciseIdentifier":"s:10SwiftGodot4NodeC"},{"text":">","kind":"text"}]},"doc://SwiftGodot/documentation/SwiftGodot/Node/owner":{"abstract":[{"text":"The owner of this node. The owner must be an ancestor of this node. When packing the owner node in a ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PackedScene","isActive":true,"type":"reference"},{"type":"text","text":", all the nodes it owns are also saved with it."}],"kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Node\/owner","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"owner"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10SwiftGodot4NodeC","text":"Node","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"url":"\/documentation\/swiftgodot\/node\/owner","title":"owner","type":"topic"},"doc://SwiftGodot/documentation/SwiftGodot/Node/name":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"name","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10SwiftGodot10StringNameC","kind":"typeIdentifier","text":"StringName"}],"url":"\/documentation\/swiftgodot\/node\/name","role":"symbol","title":"name","type":"topic","abstract":[{"type":"text","text":"The name of the node. This name must be unique among the siblings (other child nodes from the same parent). When set to an existing sibling’s name, the node is automatically renamed."}],"kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Node\/name"},"doc://SwiftGodot/documentation/SwiftGodot":{"kind":"symbol","url":"\/documentation\/swiftgodot","abstract":[{"type":"text","text":"Framework to write Godot Game Extensions using the Swift Programming Language."}],"role":"collection","title":"SwiftGodot","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot"},"doc://SwiftGodot/documentation/SwiftGodot/ObjectCollection":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"ObjectCollection","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/ObjectCollection","navigatorTitle":[{"kind":"identifier","text":"ObjectCollection"}],"type":"topic","abstract":[{"type":"text","text":"This represents a typed array of one of the built-in types from Godot"}],"url":"\/documentation\/swiftgodot\/objectcollection","title":"ObjectCollection","role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/GArray":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GArray","url":"\/documentation\/swiftgodot\/garray","title":"GArray","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"GArray"}],"type":"topic","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"GArray","kind":"identifier"}],"abstract":[{"text":"A built-in data structure that holds a sequence of elements.","type":"text"}]},"doc://SwiftGodot/documentation/SwiftGodot/Object/getClass()":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"getClass","kind":"identifier"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Object\/getClass()","role":"symbol","type":"topic","url":"\/documentation\/swiftgodot\/object\/getclass()","title":"getClass()","abstract":[{"text":"Returns the object’s built-in class name, as a ","type":"text"},{"code":"String","type":"codeVoice"},{"type":"text","text":". See also "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Object\/isClass(_:)"},{"text":".","type":"text"}],"kind":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/Node":{"type":"topic","url":"\/documentation\/swiftgodot\/node","abstract":[{"text":"Base class for all scene objects.","type":"text"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"text":"Node","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Node"}],"title":"Node","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Node"},"doc://SwiftGodot/documentation/SwiftGodot/Node/findChild(pattern:recursive:owned:)":{"role":"symbol","abstract":[{"type":"text","text":"Finds the first descendant of this node whose "},{"isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Node\/name","type":"reference"},{"type":"text","text":" matches "},{"type":"codeVoice","code":"pattern"},{"type":"text","text":", returning "},{"type":"codeVoice","code":"null"},{"text":" if no match is found. The matching is done against node names, ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"not"}]},{"type":"text","text":" their paths, through "},{"code":"String\/match(expr:)","type":"codeVoice"},{"type":"text","text":". As such, it is case-sensitive, "},{"code":"\"*\"","type":"codeVoice"},{"text":" matches zero or more characters, and ","type":"text"},{"type":"codeVoice","code":"\"?\""},{"type":"text","text":" matches any single character."}],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"findChild","kind":"identifier"},{"text":"(","kind":"text"},{"text":"pattern","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"text":"recursive","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":", ","kind":"text"},{"text":"owned","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"text":"Node","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot4NodeC"},{"kind":"text","text":"?"}],"url":"\/documentation\/swiftgodot\/node\/findchild(pattern:recursive:owned:)","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Node\/findChild(pattern:recursive:owned:)","title":"findChild(pattern:recursive:owned:)"},"doc://SwiftGodot/documentation/SwiftGodot/Object/isClass(_:)":{"title":"isClass(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"isClass"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"url":"\/documentation\/swiftgodot\/object\/isclass(_:)","type":"topic","role":"symbol","abstract":[{"text":"Returns ","type":"text"},{"type":"codeVoice","code":"true"},{"type":"text","text":" if the object inherits from the given "},{"code":"class","type":"codeVoice"},{"text":". See also ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Object\/getClass()","isActive":true,"type":"reference"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Object\/isClass(_:)","kind":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/PackedScene":{"abstract":[{"type":"text","text":"An abstraction of a serialized scene."}],"kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PackedScene","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PackedScene"}],"url":"\/documentation\/swiftgodot\/packedscene","title":"PackedScene","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PackedScene"}]}}}
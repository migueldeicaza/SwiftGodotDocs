{"topicSections":[{"generated":true,"title":"Instance Methods","identifiers":["doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebRTCMultiplayerPeer\/addPeer(_:peerId:unreliableLifetime:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebRTCMultiplayerPeer\/createClient(peerId:channelsConfig:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebRTCMultiplayerPeer\/createMesh(peerId:channelsConfig:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebRTCMultiplayerPeer\/createServer(channelsConfig:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebRTCMultiplayerPeer\/getPeer(peerId:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebRTCMultiplayerPeer\/getPeers()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebRTCMultiplayerPeer\/hasPeer(peerId:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebRTCMultiplayerPeer\/removePeer(peerId:)"],"anchor":"Instance-Methods"},{"identifiers":["doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebRTCMultiplayerPeer\/godotClassName"],"generated":true,"title":"Type Properties","anchor":"Type-Properties"}],"kind":"symbol","sections":[],"relationshipsSections":[{"kind":"relationships","title":"Inherits From","identifiers":["doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/MultiplayerPeer"],"type":"inheritsFrom"},{"identifiers":["doc:\/\/SwiftGodot\/s23CustomStringConvertibleP","doc:\/\/SwiftGodot\/SQ","doc:\/\/SwiftGodot\/SH","doc:\/\/SwiftGodot\/s12IdentifiableP","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/VariantRepresentable","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/VariantStorable"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"WebRTCMultiplayerPeer","kind":"identifier"}]}]},{"kind":"content","content":[{"level":2,"anchor":"overview","type":"heading","text":"Overview"},{"inlineContent":[{"text":"This class constructs a full mesh of ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebRTCPeerConnection","isActive":true},{"type":"text","text":" (one connection for each peer) that can be used as a "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/MultiplayerAPI\/multiplayerPeer","isActive":true},{"type":"text","text":"."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can add each "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebRTCPeerConnection","isActive":true,"type":"reference"},{"type":"text","text":" via "},{"isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebRTCMultiplayerPeer\/addPeer(_:peerId:unreliableLifetime:)","type":"reference"},{"text":" or remove them via ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebRTCMultiplayerPeer\/removePeer(peerId:)"},{"text":". Peers must be added in ","type":"text"},{"code":"WebRTCPeerConnection\/ConnectionState\/stateNew","type":"codeVoice"},{"type":"text","text":" state to allow it to create the appropriate channels. This class will not create offers nor set descriptions, it will only poll them, and notify connections and disconnections."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"When creating the peer via "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebRTCMultiplayerPeer\/createClient(peerId:channelsConfig:)","isActive":true,"type":"reference"},{"text":" or ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebRTCMultiplayerPeer\/createServer(channelsConfig:)","type":"reference"},{"type":"text","text":" the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/MultiplayerPeer\/isServerRelaySupported()"},{"text":" method will return ","type":"text"},{"code":"true","type":"codeVoice"},{"text":" enabling peer exchange and packet relaying when supported by the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/MultiplayerAPI","type":"reference"},{"text":" implementation.","type":"text"}]},{"style":"note","type":"aside","name":"Note","content":[{"type":"paragraph","inlineContent":[{"text":"When exporting to Android, make sure to enable the ","type":"text"},{"code":"INTERNET","type":"codeVoice"},{"type":"text","text":" permission in the Android export preset before exporting the project or using one-click deploy. Otherwise, network communication of any kind will be blocked by Android."}]}]}]}],"hierarchy":{"paths":[["doc:\/\/SwiftGodot\/documentation\/SwiftGodot"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"metadata":{"roleHeading":"Class","navigatorTitle":[{"text":"WebRTCMultiplayerPeer","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"WebRTCMultiplayerPeer","kind":"identifier"}],"title":"WebRTCMultiplayerPeer","symbolKind":"class","externalID":"s:10SwiftGodot21WebRTCMultiplayerPeerC","role":"symbol","modules":[{"name":"SwiftGodot"}]},"identifier":{"url":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebRTCMultiplayerPeer","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A simple interface to create a peer-to-peer mesh network composed of "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebRTCPeerConnection","isActive":true,"type":"reference"},{"type":"text","text":" that is compatible with the "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/MultiplayerAPI","isActive":true},{"type":"text","text":"."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftgodot\/webrtcmultiplayerpeer"]}],"references":{"doc://SwiftGodot/documentation/SwiftGodot/WebRTCPeerConnection":{"type":"topic","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"WebRTCPeerConnection","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"Interface to a WebRTC peer connection.","type":"text"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebRTCPeerConnection","navigatorTitle":[{"kind":"identifier","text":"WebRTCPeerConnection"}],"url":"\/documentation\/swiftgodot\/webrtcpeerconnection","title":"WebRTCPeerConnection"},"doc://SwiftGodot/documentation/SwiftGodot/WebRTCMultiplayerPeer/addPeer(_:peerId:unreliableLifetime:)":{"role":"symbol","type":"topic","title":"addPeer(_:peerId:unreliableLifetime:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"addPeer"},{"kind":"text","text":"("},{"text":"WebRTCPeerConnection","preciseIdentifier":"s:10SwiftGodot20WebRTCPeerConnectionC","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"peerId"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V","text":"Int32"},{"kind":"text","text":", "},{"text":"unreliableLifetime","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot0B5ErrorO","text":"GodotError"}],"kind":"symbol","abstract":[{"type":"text","text":"Add a new peer to the mesh with the given "},{"code":"peerId","type":"codeVoice"},{"text":". The ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebRTCPeerConnection","isActive":true},{"text":" must be in state ","type":"text"},{"code":"WebRTCPeerConnection\/ConnectionState\/stateNew","type":"codeVoice"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebRTCMultiplayerPeer\/addPeer(_:peerId:unreliableLifetime:)","url":"\/documentation\/swiftgodot\/webrtcmultiplayerpeer\/addpeer(_:peerid:unreliablelifetime:)"},"doc://SwiftGodot/documentation/SwiftGodot/VariantRepresentable":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/VariantRepresentable","abstract":[{"type":"text","text":"Types that conform to VariantRepresentable can be stored directly in "},{"type":"codeVoice","code":"Variant"},{"type":"text","text":" "},{"type":"text","text":"with no conversion.  These include all of the Variant types from Godot (for"},{"text":" ","type":"text"},{"text":"example ","type":"text"},{"code":"GString","type":"codeVoice"},{"type":"text","text":", "},{"code":"Rect","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Plane","type":"codeVoice"},{"type":"text","text":"), Godot objects (those that subclass"},{"type":"text","text":" "},{"type":"text","text":"SwiftGodot.Object) as well as the built-in Swift types UInt8, Int64 and Double."}],"kind":"symbol","navigatorTitle":[{"text":"VariantRepresentable","kind":"identifier"}],"type":"topic","url":"\/documentation\/swiftgodot\/variantrepresentable","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"VariantRepresentable","kind":"identifier"}],"title":"VariantRepresentable","role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/WebRTCMultiplayerPeer":{"navigatorTitle":[{"text":"WebRTCMultiplayerPeer","kind":"identifier"}],"kind":"symbol","title":"WebRTCMultiplayerPeer","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebRTCMultiplayerPeer","type":"topic","role":"symbol","abstract":[{"type":"text","text":"A simple interface to create a peer-to-peer mesh network composed of "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebRTCPeerConnection","isActive":true,"type":"reference"},{"type":"text","text":" that is compatible with the "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/MultiplayerAPI","isActive":true},{"type":"text","text":"."}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"WebRTCMultiplayerPeer","kind":"identifier"}],"url":"\/documentation\/swiftgodot\/webrtcmultiplayerpeer"},"doc://SwiftGodot/documentation/SwiftGodot":{"kind":"symbol","url":"\/documentation\/swiftgodot","abstract":[{"type":"text","text":"Framework to write Godot Game Extensions using the Swift Programming Language."}],"role":"collection","title":"SwiftGodot","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot"},"doc://SwiftGodot/SQ":{"identifier":"doc:\/\/SwiftGodot\/SQ","title":"Swift.Equatable","type":"unresolvable"},"doc://SwiftGodot/documentation/SwiftGodot/MultiplayerPeer/isServerRelaySupported()":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/MultiplayerPeer\/isServerRelaySupported()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isServerRelaySupported","kind":"identifier"},{"kind":"text","text":"() -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"role":"symbol","kind":"symbol","type":"topic","abstract":[{"text":"Returns true if the server can act as a relay in the current configuration (i.e. if the higher level ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/MultiplayerAPI","isActive":true},{"type":"text","text":" should notify connected clients of other peers, and implement a relay protocol to allow communication between them)."}],"url":"\/documentation\/swiftgodot\/multiplayerpeer\/isserverrelaysupported()","title":"isServerRelaySupported()"},"doc://SwiftGodot/documentation/SwiftGodot/WebRTCMultiplayerPeer/createMesh(peerId:channelsConfig:)":{"kind":"symbol","title":"createMesh(peerId:channelsConfig:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"createMesh"},{"text":"(","kind":"text"},{"text":"peerId","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V","text":"Int32"},{"kind":"text","text":", "},{"text":"channelsConfig","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot6GArrayC","text":"GArray","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"GodotError","preciseIdentifier":"s:10SwiftGodot0B5ErrorO","kind":"typeIdentifier"}],"abstract":[{"text":"Initialize the multiplayer peer as a mesh (i.e. all peers connect to each other) with the given ","type":"text"},{"code":"peerId","type":"codeVoice"},{"text":" (must be between 1 and 2147483647).","type":"text"}],"type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebRTCMultiplayerPeer\/createMesh(peerId:channelsConfig:)","url":"\/documentation\/swiftgodot\/webrtcmultiplayerpeer\/createmesh(peerid:channelsconfig:)"},"doc://SwiftGodot/documentation/SwiftGodot/WebRTCMultiplayerPeer/getPeers()":{"url":"\/documentation\/swiftgodot\/webrtcmultiplayerpeer\/getpeers()","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebRTCMultiplayerPeer\/getPeers()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getPeers","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot11GDictionaryC","text":"GDictionary","kind":"typeIdentifier"}],"kind":"symbol","type":"topic","role":"symbol","abstract":[{"text":"Returns a dictionary which keys are the peer ids and values the peer representation as in ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebRTCMultiplayerPeer\/getPeer(peerId:)","type":"reference"},{"text":".","type":"text"}],"title":"getPeers()"},"doc://SwiftGodot/documentation/SwiftGodot/WebRTCMultiplayerPeer/createClient(peerId:channelsConfig:)":{"kind":"symbol","title":"createClient(peerId:channelsConfig:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"createClient"},{"kind":"text","text":"("},{"text":"peerId","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"},{"text":", ","kind":"text"},{"text":"channelsConfig","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot6GArrayC","kind":"typeIdentifier","text":"GArray"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot0B5ErrorO","text":"GodotError"}],"abstract":[{"text":"Initialize the multiplayer peer as a client with the given ","type":"text"},{"code":"peerId","type":"codeVoice"},{"text":" (must be between 2 and 2147483647). In this mode, you should only call ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebRTCMultiplayerPeer\/addPeer(_:peerId:unreliableLifetime:)","isActive":true,"type":"reference"},{"text":" once and with ","type":"text"},{"type":"codeVoice","code":"peerId"},{"type":"text","text":" of "},{"code":"1","type":"codeVoice"},{"type":"text","text":". This mode enables "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/MultiplayerPeer\/isServerRelaySupported()","isActive":true,"type":"reference"},{"type":"text","text":", allowing the upper "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/MultiplayerAPI","isActive":true,"type":"reference"},{"type":"text","text":" layer to perform peer exchange and packet relaying."}],"type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebRTCMultiplayerPeer\/createClient(peerId:channelsConfig:)","url":"\/documentation\/swiftgodot\/webrtcmultiplayerpeer\/createclient(peerid:channelsconfig:)"},"doc://SwiftGodot/documentation/SwiftGodot/MultiplayerPeer":{"url":"\/documentation\/swiftgodot\/multiplayerpeer","navigatorTitle":[{"kind":"identifier","text":"MultiplayerPeer"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MultiplayerPeer"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/MultiplayerPeer","type":"topic","kind":"symbol","title":"MultiplayerPeer","role":"symbol","abstract":[{"type":"text","text":"Abstract class for specialized "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeer","isActive":true,"type":"reference"},{"text":"s used by the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/MultiplayerAPI"},{"type":"text","text":"."}]},"doc://SwiftGodot/documentation/SwiftGodot/MultiplayerAPI/isServer()":{"abstract":[{"type":"text","text":"Returns "},{"type":"codeVoice","code":"true"},{"type":"text","text":" if this MultiplayerAPI’s "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/MultiplayerAPI\/multiplayerPeer","isActive":true},{"type":"text","text":" is valid and in server mode (listening for connections)."}],"kind":"symbol","type":"topic","url":"\/documentation\/swiftgodot\/multiplayerapi\/isserver()","role":"symbol","title":"isServer()","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isServer"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/MultiplayerAPI\/isServer()"},"doc://SwiftGodot/SH":{"identifier":"doc:\/\/SwiftGodot\/SH","type":"unresolvable","title":"Swift.Hashable"},"doc://SwiftGodot/documentation/SwiftGodot/WebRTCMultiplayerPeer/createServer(channelsConfig:)":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebRTCMultiplayerPeer\/createServer(channelsConfig:)","role":"symbol","abstract":[{"type":"text","text":"Initialize the multiplayer peer as a server (with unique ID of "},{"type":"codeVoice","code":"1"},{"type":"text","text":"). This mode enables "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/MultiplayerPeer\/isServerRelaySupported()","isActive":true},{"text":", allowing the upper ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/MultiplayerAPI","type":"reference"},{"type":"text","text":" layer to perform peer exchange and packet relaying."}],"kind":"symbol","url":"\/documentation\/swiftgodot\/webrtcmultiplayerpeer\/createserver(channelsconfig:)","title":"createServer(channelsConfig:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"createServer","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"channelsConfig"},{"kind":"text","text":": "},{"text":"GArray","preciseIdentifier":"s:10SwiftGodot6GArrayC","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"GodotError","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot0B5ErrorO"}],"type":"topic"},"doc://SwiftGodot/documentation/SwiftGodot/WebRTCMultiplayerPeer/hasPeer(peerId:)":{"kind":"symbol","title":"hasPeer(peerId:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hasPeer","kind":"identifier"},{"text":"(","kind":"text"},{"text":"peerId","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V","text":"Int32"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"abstract":[{"type":"text","text":"Returns "},{"code":"true","type":"codeVoice"},{"type":"text","text":" if the given "},{"code":"peerId","type":"codeVoice"},{"type":"text","text":" is in the peers map (it might not be connected though)."}],"type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebRTCMultiplayerPeer\/hasPeer(peerId:)","url":"\/documentation\/swiftgodot\/webrtcmultiplayerpeer\/haspeer(peerid:)"},"doc://SwiftGodot/documentation/SwiftGodot/WebRTCMultiplayerPeer/godotClassName":{"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"godotClassName"},{"text":": ","kind":"text"},{"text":"StringName","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot10StringNameC"}],"abstract":[],"title":"godotClassName","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebRTCMultiplayerPeer\/godotClassName","url":"\/documentation\/swiftgodot\/webrtcmultiplayerpeer\/godotclassname","role":"symbol","kind":"symbol"},"doc://SwiftGodot/s12IdentifiableP":{"title":"Swift.Identifiable","type":"unresolvable","identifier":"doc:\/\/SwiftGodot\/s12IdentifiableP"},"doc://SwiftGodot/documentation/SwiftGodot/MultiplayerAPI":{"type":"topic","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/MultiplayerAPI","url":"\/documentation\/swiftgodot\/multiplayerapi","title":"MultiplayerAPI","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"MultiplayerAPI","kind":"identifier"}],"abstract":[{"text":"High-level multiplayer API interface.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"MultiplayerAPI"}]},"doc://SwiftGodot/documentation/SwiftGodot/WebRTCDataChannel":{"url":"\/documentation\/swiftgodot\/webrtcdatachannel","abstract":[],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"WebRTCDataChannel","kind":"identifier"}],"title":"WebRTCDataChannel","navigatorTitle":[{"text":"WebRTCDataChannel","kind":"identifier"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebRTCDataChannel","role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/VariantStorable":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/VariantStorable","abstract":[{"text":"Types that conform to VariantStorable can be stored in a Variant and can be extracted","type":"text"},{"type":"text","text":" "},{"text":"back out of a Variant.","type":"text"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"VariantStorable"}],"type":"topic","url":"\/documentation\/swiftgodot\/variantstorable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"VariantStorable"}],"title":"VariantStorable","role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/MultiplayerAPI/multiplayerPeer":{"type":"topic","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/MultiplayerAPI\/multiplayerPeer","url":"\/documentation\/swiftgodot\/multiplayerapi\/multiplayerpeer","title":"multiplayerPeer","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"multiplayerPeer","kind":"identifier"},{"kind":"text","text":": "},{"text":"MultiplayerPeer","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot15MultiplayerPeerC"},{"text":"?","kind":"text"}],"abstract":[{"type":"text","text":"The peer object to handle the RPC system (effectively enabling networking when set). Depending on the peer itself, the MultiplayerAPI will become a network server (check with "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/MultiplayerAPI\/isServer()","isActive":true},{"type":"text","text":") and will set root node’s network mode to authority, or it will become a regular client peer. All child nodes are set to inherit the network mode by default. Handling of networking-related events (connection, disconnection, new clients) is done by connecting to MultiplayerAPI’s signals."}]},"doc://SwiftGodot/s23CustomStringConvertibleP":{"title":"Swift.CustomStringConvertible","type":"unresolvable","identifier":"doc:\/\/SwiftGodot\/s23CustomStringConvertibleP"},"doc://SwiftGodot/documentation/SwiftGodot/WebRTCMultiplayerPeer/getPeer(peerId:)":{"url":"\/documentation\/swiftgodot\/webrtcmultiplayerpeer\/getpeer(peerid:)","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebRTCMultiplayerPeer\/getPeer(peerId:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"getPeer"},{"text":"(","kind":"text"},{"text":"peerId","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot11GDictionaryC","text":"GDictionary","kind":"typeIdentifier"}],"kind":"symbol","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Returns a dictionary representation of the peer with given "},{"code":"peerId","type":"codeVoice"},{"type":"text","text":" with three keys. "},{"code":"\"connection\"","type":"codeVoice"},{"type":"text","text":" containing the "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebRTCPeerConnection","isActive":true},{"text":" to this peer, ","type":"text"},{"code":"\"channels\"","type":"codeVoice"},{"text":" an array of three ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebRTCDataChannel","isActive":true,"type":"reference"},{"text":", and ","type":"text"},{"type":"codeVoice","code":"\"connected\""},{"type":"text","text":" a boolean representing if the peer connection is currently connected (all three channels are open)."}],"title":"getPeer(peerId:)"},"doc://SwiftGodot/documentation/SwiftGodot/PacketPeer":{"navigatorTitle":[{"text":"PacketPeer","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"Abstraction and base class for packet-based protocols."}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/PacketPeer","title":"PacketPeer","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PacketPeer","kind":"identifier"}],"url":"\/documentation\/swiftgodot\/packetpeer","type":"topic","role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/WebRTCMultiplayerPeer/removePeer(peerId:)":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/WebRTCMultiplayerPeer\/removePeer(peerId:)","type":"topic","abstract":[{"type":"text","text":"Remove the peer with given "},{"type":"codeVoice","code":"peerId"},{"text":" from the mesh. If the peer was connected, and [signal MultiplayerPeer.peer_connected] was emitted for it, then [signal MultiplayerPeer.peer_disconnected] will be emitted.","type":"text"}],"role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"removePeer"},{"kind":"text","text":"("},{"kind":"externalParam","text":"peerId"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V","text":"Int32"},{"text":")","kind":"text"}],"url":"\/documentation\/swiftgodot\/webrtcmultiplayerpeer\/removepeer(peerid:)","title":"removePeer(peerId:)"}}}
{"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Input"}],"modules":[{"name":"SwiftGodot"}],"externalID":"s:10SwiftGodot5InputC","roleHeading":"Class","navigatorTitle":[{"text":"Input","kind":"identifier"}],"symbolKind":"class","title":"Input"},"sections":[],"topicSections":[{"generated":true,"anchor":"Classes","identifiers":["doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/Signal1"],"title":"Classes"},{"generated":true,"title":"Instance Properties","anchor":"Instance-Properties","identifiers":["doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/joyConnectionChanged"]},{"identifiers":["doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/emulateMouseFromTouch","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/emulateTouchFromMouse","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/godotClassName","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/mouseMode-swift.type.property","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/shared","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/useAccumulatedInput"],"anchor":"Type-Properties","title":"Type Properties","generated":true},{"generated":true,"title":"Type Methods","identifiers":["doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/actionPress(action:strength:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/actionRelease(action:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/addJoyMapping(_:updateExisting:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/flushBufferedEvents()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/getAccelerometer()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/getActionRawStrength(action:exactMatch:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/getActionStrength(action:exactMatch:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/getAxis(negativeAction:positiveAction:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/getConnectedJoypads()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/getCurrentCursorShape()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/getGravity()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/getGyroscope()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/getJoyAxis(device:axis:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/getJoyGuid(device:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/getJoyInfo(device:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/getJoyName(device:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/getJoyVibrationDuration(device:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/getJoyVibrationStrength(device:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/getLastMouseScreenVelocity()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/getLastMouseVelocity()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/getMagnetometer()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/getMouseButtonMask()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/getVector(negativeX:positiveX:negativeY:positiveY:deadzone:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/isActionJustPressed(action:exactMatch:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/isActionJustReleased(action:exactMatch:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/isActionPressed(action:exactMatch:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/isAnythingPressed()","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/isJoyButtonPressed(device:button:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/isJoyKnown(device:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/isKeyLabelPressed(keycode:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/isKeyPressed(keycode:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/isMouseButtonPressed(button:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/isPhysicalKeyPressed(keycode:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/parseInputEvent(_:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/removeJoyMapping(guid:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/setAccelerometer(value:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/setCustomMouseCursor(image:shape:hotspot:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/setDefaultCursorShape(_:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/setGravity(value:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/setGyroscope(value:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/setMagnetometer(value:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/shouldIgnoreDevice(vendorId:productId:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/startJoyVibration(device:weakMagnitude:strongMagnitude:duration:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/stopJoyVibration(device:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/vibrateHandheld(durationMs:amplitude:)","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/warpMouse(position:)"],"anchor":"Type-Methods"},{"anchor":"Enumerations","title":"Enumerations","generated":true,"identifiers":["doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/CursorShape","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/MouseMode-swift.enum"]}],"hierarchy":{"paths":[["doc:\/\/SwiftGodot\/documentation\/SwiftGodot"]]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"Input","kind":"identifier"}],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"type":"heading","level":2,"text":"Overview","anchor":"overview"},{"inlineContent":[{"text":"The ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input"},{"text":" singleton handles key presses, mouse buttons and movement, gamepads, and input actions. Actions and their events can be set in the ","type":"text"},{"type":"strong","inlineContent":[{"text":"Input Map","type":"text"}]},{"text":" tab in ","type":"text"},{"inlineContent":[{"type":"text","text":"Project > Project Settings"}],"type":"strong"},{"text":", or with the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/InputMap"},{"text":" class.","type":"text"}],"type":"paragraph"},{"style":"note","type":"aside","content":[{"inlineContent":[{"type":"text","text":""},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input","type":"reference","isActive":true},{"type":"text","text":"â€™s methods reflect the global input state and are not affected by "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/acceptEvent()","isActive":true},{"text":" or ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Viewport\/setInputAsHandled()","isActive":true},{"type":"text","text":", as those methods only deal with the way input is propagated in the "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/SceneTree","isActive":true},{"type":"text","text":"."}],"type":"paragraph"}],"name":"Note"},{"type":"paragraph","inlineContent":[{"text":"This object emits the following signals:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/joyConnectionChanged"}],"type":"paragraph"}]}]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftgodot\/input"]}],"relationshipsSections":[{"kind":"relationships","type":"inheritsFrom","title":"Inherits From","identifiers":["doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Object"]},{"identifiers":["doc:\/\/SwiftGodot\/s23CustomStringConvertibleP","doc:\/\/SwiftGodot\/SQ","doc:\/\/SwiftGodot\/SH","doc:\/\/SwiftGodot\/s12IdentifiableP","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/VariantRepresentable","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/VariantStorable"],"title":"Conforms To","type":"conformsTo","kind":"relationships"}],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input"},"abstract":[{"text":"A singleton for handling inputs.","type":"text"}],"references":{"doc://SwiftGodot/documentation/SwiftGodot/Input/mouseMode-swift.type.property":{"abstract":[{"text":"Controls the mouse mode. See ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/MouseMode-swift.enum","type":"reference"},{"type":"text","text":" for more information."}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"mouseMode"},{"kind":"text","text":": "},{"text":"Input","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot5InputC"},{"text":".","kind":"text"},{"text":"MouseMode","preciseIdentifier":"s:10SwiftGodot5InputC9MouseModeO","kind":"typeIdentifier"}],"title":"mouseMode","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/mouseMode-swift.type.property","url":"\/documentation\/swiftgodot\/input\/mousemode-swift.type.property"},"doc://SwiftGodot/documentation/SwiftGodot/Input/getJoyName(device:)":{"abstract":[{"type":"text","text":"Returns the name of the joypad at the specified device index, e.g. "},{"code":"PS4 Controller","type":"codeVoice"},{"text":". Godot uses the ","type":"text"},{"type":"text","text":"SDL2 game controller database"},{"type":"text","text":" to determine gamepad names."}],"role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"getJoyName","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"device"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s5Int32V","text":"Int32","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/getJoyName(device:)","url":"\/documentation\/swiftgodot\/input\/getjoyname(device:)","type":"topic","kind":"symbol","title":"getJoyName(device:)"},"doc://SwiftGodot/s23CustomStringConvertibleP":{"identifier":"doc:\/\/SwiftGodot\/s23CustomStringConvertibleP","type":"unresolvable","title":"Swift.CustomStringConvertible"},"doc://SwiftGodot/s12IdentifiableP":{"identifier":"doc:\/\/SwiftGodot\/s12IdentifiableP","type":"unresolvable","title":"Swift.Identifiable"},"doc://SwiftGodot/documentation/SwiftGodot/Input/isAnythingPressed()":{"abstract":[{"text":"Returns ","type":"text"},{"code":"true","type":"codeVoice"},{"type":"text","text":" if any action, key, joypad button, or mouse button is being pressed. This will also return "},{"code":"true","type":"codeVoice"},{"text":" if any action is simulated via code by calling ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/actionPress(action:strength:)","type":"reference"},{"type":"text","text":"."}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"isAnythingPressed"},{"kind":"text","text":"() -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"title":"isAnythingPressed()","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/isAnythingPressed()","url":"\/documentation\/swiftgodot\/input\/isanythingpressed()"},"doc://SwiftGodot/documentation/SwiftGodot/Input/getLastMouseVelocity()":{"abstract":[{"text":"Returns the last mouse velocity. To provide a precise and jitter-free velocity, mouse velocity is only calculated every 0.1s. Therefore, mouse velocity will lag mouse movements.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"getLastMouseVelocity"},{"kind":"text","text":"() -> "},{"text":"Vector2","preciseIdentifier":"s:10SwiftGodot7Vector2V","kind":"typeIdentifier"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/getLastMouseVelocity()","url":"\/documentation\/swiftgodot\/input\/getlastmousevelocity()","type":"topic","kind":"symbol","title":"getLastMouseVelocity()"},"doc://SwiftGodot/documentation/SwiftGodot/Input/Signal1":{"url":"\/documentation\/swiftgodot\/input\/signal1","role":"symbol","navigatorTitle":[{"text":"Signal1","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"Signal1","kind":"identifier"}],"title":"Input.Signal1","kind":"symbol","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/Signal1","abstract":[{"type":"text","text":"Signal support."}]},"doc://SwiftGodot/documentation/SwiftGodot/MouseButton":{"title":"MouseButton","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/MouseButton","type":"topic","url":"\/documentation\/swiftgodot\/mousebutton","abstract":[],"kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"MouseButton","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"MouseButton"}],"role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/Input/setMagnetometer(value:)":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/setMagnetometer(value:)","url":"\/documentation\/swiftgodot\/input\/setmagnetometer(value:)","abstract":[{"type":"text","text":"Sets the value of the magnetic field of the magnetometer sensor. Can be used for debugging on devices without a hardware sensor, for example in an editor on a PC."}],"role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"setMagnetometer","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10SwiftGodot7Vector3V","text":"Vector3","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"setMagnetometer(value:)","kind":"symbol","type":"topic"},"doc://SwiftGodot/documentation/SwiftGodot/Input/getGravity()":{"abstract":[{"type":"text","text":"Returns the gravity in m\/sÂ² of the deviceâ€™s accelerometer sensor, if the device has one. Otherwise, the method returns "},{"code":"Vector3.ZERO","type":"codeVoice"},{"text":".","type":"text"}],"type":"topic","url":"\/documentation\/swiftgodot\/input\/getgravity()","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/getGravity()","title":"getGravity()","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"getGravity","kind":"identifier"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot7Vector3V","text":"Vector3"}],"role":"symbol","kind":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/Input/shouldIgnoreDevice(vendorId:productId:)":{"title":"shouldIgnoreDevice(vendorId:productId:)","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/shouldIgnoreDevice(vendorId:productId:)","url":"\/documentation\/swiftgodot\/input\/shouldignoredevice(vendorid:productid:)","type":"topic","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"shouldIgnoreDevice","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"vendorId"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier","text":"Int32"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"productId"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier","text":"Int32"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"role":"symbol","abstract":[{"type":"text","text":"Queries whether an input device should be ignored or not. Devices can be ignored by setting the environment variable "},{"code":"SDL_GAMECONTROLLER_IGNORE_DEVICES","type":"codeVoice"},{"type":"text","text":". Read the "},{"text":"SDL documentation","type":"text"},{"type":"text","text":" for more information."}]},"doc://SwiftGodot/documentation/SwiftGodot/Object":{"abstract":[{"type":"text","text":"Base class for all other classes in the engine."}],"url":"\/documentation\/swiftgodot\/object","role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Object","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"Object","kind":"identifier"}],"navigatorTitle":[{"text":"Object","kind":"identifier"}],"title":"Object"},"doc://SwiftGodot/documentation/SwiftGodot/Input/setDefaultCursorShape(_:)":{"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"setDefaultCursorShape","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot5InputC","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"CursorShape","preciseIdentifier":"s:10SwiftGodot5InputC11CursorShapeO"},{"text":")","kind":"text"}],"kind":"symbol","type":"topic","title":"setDefaultCursorShape(_:)","abstract":[{"type":"text","text":"Sets the default cursor shape to be used in the viewport instead of .cursorArrow."}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/setDefaultCursorShape(_:)","role":"symbol","url":"\/documentation\/swiftgodot\/input\/setdefaultcursorshape(_:)"},"doc://SwiftGodot/documentation/SwiftGodot/Viewport/setInputAsHandled()":{"title":"setInputAsHandled()","role":"symbol","abstract":[{"type":"text","text":"Stops the input from propagating further down the "},{"isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/SceneTree","type":"reference"},{"text":".","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"setInputAsHandled","kind":"identifier"},{"kind":"text","text":"()"}],"url":"\/documentation\/swiftgodot\/viewport\/setinputashandled()","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Viewport\/setInputAsHandled()","kind":"symbol","type":"topic"},"doc://SwiftGodot/documentation/SwiftGodot/Input/getMagnetometer()":{"role":"symbol","abstract":[{"type":"text","text":"Returns the magnetic field strength in micro-Tesla for all axes of the deviceâ€™s magnetometer sensor, if the device has one. Otherwise, the method returns "},{"type":"codeVoice","code":"Vector3.ZERO"},{"text":".","type":"text"}],"url":"\/documentation\/swiftgodot\/input\/getmagnetometer()","type":"topic","title":"getMagnetometer()","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/getMagnetometer()","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"getMagnetometer","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot7Vector3V","text":"Vector3","kind":"typeIdentifier"}]},"doc://SwiftGodot/documentation/SwiftGodot":{"kind":"symbol","url":"\/documentation\/swiftgodot","abstract":[{"type":"text","text":"Framework to write Godot Game Extensions using the Swift Programming Language."}],"role":"collection","title":"SwiftGodot","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot"},"doc://SwiftGodot/documentation/SwiftGodot/Node/_unhandledInput(event:)":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Node\/_unhandledInput(event:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"_unhandledInput","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"event"},{"text":": ","kind":"text"},{"text":"InputEvent","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot10InputEventC"},{"kind":"text","text":"?)"}],"role":"symbol","kind":"symbol","title":"_unhandledInput(event:)","abstract":[{"type":"text","text":"Called when an "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/InputEvent","type":"reference","isActive":true},{"type":"text","text":" hasnâ€™t been consumed by "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Node\/_input(event:)","isActive":true,"type":"reference"},{"text":" or any GUI ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control","isActive":true},{"type":"text","text":" item. It is called after "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Node\/_shortcutInput(event:)","isActive":true,"type":"reference"},{"type":"text","text":" and after "},{"isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Node\/_unhandledKeyInput(event:)","type":"reference"},{"type":"text","text":". The input event propagates up through the node tree until a node consumes it."}],"type":"topic","url":"\/documentation\/swiftgodot\/node\/_unhandledinput(event:)"},"doc://SwiftGodot/documentation/SwiftGodot/VariantStorable":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/VariantStorable","abstract":[{"text":"Types that conform to VariantStorable can be stored in a Variant and can be extracted","type":"text"},{"type":"text","text":" "},{"text":"back out of a Variant.","type":"text"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"VariantStorable"}],"type":"topic","url":"\/documentation\/swiftgodot\/variantstorable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"VariantStorable"}],"title":"VariantStorable","role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/GArray":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GArray","url":"\/documentation\/swiftgodot\/garray","title":"GArray","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"GArray"}],"type":"topic","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"GArray","kind":"identifier"}],"abstract":[{"text":"A built-in data structure that holds a sequence of elements.","type":"text"}]},"doc://SwiftGodot/documentation/SwiftGodot/Input/isKeyPressed(keycode:)":{"type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"isKeyPressed"},{"kind":"text","text":"("},{"text":"keycode","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Key","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot3KeyO"},{"kind":"text","text":") -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Returns "},{"type":"codeVoice","code":"true"},{"text":" if you are pressing the Latin key in the current keyboard layout. You can pass a ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Key"},{"text":" constant.","type":"text"}],"url":"\/documentation\/swiftgodot\/input\/iskeypressed(keycode:)","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/isKeyPressed(keycode:)","kind":"symbol","title":"isKeyPressed(keycode:)","role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/VariantRepresentable":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/VariantRepresentable","abstract":[{"type":"text","text":"Types that conform to VariantRepresentable can be stored directly in "},{"type":"codeVoice","code":"Variant"},{"type":"text","text":" "},{"type":"text","text":"with no conversion.  These include all of the Variant types from Godot (for"},{"text":" ","type":"text"},{"text":"example ","type":"text"},{"code":"GString","type":"codeVoice"},{"type":"text","text":", "},{"code":"Rect","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Plane","type":"codeVoice"},{"type":"text","text":"), Godot objects (those that subclass"},{"type":"text","text":" "},{"type":"text","text":"SwiftGodot.Object) as well as the built-in Swift types UInt8, Int64 and Double."}],"kind":"symbol","navigatorTitle":[{"text":"VariantRepresentable","kind":"identifier"}],"type":"topic","url":"\/documentation\/swiftgodot\/variantrepresentable","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"VariantRepresentable","kind":"identifier"}],"title":"VariantRepresentable","role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/Node/_input(event:)":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Node\/_input(event:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"_input","kind":"identifier"},{"text":"(","kind":"text"},{"text":"event","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10SwiftGodot10InputEventC","text":"InputEvent","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","kind":"symbol","title":"_input(event:)","abstract":[{"type":"text","text":"Called when there is an input event. The input event propagates up through the node tree until a node consumes it."}],"type":"topic","url":"\/documentation\/swiftgodot\/node\/_input(event:)"},"doc://SwiftGodot/documentation/SwiftGodot/Input/isPhysicalKeyPressed(keycode:)":{"type":"topic","kind":"symbol","title":"isPhysicalKeyPressed(keycode:)","url":"\/documentation\/swiftgodot\/input\/isphysicalkeypressed(keycode:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"isPhysicalKeyPressed","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"keycode"},{"kind":"text","text":": "},{"text":"Key","preciseIdentifier":"s:10SwiftGodot3KeyO","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/isPhysicalKeyPressed(keycode:)","abstract":[{"text":"Returns ","type":"text"},{"type":"codeVoice","code":"true"},{"text":" if you are pressing the key in the physical location on the 101\/102-key US QWERTY keyboard. You can pass a ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Key"},{"type":"text","text":" constant."}],"role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/Input/getLastMouseScreenVelocity()":{"type":"topic","kind":"symbol","url":"\/documentation\/swiftgodot\/input\/getlastmousescreenvelocity()","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getLastMouseScreenVelocity","kind":"identifier"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Vector2","preciseIdentifier":"s:10SwiftGodot7Vector2V"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/getLastMouseScreenVelocity()","role":"symbol","title":"getLastMouseScreenVelocity()","abstract":[{"type":"text","text":"Returns the last mouse velocity in screen coordinates. To provide a precise and jitter-free velocity, mouse velocity is only calculated every 0.1s. Therefore, mouse velocity will lag mouse movements."}]},"doc://SwiftGodot/documentation/SwiftGodot/Input/getMouseButtonMask()":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"getMouseButtonMask"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot15MouseButtonMaskV","text":"MouseButtonMask"}],"url":"\/documentation\/swiftgodot\/input\/getmousebuttonmask()","role":"symbol","title":"getMouseButtonMask()","type":"topic","abstract":[{"text":"Returns mouse buttons as a bitmask. If multiple mouse buttons are pressed at the same time, the bits are added together. Equivalent to ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/DisplayServer\/mouseGetButtonState()","isActive":true,"type":"reference"},{"type":"text","text":"."}],"kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/getMouseButtonMask()"},"doc://SwiftGodot/documentation/SwiftGodot/Input/getGyroscope()":{"kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/getGyroscope()","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"getGyroscope"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:10SwiftGodot7Vector3V","kind":"typeIdentifier","text":"Vector3"}],"url":"\/documentation\/swiftgodot\/input\/getgyroscope()","type":"topic","abstract":[{"type":"text","text":"Returns the rotation rate in rad\/s around a deviceâ€™s X, Y, and Z axes of the gyroscope sensor, if the device has one. Otherwise, the method returns "},{"type":"codeVoice","code":"Vector3.ZERO"},{"text":".","type":"text"}],"role":"symbol","title":"getGyroscope()"},"doc://SwiftGodot/documentation/SwiftGodot/Input/joyConnectionChanged":{"abstract":[{"type":"text","text":"Emitted when a joypad device has been connected or disconnected."}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"joyConnectionChanged","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10SwiftGodot5InputC","kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"text":"Signal1","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot5InputC7Signal1C"}],"title":"joyConnectionChanged","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/joyConnectionChanged","url":"\/documentation\/swiftgodot\/input\/joyconnectionchanged"},"doc://SwiftGodot/documentation/SwiftGodot/Input/getJoyAxis(device:axis:)":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/getJoyAxis(device:axis:)","abstract":[{"text":"Returns the current value of the joypad axis at given index (see ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/JoyAxis"},{"type":"text","text":")."}],"role":"symbol","type":"topic","title":"getJoyAxis(device:axis:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"getJoyAxis","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"device"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier","text":"Int32"},{"kind":"text","text":", "},{"kind":"externalParam","text":"axis"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot7JoyAxisO","text":"JoyAxis"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sd","text":"Double","kind":"typeIdentifier"}],"kind":"symbol","url":"\/documentation\/swiftgodot\/input\/getjoyaxis(device:axis:)"},"doc://SwiftGodot/documentation/SwiftGodot/Input/getJoyVibrationDuration(device:)":{"abstract":[{"text":"Returns the duration of the current vibration effect in seconds.","type":"text"}],"role":"symbol","url":"\/documentation\/swiftgodot\/input\/getjoyvibrationduration(device:)","title":"getJoyVibrationDuration(device:)","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"getJoyVibrationDuration"},{"kind":"text","text":"("},{"text":"device","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int32","preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/getJoyVibrationDuration(device:)","kind":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/Input/vibrateHandheld(durationMs:amplitude:)":{"abstract":[{"type":"text","text":"Vibrate the handheld device for the specified duration in milliseconds."}],"url":"\/documentation\/swiftgodot\/input\/vibratehandheld(durationms:amplitude:)","kind":"symbol","role":"symbol","title":"vibrateHandheld(durationMs:amplitude:)","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"vibrateHandheld","kind":"identifier"},{"kind":"text","text":"("},{"text":"durationMs","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Int32","preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"amplitude","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sd","text":"Double"},{"kind":"text","text":")"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/vibrateHandheld(durationMs:amplitude:)"},"doc://SwiftGodot/documentation/SwiftGodot/Input/getActionRawStrength(action:exactMatch:)":{"type":"topic","title":"getActionRawStrength(action:exactMatch:)","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/getActionRawStrength(action:exactMatch:)","abstract":[{"text":"Returns a value between 0 and 1 representing the raw intensity of the given action, ignoring the actionâ€™s deadzone. In most cases, you should use ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/getActionStrength(action:exactMatch:)","type":"reference"},{"text":" instead.","type":"text"}],"role":"symbol","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getActionRawStrength"},{"text":"(","kind":"text"},{"text":"action","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StringName","preciseIdentifier":"s:10SwiftGodot10StringNameC"},{"text":", ","kind":"text"},{"text":"exactMatch","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sd","text":"Double"}],"url":"\/documentation\/swiftgodot\/input\/getactionrawstrength(action:exactmatch:)"},"doc://SwiftGodot/documentation/SwiftGodot/Key":{"abstract":[],"kind":"symbol","role":"symbol","url":"\/documentation\/swiftgodot\/key","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Key"}],"type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Key","title":"Key","navigatorTitle":[{"text":"Key","kind":"identifier"}]},"doc://SwiftGodot/documentation/SwiftGodot/Input/startJoyVibration(device:weakMagnitude:strongMagnitude:duration:)":{"abstract":[{"text":"Starts to vibrate the joypad. Joypads usually come with two rumble motors, a strong and a weak one. ","type":"text"},{"type":"codeVoice","code":"weakMagnitude"},{"type":"text","text":" is the strength of the weak motor (between 0 and 1) and "},{"code":"strongMagnitude","type":"codeVoice"},{"type":"text","text":" is the strength of the strong motor (between 0 and 1). "},{"code":"duration","type":"codeVoice"},{"text":" is the duration of the effect in seconds (a duration of 0 will try to play the vibration indefinitely). The vibration can be stopped early by calling ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/stopJoyVibration(device:)","isActive":true},{"text":".","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"startJoyVibration","kind":"identifier"},{"text":"(","kind":"text"},{"text":"device","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s5Int32V","text":"Int32","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"weakMagnitude"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sd","kind":"typeIdentifier","text":"Double"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"strongMagnitude"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sd","text":"Double","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"duration","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sd","text":"Double","kind":"typeIdentifier"},{"kind":"text","text":")"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/startJoyVibration(device:weakMagnitude:strongMagnitude:duration:)","url":"\/documentation\/swiftgodot\/input\/startjoyvibration(device:weakmagnitude:strongmagnitude:duration:)","type":"topic","kind":"symbol","title":"startJoyVibration(device:weakMagnitude:strongMagnitude:duration:)"},"doc://SwiftGodot/documentation/SwiftGodot/Input/getVector(negativeX:positiveX:negativeY:positiveY:deadzone:)":{"abstract":[{"type":"text","text":"Gets an input vector by specifying four actions for the positive and negative X and Y axes."}],"role":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/getVector(negativeX:positiveX:negativeY:positiveY:deadzone:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"getVector","kind":"identifier"},{"kind":"text","text":"("},{"text":"negativeX","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10SwiftGodot10StringNameC","kind":"typeIdentifier","text":"StringName"},{"text":", ","kind":"text"},{"text":"positiveX","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot10StringNameC","kind":"typeIdentifier","text":"StringName"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"negativeY"},{"kind":"text","text":": "},{"text":"StringName","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot10StringNameC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"positiveY"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot10StringNameC","text":"StringName","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"deadzone","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot7Vector2V","kind":"typeIdentifier","text":"Vector2"}],"url":"\/documentation\/swiftgodot\/input\/getvector(negativex:positivex:negativey:positivey:deadzone:)","kind":"symbol","title":"getVector(negativeX:positiveX:negativeY:positiveY:deadzone:)","type":"topic"},"doc://SwiftGodot/documentation/SwiftGodot/Input/useAccumulatedInput":{"abstract":[{"type":"text","text":"If "},{"code":"true","type":"codeVoice"},{"text":", similar input events sent by the operating system are accumulated. When input accumulation is enabled, all input events generated during a frame will be merged and emitted when the frame is done rendering. Therefore, this limits the number of input method calls per second to the rendering FPS.","type":"text"}],"kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"useAccumulatedInput"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"title":"useAccumulatedInput","role":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/useAccumulatedInput","type":"topic","url":"\/documentation\/swiftgodot\/input\/useaccumulatedinput"},"doc://SwiftGodot/documentation/SwiftGodot/Input/setCustomMouseCursor(image:shape:hotspot:)":{"title":"setCustomMouseCursor(image:shape:hotspot:)","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/setCustomMouseCursor(image:shape:hotspot:)","role":"symbol","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"setCustomMouseCursor","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"image"},{"kind":"text","text":": "},{"text":"Resource","preciseIdentifier":"s:10SwiftGodot8ResourceC","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"shape","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10SwiftGodot5InputC","kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot5InputC11CursorShapeO","text":"CursorShape"},{"kind":"text","text":", "},{"kind":"externalParam","text":"hotspot"},{"text":": ","kind":"text"},{"text":"Vector2","preciseIdentifier":"s:10SwiftGodot7Vector2V","kind":"typeIdentifier"},{"kind":"text","text":")"}],"url":"\/documentation\/swiftgodot\/input\/setcustommousecursor(image:shape:hotspot:)","type":"topic","abstract":[{"text":"Sets a custom mouse cursor image, which is only visible inside the game window. The hotspot can also be specified. Passing ","type":"text"},{"code":"null","type":"codeVoice"},{"text":" to the image parameter resets to the system cursor. See ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/CursorShape","type":"reference","isActive":true},{"type":"text","text":" for the list of shapes."}]},"doc://SwiftGodot/documentation/SwiftGodot/Input/isMouseButtonPressed(button:)":{"abstract":[{"text":"Returns ","type":"text"},{"code":"true","type":"codeVoice"},{"text":" if you are pressing the mouse button specified with ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/MouseButton","isActive":true},{"text":".","type":"text"}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"isMouseButtonPressed","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"button"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot11MouseButtonO","text":"MouseButton","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"title":"isMouseButtonPressed(button:)","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/isMouseButtonPressed(button:)","url":"\/documentation\/swiftgodot\/input\/ismousebuttonpressed(button:)"},"doc://SwiftGodot/documentation/SwiftGodot/Input/emulateTouchFromMouse":{"abstract":[{"type":"text","text":"If "},{"type":"codeVoice","code":"true"},{"type":"text","text":", sends touch input events when clicking or dragging the mouse. See also "},{"code":"ProjectSettings\/inputDevices\/pointing\/emulateTouchFromMouse","type":"codeVoice"},{"type":"text","text":"."}],"role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"emulateTouchFromMouse"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/emulateTouchFromMouse","url":"\/documentation\/swiftgodot\/input\/emulatetouchfrommouse","type":"topic","kind":"symbol","title":"emulateTouchFromMouse"},"doc://SwiftGodot/documentation/SwiftGodot/Input/godotClassName":{"role":"symbol","url":"\/documentation\/swiftgodot\/input\/godotclassname","type":"topic","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"godotClassName","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot10StringNameC","text":"StringName"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/godotClassName","title":"godotClassName","abstract":[]},"doc://SwiftGodot/documentation/SwiftGodot/Input/setGyroscope(value:)":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/setGyroscope(value:)","abstract":[{"type":"text","text":"Sets the value of the rotation rate of the gyroscope sensor. Can be used for debugging on devices without a hardware sensor, for example in an editor on a PC."}],"role":"symbol","url":"\/documentation\/swiftgodot\/input\/setgyroscope(value:)","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"setGyroscope"},{"kind":"text","text":"("},{"kind":"externalParam","text":"value"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot7Vector3V","text":"Vector3","kind":"typeIdentifier"},{"kind":"text","text":")"}],"title":"setGyroscope(value:)","kind":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/Input/isActionJustReleased(action:exactMatch:)":{"abstract":[{"text":"Returns ","type":"text"},{"type":"codeVoice","code":"true"},{"text":" when the user ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"stops"}]},{"text":" pressing the action event in the current frame or physics tick. It will only return ","type":"text"},{"type":"codeVoice","code":"true"},{"type":"text","text":" on the frame or tick that the user releases the button."}],"type":"topic","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"isActionJustReleased","kind":"identifier"},{"text":"(","kind":"text"},{"text":"action","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot10StringNameC","text":"StringName"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"exactMatch"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"title":"isActionJustReleased(action:exactMatch:)","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/isActionJustReleased(action:exactMatch:)","url":"\/documentation\/swiftgodot\/input\/isactionjustreleased(action:exactmatch:)"},"doc://SwiftGodot/documentation/SwiftGodot/Input/flushBufferedEvents()":{"url":"\/documentation\/swiftgodot\/input\/flushbufferedevents()","title":"flushBufferedEvents()","kind":"symbol","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/flushBufferedEvents()","abstract":[{"text":"Sends all input events which are in the current buffer to the game loop. These events may have been buffered as a result of accumulated input (","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/useAccumulatedInput"},{"type":"text","text":") or agile input flushing ("},{"type":"codeVoice","code":"ProjectSettings\/inputDevices\/buffering\/agileEventFlushing"},{"text":").","type":"text"}],"role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"flushBufferedEvents","kind":"identifier"},{"text":"()","kind":"text"}]},"doc://SwiftGodot/documentation/SwiftGodot/Input/MouseMode-swift.enum":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/MouseMode-swift.enum","role":"symbol","navigatorTitle":[{"text":"MouseMode","kind":"identifier"}],"type":"topic","abstract":[],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MouseMode"}],"title":"Input.MouseMode","url":"\/documentation\/swiftgodot\/input\/mousemode-swift.enum","kind":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/Input/setAccelerometer(value:)":{"abstract":[{"type":"text","text":"Sets the acceleration value of the accelerometer sensor. Can be used for debugging on devices without a hardware sensor, for example in an editor on a PC."}],"role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"setAccelerometer","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"value"},{"text":": ","kind":"text"},{"text":"Vector3","preciseIdentifier":"s:10SwiftGodot7Vector3V","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/setAccelerometer(value:)","url":"\/documentation\/swiftgodot\/input\/setaccelerometer(value:)","type":"topic","kind":"symbol","title":"setAccelerometer(value:)"},"doc://SwiftGodot/documentation/SwiftGodot/Input/getActionStrength(action:exactMatch:)":{"type":"topic","title":"getActionStrength(action:exactMatch:)","url":"\/documentation\/swiftgodot\/input\/getactionstrength(action:exactmatch:)","abstract":[{"text":"Returns a value between 0 and 1 representing the intensity of the given action. In a joypad, for example, the further away the axis (analog sticks or L2, R2 triggers) is from the dead zone, the closer the value will be to 1. If the action is mapped to a control that has no axis such as the keyboard, the value returned will be 0 or 1.","type":"text"}],"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getActionStrength","kind":"identifier"},{"kind":"text","text":"("},{"text":"action","kind":"externalParam"},{"kind":"text","text":": "},{"text":"StringName","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot10StringNameC"},{"text":", ","kind":"text"},{"text":"exactMatch","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sd","text":"Double"}],"role":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/getActionStrength(action:exactMatch:)","kind":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/Input/CursorShape":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"CursorShape","kind":"identifier"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/CursorShape","type":"topic","url":"\/documentation\/swiftgodot\/input\/cursorshape","role":"symbol","abstract":[],"navigatorTitle":[{"text":"CursorShape","kind":"identifier"}],"title":"Input.CursorShape","kind":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/Input/actionPress(action:strength:)":{"kind":"symbol","abstract":[{"text":"This will simulate pressing the specified action.","type":"text"}],"title":"actionPress(action:strength:)","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/actionPress(action:strength:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"actionPress"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"action"},{"kind":"text","text":": "},{"text":"StringName","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot10StringNameC"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"strength"},{"text":": ","kind":"text"},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"},{"kind":"text","text":")"}],"role":"symbol","url":"\/documentation\/swiftgodot\/input\/actionpress(action:strength:)"},"doc://SwiftGodot/documentation/SwiftGodot/InputEventAction":{"abstract":[{"text":"An input event type for actions.","type":"text"}],"type":"topic","role":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/InputEventAction","url":"\/documentation\/swiftgodot\/inputeventaction","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"InputEventAction"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"InputEventAction","kind":"identifier"}],"title":"InputEventAction"},"doc://SwiftGodot/SH":{"type":"unresolvable","identifier":"doc:\/\/SwiftGodot\/SH","title":"Swift.Hashable"},"doc://SwiftGodot/documentation/SwiftGodot/InputEvent":{"title":"InputEvent","url":"\/documentation\/swiftgodot\/inputevent","abstract":[{"text":"Abstract base class for input events.","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"InputEvent"}],"navigatorTitle":[{"kind":"identifier","text":"InputEvent"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/InputEvent","type":"topic"},"doc://SwiftGodot/documentation/SwiftGodot/Input/getAccelerometer()":{"title":"getAccelerometer()","abstract":[{"type":"text","text":"Returns the acceleration in m\/sÂ² of the deviceâ€™s accelerometer sensor, if the device has one. Otherwise, the method returns "},{"type":"codeVoice","code":"Vector3.ZERO"},{"text":".","type":"text"}],"url":"\/documentation\/swiftgodot\/input\/getaccelerometer()","role":"symbol","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"getAccelerometer"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Vector3","preciseIdentifier":"s:10SwiftGodot7Vector3V"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/getAccelerometer()","type":"topic"},"doc://SwiftGodot/documentation/SwiftGodot/Control/acceptEvent()":{"kind":"symbol","role":"symbol","title":"acceptEvent()","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control\/acceptEvent()","url":"\/documentation\/swiftgodot\/control\/acceptevent()","type":"topic","abstract":[{"text":"Marks an input event as handled. Once you accept an input event, it stops propagating, even to nodes listening to ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Node\/_unhandledInput(event:)","isActive":true},{"text":" or ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Node\/_unhandledKeyInput(event:)"},{"text":".","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"acceptEvent","kind":"identifier"},{"kind":"text","text":"()"}]},"doc://SwiftGodot/documentation/SwiftGodot/SceneTree":{"type":"topic","url":"\/documentation\/swiftgodot\/scenetree","abstract":[{"text":"Manages the game loop via a hierarchy of nodes.","type":"text"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"SceneTree"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SceneTree"}],"title":"SceneTree","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/SceneTree"},"doc://SwiftGodot/documentation/SwiftGodot/Input/setGravity(value:)":{"title":"setGravity(value:)","type":"topic","url":"\/documentation\/swiftgodot\/input\/setgravity(value:)","abstract":[{"type":"text","text":"Sets the gravity value of the accelerometer sensor. Can be used for debugging on devices without a hardware sensor, for example in an editor on a PC."}],"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"setGravity","kind":"identifier"},{"text":"(","kind":"text"},{"text":"value","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Vector3","preciseIdentifier":"s:10SwiftGodot7Vector3V","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/setGravity(value:)","kind":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/Input/stopJoyVibration(device:)":{"abstract":[{"type":"text","text":"Stops the vibration of the joypad started with "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/startJoyVibration(device:weakMagnitude:strongMagnitude:duration:)"},{"text":".","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"stopJoyVibration","kind":"identifier"},{"text":"(","kind":"text"},{"text":"device","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V","text":"Int32"},{"text":")","kind":"text"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/stopJoyVibration(device:)","url":"\/documentation\/swiftgodot\/input\/stopjoyvibration(device:)","type":"topic","kind":"symbol","title":"stopJoyVibration(device:)"},"doc://SwiftGodot/documentation/SwiftGodot/Input/getJoyInfo(device:)":{"type":"topic","title":"getJoyInfo(device:)","url":"\/documentation\/swiftgodot\/input\/getjoyinfo(device:)","role":"symbol","abstract":[{"type":"text","text":"Returns a dictionary with extra platform-specific information about the device, e.g. the raw gamepad name from the OS or the Steam Input index."}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/getJoyInfo(device:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"getJoyInfo"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"device"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"},{"kind":"text","text":") -> "},{"text":"GDictionary","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot11GDictionaryC"}],"kind":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/Input/actionRelease(action:)":{"url":"\/documentation\/swiftgodot\/input\/actionrelease(action:)","title":"actionRelease(action:)","abstract":[{"text":"If the specified action is already pressed, this will release it.","type":"text"}],"type":"topic","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"actionRelease","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"action"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot10StringNameC","text":"StringName","kind":"typeIdentifier"},{"kind":"text","text":")"}],"kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/actionRelease(action:)","role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/Node/_unhandledKeyInput(event:)":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"_unhandledKeyInput","kind":"identifier"},{"kind":"text","text":"("},{"text":"event","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"InputEvent","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot10InputEventC"},{"text":"?)","kind":"text"}],"type":"topic","abstract":[{"type":"text","text":"Called when an "},{"isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/InputEventKey","type":"reference"},{"text":" hasnâ€™t been consumed by ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Node\/_input(event:)"},{"type":"text","text":" or any GUI "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Control","isActive":true},{"type":"text","text":" item. It is called after "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Node\/_shortcutInput(event:)","isActive":true,"type":"reference"},{"text":" but before ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Node\/_unhandledInput(event:)","isActive":true,"type":"reference"},{"type":"text","text":". The input event propagates up through the node tree until a node consumes it."}],"url":"\/documentation\/swiftgodot\/node\/_unhandledkeyinput(event:)","title":"_unhandledKeyInput(event:)","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Node\/_unhandledKeyInput(event:)"},"doc://SwiftGodot/documentation/SwiftGodot/Input/emulateMouseFromTouch":{"abstract":[{"type":"text","text":"If "},{"type":"codeVoice","code":"true"},{"type":"text","text":", sends mouse input events when tapping or swiping on the touchscreen. See also "},{"code":"ProjectSettings\/inputDevices\/pointing\/emulateMouseFromTouch","type":"codeVoice"},{"type":"text","text":"."}],"type":"topic","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"emulateMouseFromTouch"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"title":"emulateMouseFromTouch","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/emulateMouseFromTouch","url":"\/documentation\/swiftgodot\/input\/emulatemousefromtouch"},"doc://SwiftGodot/documentation/SwiftGodot/Input/isKeyLabelPressed(keycode:)":{"kind":"symbol","abstract":[{"type":"text","text":"Returns "},{"code":"true","type":"codeVoice"},{"text":" if you are pressing the key with the ","type":"text"},{"type":"codeVoice","code":"keycode"},{"type":"text","text":" printed on it. You can pass a "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Key","isActive":true},{"type":"text","text":" constant or any Unicode character code."}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/isKeyLabelPressed(keycode:)","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isKeyLabelPressed"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"keycode"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10SwiftGodot3KeyO","kind":"typeIdentifier","text":"Key"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"type":"topic","title":"isKeyLabelPressed(keycode:)","url":"\/documentation\/swiftgodot\/input\/iskeylabelpressed(keycode:)"},"doc://SwiftGodot/documentation/SwiftGodot/Input/warpMouse(position:)":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/warpMouse(position:)","role":"symbol","title":"warpMouse(position:)","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"warpMouse"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"position"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot7Vector2V","text":"Vector2"},{"kind":"text","text":")"}],"url":"\/documentation\/swiftgodot\/input\/warpmouse(position:)","abstract":[{"text":"Sets the mouse position to the specified vector, provided in pixels and relative to an origin at the upper left corner of the currently focused Window Manager game window.","type":"text"}],"kind":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/JoyButton":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JoyButton","kind":"identifier"}],"url":"\/documentation\/swiftgodot\/joybutton","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"JoyButton"}],"title":"JoyButton","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/JoyButton","role":"symbol","abstract":[],"type":"topic"},"doc://SwiftGodot/documentation/SwiftGodot/Input/getAxis(negativeAction:positiveAction:)":{"abstract":[{"text":"Get axis input by specifying two actions, one negative and one positive.","type":"text"}],"role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"getAxis"},{"text":"(","kind":"text"},{"text":"negativeAction","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StringName","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot10StringNameC"},{"kind":"text","text":", "},{"text":"positiveAction","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot10StringNameC","text":"StringName","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sd","text":"Double"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/getAxis(negativeAction:positiveAction:)","url":"\/documentation\/swiftgodot\/input\/getaxis(negativeaction:positiveaction:)","type":"topic","kind":"symbol","title":"getAxis(negativeAction:positiveAction:)"},"doc://SwiftGodot/documentation/SwiftGodot/Input/getJoyGuid(device:)":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/getJoyGuid(device:)","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Returns an SDL2-compatible device GUID on platforms that use gamepad remapping, e.g. "},{"code":"030000004c050000c405000000010000","type":"codeVoice"},{"type":"text","text":". Returns "},{"type":"codeVoice","code":"\"Default Gamepad\""},{"type":"text","text":" otherwise. Godot uses the "},{"type":"text","text":"SDL2 game controller database"},{"type":"text","text":" to determine gamepad names and mappings based on this GUID."}],"type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"getJoyGuid","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"device"},{"text":": ","kind":"text"},{"text":"Int32","preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"url":"\/documentation\/swiftgodot\/input\/getjoyguid(device:)","title":"getJoyGuid(device:)"},"doc://SwiftGodot/documentation/SwiftGodot/Input/addJoyMapping(_:updateExisting:)":{"abstract":[{"text":"Adds a new mapping entry (in SDL2 format) to the mapping database. Optionally update already connected devices.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"addJoyMapping"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"updateExisting","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":")"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/addJoyMapping(_:updateExisting:)","url":"\/documentation\/swiftgodot\/input\/addjoymapping(_:updateexisting:)","type":"topic","kind":"symbol","title":"addJoyMapping(_:updateExisting:)"},"doc://SwiftGodot/documentation/SwiftGodot/Input/removeJoyMapping(guid:)":{"url":"\/documentation\/swiftgodot\/input\/removejoymapping(guid:)","title":"removeJoyMapping(guid:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"removeJoyMapping","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"guid"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"Removes all mappings from the internal database that match the given GUID."}],"role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/removeJoyMapping(guid:)"},"doc://SwiftGodot/documentation/SwiftGodot/Input/getConnectedJoypads()":{"role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"getConnectedJoypads"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot17VariantCollectionC","text":"VariantCollection"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s5Int64V","kind":"typeIdentifier","text":"Int64"},{"kind":"text","text":">"}],"url":"\/documentation\/swiftgodot\/input\/getconnectedjoypads()","type":"topic","title":"getConnectedJoypads()","abstract":[{"text":"Returns an ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GArray","type":"reference","isActive":true},{"type":"text","text":" containing the device IDs of all currently connected joypads."}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/getConnectedJoypads()","kind":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/InputMap":{"kind":"symbol","abstract":[{"text":"A singleton that manages all ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/InputEventAction","type":"reference","isActive":true},{"type":"text","text":"s."}],"url":"\/documentation\/swiftgodot\/inputmap","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/InputMap","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"InputMap"}],"title":"InputMap","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"InputMap","kind":"identifier"}],"type":"topic"},"doc://SwiftGodot/documentation/SwiftGodot/JoyAxis":{"navigatorTitle":[{"kind":"identifier","text":"JoyAxis"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/JoyAxis","abstract":[],"type":"topic","title":"JoyAxis","url":"\/documentation\/swiftgodot\/joyaxis","kind":"symbol","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JoyAxis","kind":"identifier"}]},"doc://SwiftGodot/documentation/SwiftGodot/Input/isJoyKnown(device:)":{"url":"\/documentation\/swiftgodot\/input\/isjoyknown(device:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isJoyKnown","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"device"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/isJoyKnown(device:)","kind":"symbol","abstract":[{"text":"Returns ","type":"text"},{"code":"true","type":"codeVoice"},{"text":" if the system knows the specified device. This means that it sets all button and axis indices. Unknown joypads are not expected to match these constants, but you can still retrieve events from them.","type":"text"}],"title":"isJoyKnown(device:)","role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/Input/getCurrentCursorShape()":{"type":"topic","url":"\/documentation\/swiftgodot\/input\/getcurrentcursorshape()","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"getCurrentCursorShape","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot5InputC","text":"Input","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"CursorShape","preciseIdentifier":"s:10SwiftGodot5InputC11CursorShapeO","kind":"typeIdentifier"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/getCurrentCursorShape()","abstract":[{"text":"Returns the currently assigned cursor shape (see ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/CursorShape","isActive":true,"type":"reference"},{"type":"text","text":")."}],"title":"getCurrentCursorShape()","role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/Input/isJoyButtonPressed(device:button:)":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/isJoyButtonPressed(device:button:)","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Returns "},{"type":"codeVoice","code":"true"},{"type":"text","text":" if you are pressing the joypad button (see "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/JoyButton","isActive":true},{"text":").","type":"text"}],"type":"topic","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"isJoyButtonPressed","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"device"},{"text":": ","kind":"text"},{"text":"Int32","preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"button","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot9JoyButtonO","text":"JoyButton"},{"kind":"text","text":") -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"url":"\/documentation\/swiftgodot\/input\/isjoybuttonpressed(device:button:)","title":"isJoyButtonPressed(device:button:)"},"doc://SwiftGodot/documentation/SwiftGodot/DisplayServer/mouseGetButtonState()":{"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"mouseGetButtonState","kind":"identifier"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot15MouseButtonMaskV","text":"MouseButtonMask"}],"url":"\/documentation\/swiftgodot\/displayserver\/mousegetbuttonstate()","role":"symbol","type":"topic","title":"mouseGetButtonState()","abstract":[{"type":"text","text":"Returns the current state of mouse buttons (whether each button is pressed) as a bitmask. If multiple mouse buttons are pressed at the same time, the bits are added together. Equivalent to "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/getMouseButtonMask()","isActive":true,"type":"reference"},{"text":".","type":"text"}],"kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/DisplayServer\/mouseGetButtonState()"},"doc://SwiftGodot/SQ":{"type":"unresolvable","identifier":"doc:\/\/SwiftGodot\/SQ","title":"Swift.Equatable"},"doc://SwiftGodot/documentation/SwiftGodot/Input/isActionJustPressed(action:exactMatch:)":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/isActionJustPressed(action:exactMatch:)","role":"symbol","url":"\/documentation\/swiftgodot\/input\/isactionjustpressed(action:exactmatch:)","abstract":[{"type":"text","text":"Returns "},{"code":"true","type":"codeVoice"},{"type":"text","text":" when the user has "},{"inlineContent":[{"type":"text","text":"started"}],"type":"emphasis"},{"text":" pressing the action event in the current frame or physics tick. It will only return ","type":"text"},{"type":"codeVoice","code":"true"},{"type":"text","text":" on the frame or tick that the user pressed down the button."}],"type":"topic","kind":"symbol","title":"isActionJustPressed(action:exactMatch:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"isActionJustPressed","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"action"},{"kind":"text","text":": "},{"text":"StringName","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot10StringNameC"},{"kind":"text","text":", "},{"text":"exactMatch","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}]},"doc://SwiftGodot/documentation/SwiftGodot/Input/shared":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/shared","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"The shared instance of this class"}],"type":"topic","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"shared","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Input","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot5InputC"}],"url":"\/documentation\/swiftgodot\/input\/shared","title":"shared"},"doc://SwiftGodot/documentation/SwiftGodot/Input/getJoyVibrationStrength(device:)":{"type":"topic","url":"\/documentation\/swiftgodot\/input\/getjoyvibrationstrength(device:)","role":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/getJoyVibrationStrength(device:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"getJoyVibrationStrength"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"device"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier","text":"Int32"},{"text":") -> ","kind":"text"},{"text":"Vector2","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot7Vector2V"}],"kind":"symbol","abstract":[{"text":"Returns the strength of the joypad vibration: x is the strength of the weak motor, and y is the strength of the strong motor.","type":"text"}],"title":"getJoyVibrationStrength(device:)"},"doc://SwiftGodot/documentation/SwiftGodot/Input/isActionPressed(action:exactMatch:)":{"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"isActionPressed","kind":"identifier"},{"kind":"text","text":"("},{"text":"action","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"StringName","preciseIdentifier":"s:10SwiftGodot10StringNameC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"exactMatch"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"role":"symbol","type":"topic","title":"isActionPressed(action:exactMatch:)","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/isActionPressed(action:exactMatch:)","abstract":[{"type":"text","text":"Returns "},{"type":"codeVoice","code":"true"},{"text":" if you are pressing the action event.","type":"text"}],"url":"\/documentation\/swiftgodot\/input\/isactionpressed(action:exactmatch:)"},"doc://SwiftGodot/documentation/SwiftGodot/Input":{"kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input","url":"\/documentation\/swiftgodot\/input","type":"topic","title":"Input","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"Input","kind":"identifier"}],"navigatorTitle":[{"text":"Input","kind":"identifier"}],"abstract":[{"text":"A singleton for handling inputs.","type":"text"}]},"doc://SwiftGodot/documentation/SwiftGodot/Input/parseInputEvent(_:)":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Input\/parseInputEvent(_:)","role":"symbol","title":"parseInputEvent(_:)","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"parseInputEvent","kind":"identifier"},{"text":"(","kind":"text"},{"text":"InputEvent","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot10InputEventC"},{"text":"?)","kind":"text"}],"url":"\/documentation\/swiftgodot\/input\/parseinputevent(_:)","abstract":[{"type":"text","text":"Feeds an "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/InputEvent","isActive":true},{"text":" to the game. Can be used to artificially trigger input events from code. Also generates ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Node\/_input(event:)","isActive":true},{"text":" calls.","type":"text"}],"kind":"symbol"}}}
{"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"roleHeading":"Instance Method","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"bsearchCustom"},{"text":"(","kind":"text"},{"text":"value","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot7VariantC","kind":"typeIdentifier","text":"Variant"},{"kind":"text","text":", "},{"text":"func","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Callable","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot8CallableC"},{"kind":"text","text":", "},{"text":"before","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Int64","kind":"typeIdentifier","preciseIdentifier":"s:s5Int64V"}],"symbolKind":"method","title":"bsearchCustom(value:func:before:)","modules":[{"name":"SwiftGodot"}],"externalID":"s:10SwiftGodot6GArrayC13bsearchCustom5value4func6befores5Int64VAA7VariantC_AA8CallableCSbtF"},"abstract":[{"text":"Finds the index of an existing value (or the insertion index that maintains sorting order, if the value is not yet present in the array) using binary search and a custom comparison method. Optionally, a ","type":"text"},{"type":"codeVoice","code":"before"},{"text":" specifier can be passed. If ","type":"text"},{"type":"codeVoice","code":"false"},{"type":"text","text":", the returned index comes after all existing entries of the value in the array. The custom method receives two arguments (an element from the array and the value searched for) and must return "},{"type":"codeVoice","code":"true"},{"type":"text","text":" if the first argument is less than the second, and return "},{"type":"codeVoice","code":"false"},{"type":"text","text":" otherwise."}],"sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"bsearchCustom","kind":"identifier"},{"kind":"text","text":"("},{"text":"value","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot7VariantC","kind":"typeIdentifier","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Variant","text":"Variant"},{"kind":"text","text":", "},{"kind":"externalParam","text":"func"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot8CallableC","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Callable","text":"Callable"},{"text":", ","kind":"text"},{"text":"before","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":" = true) -> ","kind":"text"},{"text":"Int64","preciseIdentifier":"s:s5Int64V","kind":"typeIdentifier"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"name":"Note","style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"The custom method must accept the two arguments in any order, you cannot rely on that the first argument will always be from the array.","type":"text"}]}],"type":"aside"},{"type":"aside","content":[{"inlineContent":[{"text":"Calling ","type":"text"},{"code":"bsearchCustom(value:`func`:before:)","type":"codeVoice"},{"text":" on an unsorted array results in unexpected behavior.","type":"text"}],"type":"paragraph"}],"style":"note","name":"Note"}]}],"hierarchy":{"paths":[["doc:\/\/SwiftGodot\/documentation\/SwiftGodot","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GArray"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GArray\/bsearchCustom(value:func:before:)"},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftgodot\/garray\/bsearchcustom(value:func:before:)"]}],"references":{"doc://SwiftGodot/documentation/SwiftGodot/Variant":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Variant","navigatorTitle":[{"kind":"identifier","text":"Variant"}],"abstract":[{"text":"Variant objects box various Godot Objects, you create them with one of the","type":"text"},{"type":"text","text":" "},{"text":"constructors, and you can retrieve the contents using the various extension","type":"text"},{"type":"text","text":" "},{"type":"text","text":"constructors that are declared on the various types that are wrapped."}],"kind":"symbol","role":"symbol","url":"\/documentation\/swiftgodot\/variant","title":"Variant","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Variant","kind":"identifier"}]},"doc://SwiftGodot/documentation/SwiftGodot/Callable":{"url":"\/documentation\/swiftgodot\/callable","navigatorTitle":[{"kind":"identifier","text":"Callable"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Callable"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Callable","title":"Callable","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"A built-in type representing a method or a standalone function."}],"role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/GArray":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GArray","url":"\/documentation\/swiftgodot\/garray","title":"GArray","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"GArray"}],"type":"topic","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"GArray","kind":"identifier"}],"abstract":[{"text":"A built-in data structure that holds a sequence of elements.","type":"text"}]},"doc://SwiftGodot/documentation/SwiftGodot":{"kind":"symbol","url":"\/documentation\/swiftgodot","abstract":[{"type":"text","text":"Framework to write Godot Game Extensions using the Swift Programming Language."}],"role":"collection","title":"SwiftGodot","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot"},"doc://SwiftGodot/documentation/SwiftGodot/GArray/bsearchCustom(value:func:before:)":{"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"bsearchCustom"},{"text":"(","kind":"text"},{"text":"value","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Variant","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot7VariantC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"func"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10SwiftGodot8CallableC","text":"Callable","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"before","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int64V","text":"Int64"}],"url":"\/documentation\/swiftgodot\/garray\/bsearchcustom(value:func:before:)","abstract":[{"text":"Finds the index of an existing value (or the insertion index that maintains sorting order, if the value is not yet present in the array) using binary search and a custom comparison method. Optionally, a ","type":"text"},{"type":"codeVoice","code":"before"},{"type":"text","text":" specifier can be passed. If "},{"type":"codeVoice","code":"false"},{"type":"text","text":", the returned index comes after all existing entries of the value in the array. The custom method receives two arguments (an element from the array and the value searched for) and must return "},{"code":"true","type":"codeVoice"},{"type":"text","text":" if the first argument is less than the second, and return "},{"code":"false","type":"codeVoice"},{"type":"text","text":" otherwise."}],"type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GArray\/bsearchCustom(value:func:before:)","title":"bsearchCustom(value:func:before:)","role":"symbol"}}}
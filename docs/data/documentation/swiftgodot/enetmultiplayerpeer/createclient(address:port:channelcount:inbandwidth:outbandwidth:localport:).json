{"abstract":[{"text":"Create client that connects to a server at ","type":"text"},{"type":"codeVoice","code":"address"},{"text":" using specified ","type":"text"},{"code":"port","type":"codeVoice"},{"text":". The given address needs to be either a fully qualified domain name (e.g. ","type":"text"},{"code":"\"www.example.com\"","type":"codeVoice"},{"text":") or an IP address in IPv4 or IPv6 format (e.g. ","type":"text"},{"code":"\"192.168.1.1\"","type":"codeVoice"},{"type":"text","text":"). The "},{"code":"port","type":"codeVoice"},{"text":" is the port the server is listening on. The ","type":"text"},{"type":"codeVoice","code":"channelCount"},{"type":"text","text":" parameter can be used to specify the number of ENet channels allocated for the connection. The "},{"code":"inBandwidth","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"outBandwidth"},{"text":" parameters can be used to limit the incoming and outgoing bandwidth to the given number of bytes per second. The default of 0 means unlimited bandwidth. Note that ENet will strategically drop packets on specific sides of a connection between peers to ensure the peer’s bandwidth is not overwhelmed. The bandwidth parameters also determine the window size of a connection which limits the amount of reliable packets that may be in transit at any given time. Returns ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GodotError\/ok"},{"text":" if a client was created, ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GodotError\/errAlreadyInUse","isActive":true},{"type":"text","text":" if this ENetMultiplayerPeer instance already has an open connection (in which case you need to call "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/MultiplayerPeer\/close()","isActive":true},{"text":" first) or ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GodotError\/errCantCreate","type":"reference","isActive":true},{"type":"text","text":" if the client could not be created. If "},{"type":"codeVoice","code":"localPort"},{"text":" is specified, the client will also listen to the given port; this is useful for some NAT traversal techniques.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"createClient","kind":"identifier"},{"text":"(","kind":"text"},{"text":"address","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"port","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Int32","kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V"},{"kind":"text","text":", "},{"text":"channelCount","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int32","preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier"},{"kind":"text","text":" = 0, "},{"kind":"externalParam","text":"inBandwidth"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier","text":"Int32"},{"kind":"text","text":" = 0, "},{"kind":"externalParam","text":"outBandwidth"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s5Int32V","text":"Int32","kind":"typeIdentifier"},{"text":" = 0, ","kind":"text"},{"text":"localPort","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier","text":"Int32"},{"kind":"text","text":" = 0) -> "},{"preciseIdentifier":"s:10SwiftGodot0B5ErrorO","text":"GodotError","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GodotError","kind":"typeIdentifier"}]}]}],"hierarchy":{"paths":[["doc:\/\/SwiftGodot\/documentation\/SwiftGodot","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/ENetMultiplayerPeer"]]},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftgodot\/enetmultiplayerpeer\/createclient(address:port:channelcount:inbandwidth:outbandwidth:localport:)"]}],"metadata":{"symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"createClient"},{"kind":"text","text":"("},{"kind":"externalParam","text":"address"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"port","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s5Int32V","text":"Int32","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"channelCount"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"},{"kind":"text","text":", "},{"text":"inBandwidth","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s5Int32V","text":"Int32","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"outBandwidth","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int32","kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"localPort"},{"kind":"text","text":": "},{"text":"Int32","kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V"},{"kind":"text","text":") -> "},{"text":"GodotError","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot0B5ErrorO"}],"externalID":"s:10SwiftGodot19ENetMultiplayerPeerC12createClient7address4port12channelCount11inBandwidth03outM09localPortAA0B5ErrorOSS_s5Int32VA4NtF","roleHeading":"Instance Method","modules":[{"name":"SwiftGodot"}],"role":"symbol","title":"createClient(address:port:channelCount:inBandwidth:outBandwidth:localPort:)"},"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/ENetMultiplayerPeer\/createClient(address:port:channelCount:inBandwidth:outBandwidth:localPort:)"},"sections":[],"references":{"doc://SwiftGodot/documentation/SwiftGodot/ENetMultiplayerPeer":{"abstract":[{"type":"text","text":"A MultiplayerPeer implementation using the "},{"type":"text","text":"ENet"},{"type":"text","text":" library."}],"type":"topic","role":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/ENetMultiplayerPeer","url":"\/documentation\/swiftgodot\/enetmultiplayerpeer","kind":"symbol","navigatorTitle":[{"text":"ENetMultiplayerPeer","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"ENetMultiplayerPeer","kind":"identifier"}],"title":"ENetMultiplayerPeer"},"doc://SwiftGodot/documentation/SwiftGodot/GodotError/errAlreadyInUse":{"abstract":[{"text":"Already in use error.","type":"text"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GodotError\/errAlreadyInUse","role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"errAlreadyInUse"}],"title":"GodotError.errAlreadyInUse","type":"topic","kind":"symbol","url":"\/documentation\/swiftgodot\/godoterror\/erralreadyinuse"},"doc://SwiftGodot/documentation/SwiftGodot/GodotError":{"title":"GodotError","url":"\/documentation\/swiftgodot\/godoterror","abstract":[],"type":"topic","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GodotError","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"GodotError","kind":"identifier"}],"navigatorTitle":[{"text":"GodotError","kind":"identifier"}]},"doc://SwiftGodot/documentation/SwiftGodot":{"kind":"symbol","url":"\/documentation\/swiftgodot","abstract":[{"type":"text","text":"Framework to write Godot Game Extensions using the Swift Programming Language."}],"role":"collection","title":"SwiftGodot","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot"},"doc://SwiftGodot/documentation/SwiftGodot/ENetMultiplayerPeer/createClient(address:port:channelCount:inBandwidth:outBandwidth:localPort:)":{"type":"topic","url":"\/documentation\/swiftgodot\/enetmultiplayerpeer\/createclient(address:port:channelcount:inbandwidth:outbandwidth:localport:)","abstract":[{"text":"Create client that connects to a server at ","type":"text"},{"code":"address","type":"codeVoice"},{"type":"text","text":" using specified "},{"type":"codeVoice","code":"port"},{"text":". The given address needs to be either a fully qualified domain name (e.g. ","type":"text"},{"type":"codeVoice","code":"\"www.example.com\""},{"type":"text","text":") or an IP address in IPv4 or IPv6 format (e.g. "},{"code":"\"192.168.1.1\"","type":"codeVoice"},{"type":"text","text":"). The "},{"type":"codeVoice","code":"port"},{"type":"text","text":" is the port the server is listening on. The "},{"type":"codeVoice","code":"channelCount"},{"type":"text","text":" parameter can be used to specify the number of ENet channels allocated for the connection. The "},{"type":"codeVoice","code":"inBandwidth"},{"type":"text","text":" and "},{"type":"codeVoice","code":"outBandwidth"},{"text":" parameters can be used to limit the incoming and outgoing bandwidth to the given number of bytes per second. The default of 0 means unlimited bandwidth. Note that ENet will strategically drop packets on specific sides of a connection between peers to ensure the peer’s bandwidth is not overwhelmed. The bandwidth parameters also determine the window size of a connection which limits the amount of reliable packets that may be in transit at any given time. Returns ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GodotError\/ok","isActive":true},{"text":" if a client was created, ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GodotError\/errAlreadyInUse","type":"reference","isActive":true},{"text":" if this ENetMultiplayerPeer instance already has an open connection (in which case you need to call ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/MultiplayerPeer\/close()","type":"reference"},{"type":"text","text":" first) or "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GodotError\/errCantCreate","type":"reference","isActive":true},{"text":" if the client could not be created. If ","type":"text"},{"type":"codeVoice","code":"localPort"},{"text":" is specified, the client will also listen to the given port; this is useful for some NAT traversal techniques.","type":"text"}],"kind":"symbol","role":"symbol","title":"createClient(address:port:channelCount:inBandwidth:outBandwidth:localPort:)","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/ENetMultiplayerPeer\/createClient(address:port:channelCount:inBandwidth:outBandwidth:localPort:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"createClient","kind":"identifier"},{"kind":"text","text":"("},{"text":"address","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"port"},{"kind":"text","text":": "},{"text":"Int32","preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"channelCount"},{"kind":"text","text":": "},{"text":"Int32","kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V"},{"text":", ","kind":"text"},{"text":"inBandwidth","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"},{"text":", ","kind":"text"},{"text":"outBandwidth","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"},{"text":", ","kind":"text"},{"text":"localPort","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s5Int32V","text":"Int32","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot0B5ErrorO","text":"GodotError"}]},"doc://SwiftGodot/documentation/SwiftGodot/GodotError/ok":{"role":"symbol","type":"topic","url":"\/documentation\/swiftgodot\/godoterror\/ok","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GodotError\/ok","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ok"}],"kind":"symbol","title":"GodotError.ok","abstract":[{"type":"text","text":"Methods that return "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GodotError","type":"reference","isActive":true},{"text":" return ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GodotError\/ok"},{"type":"text","text":" when no error occurred."}]},"doc://SwiftGodot/documentation/SwiftGodot/GodotError/errCantCreate":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GodotError\/errCantCreate","title":"GodotError.errCantCreate","kind":"symbol","url":"\/documentation\/swiftgodot\/godoterror\/errcantcreate","role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"text":"errCantCreate","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"Can’t create error."}]},"doc://SwiftGodot/documentation/SwiftGodot/MultiplayerPeer/close()":{"url":"\/documentation\/swiftgodot\/multiplayerpeer\/close()","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/MultiplayerPeer\/close()","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Immediately close the multiplayer peer returning to the state .connectionDisconnected. Connected peers will be dropped without emitting [signal peer_disconnected]."}],"type":"topic","title":"close()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"close"},{"text":"()","kind":"text"}]}}}
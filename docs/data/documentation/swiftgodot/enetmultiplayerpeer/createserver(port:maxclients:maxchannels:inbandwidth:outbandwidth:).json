{"abstract":[{"text":"Create server that listens to connections via ","type":"text"},{"code":"port","type":"codeVoice"},{"text":". The port needs to be an available, unused port between 0 and 65535. Note that ports below 1024 are privileged and may require elevated permissions depending on the platform. To change the interface the server listens on, use ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/ENetMultiplayerPeer\/setBindIp(_:)","type":"reference","isActive":true},{"type":"text","text":". The default IP is the wildcard "},{"code":"\"*\"","type":"codeVoice"},{"text":", which listens on all available interfaces. ","type":"text"},{"type":"codeVoice","code":"maxClients"},{"type":"text","text":" is the maximum number of clients that are allowed at once, any number up to 4095 may be used, although the achievable number of simultaneous clients may be far lower and depends on the application. For additional details on the bandwidth parameters, see "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/ENetMultiplayerPeer\/createClient(address:port:channelCount:inBandwidth:outBandwidth:localPort:)","isActive":true},{"type":"text","text":". Returns "},{"isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GodotError\/ok","type":"reference"},{"text":" if a server was created, ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GodotError\/errAlreadyInUse","type":"reference","isActive":true},{"type":"text","text":" if this ENetMultiplayerPeer instance already has an open connection (in which case you need to call "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/MultiplayerPeer\/close()","isActive":true},{"text":" first) or ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GodotError\/errCantCreate","type":"reference"},{"type":"text","text":" if the server could not be created."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"final","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"createServer"},{"text":"(","kind":"text"},{"text":"port","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"maxClients"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s5Int32V","text":"Int32","kind":"typeIdentifier"},{"kind":"text","text":" = 32, "},{"text":"maxChannels","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int32","kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V"},{"text":" = 0, ","kind":"text"},{"text":"inBandwidth","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Int32","preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier"},{"kind":"text","text":" = 0, "},{"kind":"externalParam","text":"outBandwidth"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s5Int32V","text":"Int32","kind":"typeIdentifier"},{"text":" = 0) -> ","kind":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GodotError","preciseIdentifier":"s:10SwiftGodot0B5ErrorO","kind":"typeIdentifier","text":"GodotError"}],"platforms":["macOS"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftgodot\/enetmultiplayerpeer\/createserver(port:maxclients:maxchannels:inbandwidth:outbandwidth:)"]}],"hierarchy":{"paths":[["doc:\/\/SwiftGodot\/documentation\/SwiftGodot","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/ENetMultiplayerPeer"]]},"kind":"symbol","identifier":{"url":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/ENetMultiplayerPeer\/createServer(port:maxClients:maxChannels:inBandwidth:outBandwidth:)","interfaceLanguage":"swift"},"sections":[],"metadata":{"modules":[{"name":"SwiftGodot"}],"symbolKind":"method","title":"createServer(port:maxClients:maxChannels:inBandwidth:outBandwidth:)","role":"symbol","roleHeading":"Instance Method","externalID":"s:10SwiftGodot19ENetMultiplayerPeerC12createServer4port10maxClients0I8Channels11inBandwidth03outM0AA0B5ErrorOs5Int32V_A4MtF","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"createServer","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"port"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier","text":"Int32"},{"text":", ","kind":"text"},{"text":"maxClients","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier","text":"Int32"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"maxChannels"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier","text":"Int32"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"inBandwidth"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"outBandwidth"},{"kind":"text","text":": "},{"text":"Int32","preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:10SwiftGodot0B5ErrorO","kind":"typeIdentifier","text":"GodotError"}]},"references":{"doc://SwiftGodot/documentation/SwiftGodot/GodotError/errCantCreate":{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GodotError\/errCantCreate","title":"GodotError.errCantCreate","kind":"symbol","url":"\/documentation\/swiftgodot\/godoterror\/errcantcreate","role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"text":"errCantCreate","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"Canâ€™t create error."}]},"doc://SwiftGodot/documentation/SwiftGodot/ENetMultiplayerPeer":{"abstract":[{"type":"text","text":"A MultiplayerPeer implementation using the "},{"type":"text","text":"ENet"},{"type":"text","text":" library."}],"type":"topic","role":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/ENetMultiplayerPeer","url":"\/documentation\/swiftgodot\/enetmultiplayerpeer","kind":"symbol","navigatorTitle":[{"text":"ENetMultiplayerPeer","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"ENetMultiplayerPeer","kind":"identifier"}],"title":"ENetMultiplayerPeer"},"doc://SwiftGodot/documentation/SwiftGodot/ENetMultiplayerPeer/setBindIp(_:)":{"type":"topic","url":"\/documentation\/swiftgodot\/enetmultiplayerpeer\/setbindip(_:)","abstract":[{"type":"text","text":"The IP used when creating a server. This is set to the wildcard "},{"code":"\"*\"","type":"codeVoice"},{"type":"text","text":" by default, which binds to all available interfaces. The given IP needs to be in IPv4 or IPv6 address format, for example: "},{"code":"\"192.168.1.1\"","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol","role":"symbol","title":"setBindIp(_:)","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/ENetMultiplayerPeer\/setBindIp(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"setBindIp","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":")","kind":"text"}]},"doc://SwiftGodot/documentation/SwiftGodot/GodotError/errAlreadyInUse":{"abstract":[{"text":"Already in use error.","type":"text"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GodotError\/errAlreadyInUse","role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"errAlreadyInUse"}],"title":"GodotError.errAlreadyInUse","type":"topic","kind":"symbol","url":"\/documentation\/swiftgodot\/godoterror\/erralreadyinuse"},"doc://SwiftGodot/documentation/SwiftGodot/GodotError":{"title":"GodotError","url":"\/documentation\/swiftgodot\/godoterror","abstract":[],"type":"topic","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GodotError","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"GodotError","kind":"identifier"}],"navigatorTitle":[{"text":"GodotError","kind":"identifier"}]},"doc://SwiftGodot/documentation/SwiftGodot/MultiplayerPeer/close()":{"url":"\/documentation\/swiftgodot\/multiplayerpeer\/close()","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/MultiplayerPeer\/close()","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Immediately close the multiplayer peer returning to the state .connectionDisconnected. Connected peers will be dropped without emitting [signal peer_disconnected]."}],"type":"topic","title":"close()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"close"},{"text":"()","kind":"text"}]},"doc://SwiftGodot/documentation/SwiftGodot":{"kind":"symbol","url":"\/documentation\/swiftgodot","abstract":[{"type":"text","text":"Framework to write Godot Game Extensions using the Swift Programming Language."}],"role":"collection","title":"SwiftGodot","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot"},"doc://SwiftGodot/documentation/SwiftGodot/GodotError/ok":{"role":"symbol","type":"topic","url":"\/documentation\/swiftgodot\/godoterror\/ok","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GodotError\/ok","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ok"}],"kind":"symbol","title":"GodotError.ok","abstract":[{"type":"text","text":"Methods that return "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GodotError","type":"reference","isActive":true},{"text":" return ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GodotError\/ok"},{"type":"text","text":" when no error occurred."}]},"doc://SwiftGodot/documentation/SwiftGodot/ENetMultiplayerPeer/createServer(port:maxClients:maxChannels:inBandwidth:outBandwidth:)":{"type":"topic","url":"\/documentation\/swiftgodot\/enetmultiplayerpeer\/createserver(port:maxclients:maxchannels:inbandwidth:outbandwidth:)","abstract":[{"type":"text","text":"Create server that listens to connections via "},{"code":"port","type":"codeVoice"},{"text":". The port needs to be an available, unused port between 0 and 65535. Note that ports below 1024 are privileged and may require elevated permissions depending on the platform. To change the interface the server listens on, use ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/ENetMultiplayerPeer\/setBindIp(_:)"},{"text":". The default IP is the wildcard ","type":"text"},{"type":"codeVoice","code":"\"*\""},{"type":"text","text":", which listens on all available interfaces. "},{"code":"maxClients","type":"codeVoice"},{"type":"text","text":" is the maximum number of clients that are allowed at once, any number up to 4095 may be used, although the achievable number of simultaneous clients may be far lower and depends on the application. For additional details on the bandwidth parameters, see "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/ENetMultiplayerPeer\/createClient(address:port:channelCount:inBandwidth:outBandwidth:localPort:)","isActive":true},{"text":". Returns ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GodotError\/ok","isActive":true},{"text":" if a server was created, ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GodotError\/errAlreadyInUse"},{"type":"text","text":" if this ENetMultiplayerPeer instance already has an open connection (in which case you need to call "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/MultiplayerPeer\/close()","isActive":true},{"type":"text","text":" first) or "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GodotError\/errCantCreate","isActive":true,"type":"reference"},{"type":"text","text":" if the server could not be created."}],"kind":"symbol","role":"symbol","title":"createServer(port:maxClients:maxChannels:inBandwidth:outBandwidth:)","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/ENetMultiplayerPeer\/createServer(port:maxClients:maxChannels:inBandwidth:outBandwidth:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"createServer"},{"kind":"text","text":"("},{"text":"port","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Int32","kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V"},{"text":", ","kind":"text"},{"text":"maxClients","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int32","preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"maxChannels","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int32","kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"inBandwidth"},{"text":": ","kind":"text"},{"text":"Int32","kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V"},{"kind":"text","text":", "},{"text":"outBandwidth","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s5Int32V","text":"Int32","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"GodotError","kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot0B5ErrorO"}]},"doc://SwiftGodot/documentation/SwiftGodot/ENetMultiplayerPeer/createClient(address:port:channelCount:inBandwidth:outBandwidth:localPort:)":{"type":"topic","url":"\/documentation\/swiftgodot\/enetmultiplayerpeer\/createclient(address:port:channelcount:inbandwidth:outbandwidth:localport:)","abstract":[{"text":"Create client that connects to a server at ","type":"text"},{"code":"address","type":"codeVoice"},{"type":"text","text":" using specified "},{"type":"codeVoice","code":"port"},{"text":". The given address needs to be either a fully qualified domain name (e.g. ","type":"text"},{"type":"codeVoice","code":"\"www.example.com\""},{"type":"text","text":") or an IP address in IPv4 or IPv6 format (e.g. "},{"code":"\"192.168.1.1\"","type":"codeVoice"},{"type":"text","text":"). The "},{"type":"codeVoice","code":"port"},{"type":"text","text":" is the port the server is listening on. The "},{"type":"codeVoice","code":"channelCount"},{"type":"text","text":" parameter can be used to specify the number of ENet channels allocated for the connection. The "},{"type":"codeVoice","code":"inBandwidth"},{"type":"text","text":" and "},{"type":"codeVoice","code":"outBandwidth"},{"text":" parameters can be used to limit the incoming and outgoing bandwidth to the given number of bytes per second. The default of 0 means unlimited bandwidth. Note that ENet will strategically drop packets on specific sides of a connection between peers to ensure the peerâ€™s bandwidth is not overwhelmed. The bandwidth parameters also determine the window size of a connection which limits the amount of reliable packets that may be in transit at any given time. Returns ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GodotError\/ok","isActive":true},{"text":" if a client was created, ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GodotError\/errAlreadyInUse","type":"reference","isActive":true},{"text":" if this ENetMultiplayerPeer instance already has an open connection (in which case you need to call ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/MultiplayerPeer\/close()","type":"reference"},{"type":"text","text":" first) or "},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/GodotError\/errCantCreate","type":"reference","isActive":true},{"text":" if the client could not be created. If ","type":"text"},{"type":"codeVoice","code":"localPort"},{"text":" is specified, the client will also listen to the given port; this is useful for some NAT traversal techniques.","type":"text"}],"kind":"symbol","role":"symbol","title":"createClient(address:port:channelCount:inBandwidth:outBandwidth:localPort:)","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/ENetMultiplayerPeer\/createClient(address:port:channelCount:inBandwidth:outBandwidth:localPort:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"createClient","kind":"identifier"},{"kind":"text","text":"("},{"text":"address","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"port"},{"kind":"text","text":": "},{"text":"Int32","preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"channelCount"},{"kind":"text","text":": "},{"text":"Int32","kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V"},{"text":", ","kind":"text"},{"text":"inBandwidth","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"},{"text":", ","kind":"text"},{"text":"outBandwidth","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"},{"text":", ","kind":"text"},{"text":"localPort","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s5Int32V","text":"Int32","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:10SwiftGodot0B5ErrorO","text":"GodotError"}]}}}
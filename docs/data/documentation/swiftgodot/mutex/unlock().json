{"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"unlock"},{"kind":"text","text":"()"}]}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"type":"aside","style":"note","content":[{"inlineContent":[{"text":"If a thread called ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Mutex\/lock()","isActive":true},{"type":"text","text":" or "},{"isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Mutex\/tryLock()","type":"reference"},{"text":" multiple times while already having ownership of the mutex, it must also call ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Mutex\/unlock()"},{"type":"text","text":" the same number of times in order to unlock it correctly."}],"type":"paragraph"}],"name":"Note"},{"type":"aside","style":"warning","name":"Warning","content":[{"inlineContent":[{"text":"Calling ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Mutex\/unlock()"},{"type":"text","text":" more times that "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Mutex\/lock()","isActive":true},{"text":" on a given thread, thus ending up trying to unlock a non-locked mutex, is wrong and may causes crashes or deadlocks.","type":"text"}],"type":"paragraph"}]}]}],"hierarchy":{"paths":[["doc:\/\/SwiftGodot\/documentation\/SwiftGodot","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Mutex"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"metadata":{"role":"symbol","externalID":"s:10SwiftGodot5MutexC6unlockyyF","symbolKind":"method","title":"unlock()","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"unlock","kind":"identifier"},{"kind":"text","text":"()"}],"roleHeading":"Instance Method","modules":[{"name":"SwiftGodot"}]},"abstract":[{"type":"text","text":"Unlocks this "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Mutex","isActive":true},{"type":"text","text":", leaving it to other threads."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Mutex\/unlock()"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftgodot\/mutex\/unlock()"]}],"references":{"doc://SwiftGodot/documentation/SwiftGodot/Thread":{"title":"Thread","url":"\/documentation\/swiftgodot\/thread","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Thread","kind":"identifier"}],"abstract":[{"text":"A unit of execution in a process.","type":"text"}],"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Thread","navigatorTitle":[{"kind":"identifier","text":"Thread"}],"kind":"symbol","type":"topic","role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/Mutex":{"kind":"symbol","abstract":[{"text":"A binary ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Semaphore","type":"reference","isActive":true},{"text":" for synchronization of multiple ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Thread"},{"type":"text","text":"s."}],"url":"\/documentation\/swiftgodot\/mutex","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Mutex","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Mutex"}],"title":"Mutex","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Mutex","kind":"identifier"}],"type":"topic"},"doc://SwiftGodot/documentation/SwiftGodot/Mutex/unlock()":{"kind":"symbol","title":"unlock()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unlock","kind":"identifier"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Unlocks this "},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Mutex","isActive":true},{"type":"text","text":", leaving it to other threads."}],"type":"topic","url":"\/documentation\/swiftgodot\/mutex\/unlock()","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Mutex\/unlock()","role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot":{"kind":"symbol","url":"\/documentation\/swiftgodot","abstract":[{"type":"text","text":"Framework to write Godot Game Extensions using the Swift Programming Language."}],"role":"collection","title":"SwiftGodot","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot"},"doc://SwiftGodot/documentation/SwiftGodot/Mutex/lock()":{"role":"symbol","kind":"symbol","url":"\/documentation\/swiftgodot\/mutex\/lock()","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Mutex\/lock()","title":"lock()","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"lock"},{"text":"()","kind":"text"}],"abstract":[{"type":"text","text":"Locks this "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Mutex"},{"text":", blocks until it is unlocked by the current owner.","type":"text"}],"type":"topic"},"doc://SwiftGodot/documentation/SwiftGodot/Mutex/tryLock()":{"type":"topic","role":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Mutex\/tryLock()","abstract":[{"type":"text","text":"Tries locking this "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Mutex"},{"type":"text","text":", but does not block. Returns "},{"type":"codeVoice","code":"true"},{"text":" on success, ","type":"text"},{"type":"codeVoice","code":"false"},{"type":"text","text":" otherwise."}],"url":"\/documentation\/swiftgodot\/mutex\/trylock()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"tryLock"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"kind":"symbol","title":"tryLock()"},"doc://SwiftGodot/documentation/SwiftGodot/Semaphore":{"kind":"symbol","abstract":[{"text":"A synchronization mechanism used to control access to a shared resource by ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Thread","isActive":true},{"type":"text","text":"s."}],"url":"\/documentation\/swiftgodot\/semaphore","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/Semaphore","role":"symbol","navigatorTitle":[{"text":"Semaphore","kind":"identifier"}],"title":"Semaphore","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Semaphore"}],"type":"topic"}}}
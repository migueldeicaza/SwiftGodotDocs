{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getAsText"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"skipCr"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":" = false) -> ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}]}]},{"kind":"content","content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"If ","type":"text"},{"code":"skipCr","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"true"},{"text":", carriage return characters (","type":"text"},{"type":"codeVoice","code":"\\r"},{"type":"text","text":", CR) will be ignored when parsing the UTF-8, so that only line feed characters ("},{"type":"codeVoice","code":"\\n"},{"text":", LF) represent a new line (Unix convention).","type":"text"}]}]}],"identifier":{"url":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/FileAccess\/getAsText(skipCr:)","interfaceLanguage":"swift"},"sections":[],"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"getAsText"},{"kind":"text","text":"("},{"text":"skipCr","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"role":"symbol","symbolKind":"method","roleHeading":"Instance Method","modules":[{"name":"SwiftGodot"}],"externalID":"s:10SwiftGodot10FileAccessC9getAsText6skipCrSSSb_tF","title":"getAsText(skipCr:)"},"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/SwiftGodot\/documentation\/SwiftGodot","doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/FileAccess"]]},"variants":[{"paths":["\/documentation\/swiftgodot\/fileaccess\/getastext(skipcr:)"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Returns the whole file as a "},{"type":"codeVoice","code":"String"},{"type":"text","text":". Text is interpreted as being UTF-8 encoded."}],"references":{"doc://SwiftGodot/documentation/SwiftGodot":{"kind":"symbol","url":"\/documentation\/swiftgodot","abstract":[{"type":"text","text":"Framework to write Godot Game Extensions using the Swift Programming Language."}],"role":"collection","title":"SwiftGodot","type":"topic","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot"},"doc://SwiftGodot/documentation/SwiftGodot/FileAccess/getAsText(skipCr:)":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"getAsText","kind":"identifier"},{"kind":"text","text":"("},{"text":"skipCr","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"}],"title":"getAsText(skipCr:)","kind":"symbol","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/FileAccess\/getAsText(skipCr:)","abstract":[{"text":"Returns the whole file as a ","type":"text"},{"code":"String","type":"codeVoice"},{"type":"text","text":". Text is interpreted as being UTF-8 encoded."}],"type":"topic","url":"\/documentation\/swiftgodot\/fileaccess\/getastext(skipcr:)","role":"symbol"},"doc://SwiftGodot/documentation/SwiftGodot/FileAccess":{"type":"topic","url":"\/documentation\/swiftgodot\/fileaccess","kind":"symbol","abstract":[{"text":"Provides methods for file reading and writing operations.","type":"text"}],"title":"FileAccess","identifier":"doc:\/\/SwiftGodot\/documentation\/SwiftGodot\/FileAccess","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"FileAccess","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"FileAccess"}]}}}
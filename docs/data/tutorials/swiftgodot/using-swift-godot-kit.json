{"hierarchy":{"modules":[{"reference":"doc:\/\/SwiftGodot\/tutorials\/SwiftGodot-Tutorials\/SwiftGodot-Essentials","projects":[{"sections":[{"kind":"task","reference":"doc:\/\/SwiftGodot\/tutorials\/SwiftGodot\/Your-First-Extension#Create-a-Swift-package"},{"reference":"doc:\/\/SwiftGodot\/tutorials\/SwiftGodot\/Your-First-Extension#Create-a-player-character","kind":"task"},{"reference":"doc:\/\/SwiftGodot\/tutorials\/SwiftGodot\/Your-First-Extension#Set-up-the-extension","kind":"task"},{"kind":"task","reference":"doc:\/\/SwiftGodot\/tutorials\/SwiftGodot\/Your-First-Extension#Use-the-new-player-controller"}],"reference":"doc:\/\/SwiftGodot\/tutorials\/SwiftGodot\/Your-First-Extension"},{"sections":[{"reference":"doc:\/\/SwiftGodot\/tutorials\/SwiftGodot\/Writing-Multiple-Scripts#Handle-vertical-movement","kind":"task"},{"reference":"doc:\/\/SwiftGodot\/tutorials\/SwiftGodot\/Writing-Multiple-Scripts#Teleport-the-player","kind":"task"},{"reference":"doc:\/\/SwiftGodot\/tutorials\/SwiftGodot\/Writing-Multiple-Scripts#Using-the-new-main-level-node","kind":"task"}],"reference":"doc:\/\/SwiftGodot\/tutorials\/SwiftGodot\/Writing-Multiple-Scripts"}]},{"reference":"doc:\/\/SwiftGodot\/tutorials\/SwiftGodot-Tutorials\/Embedding-Godot-in-Swift","projects":[{"reference":"doc:\/\/SwiftGodot\/tutorials\/SwiftGodot\/Using-Swift-Godot-Kit","sections":[{"reference":"doc:\/\/SwiftGodot\/tutorials\/SwiftGodot\/Using-Swift-Godot-Kit#SwiftGodotKit-from-Xcode","kind":"task"}]}]}],"reference":"doc:\/\/SwiftGodot\/tutorials\/SwiftGodot-Tutorials","paths":[["doc:\/\/SwiftGodot\/tutorials\/SwiftGodot-Tutorials","doc:\/\/SwiftGodot\/tutorials\/SwiftGodot-Tutorials\/$volume","doc:\/\/SwiftGodot\/tutorials\/SwiftGodot-Tutorials\/Embedding-Godot-in-Swift"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftGodot\/tutorials\/SwiftGodot\/Using-Swift-Godot-Kit"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/tutorials\/swiftgodot\/using-swift-godot-kit"]}],"metadata":{"categoryPathComponent":"SwiftGodot-Tutorials","role":"project","title":"Using SwiftGodotKit","category":"SwiftGodot Tutorials"},"sections":[{"image":"RunnerHeader.png","estimatedTimeInMinutes":5,"title":"Using SwiftGodotKit","backgroundImage":"RunnerHeader.png","chapter":"Embedding Godot in Swift","content":[{"inlineContent":[{"text":"SwiftGodotKit lets you drive Godot entirely from Swift, and treat Godot as just another Swift framework you can call into.","type":"text"}],"type":"paragraph"}],"kind":"hero"},{"tasks":[{"title":"SwiftGodotKit from Xcode","stepsSection":[{"type":"step","media":"SwiftGodotKit-Xcode-1-MacOS-NewProject.png","content":[{"type":"paragraph","inlineContent":[{"text":"In Xcode, create a new project.   In our example, we are going to create a new MacOS project and make this a command line tool.   You can use other options, but this shows the most minimal project you can create.","type":"text"}]}],"caption":[],"code":null,"runtimePreview":null},{"runtimePreview":null,"caption":[],"type":"step","media":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"You will now Add a dependency on the "},{"type":"codeVoice","code":"SwiftGodotKit"},{"text":" library.","type":"text"}]}],"code":null},{"caption":[],"type":"step","content":[{"inlineContent":[{"text":"To do this, after you create your project, select your project from the navigator, and go to “Package Dependencies”.  There click the “+” button and when the package selector comes up, enter the URL for the SwiftGodotKit package: https:\/\/github.com\/migueldeicaza\/SwiftGodotKit","type":"text"}],"type":"paragraph"}],"media":"SwiftGodotKit-Xcode-2-AddPackage.png","code":null,"runtimePreview":null},{"caption":[],"media":"SwiftGodotKit-Xcode-3-AddTarget.png","code":null,"content":[{"inlineContent":[{"type":"text","text":"The SwiftGodotKit package comes with various samples, you only need the SwiftGodotKit package to be added to your project, so you can safely set all the Package Products to “None” in the “Add to Target” column"}],"type":"paragraph"}],"runtimePreview":null,"type":"step"},{"code":null,"caption":[],"content":[{"type":"paragraph","inlineContent":[{"text":"Since this contains a native library that has not been signed, go to your “Signing & Capabilities”  tab for your target, and in the “Hardened Runtime” which is checked-in by default, enable the “Disable Library Validation”.   Alternatively, you can remove the “Hardened Runtime”.","type":"text"}]}],"type":"step","media":"SwiftGodotKit-Xcode-4-HardenedRuntime.png","runtimePreview":null},{"runtimePreview":null,"caption":[],"type":"step","content":[{"type":"paragraph","inlineContent":[{"text":"Create a “Project” directory where you place your Godot-assets.   These include things like the main entry point ","type":"text"},{"type":"codeVoice","code":"project.godot"},{"type":"text","text":", your scene files, and resources that your app will use"}]}],"code":null,"media":null},{"type":"step","runtimePreview":null,"caption":[],"media":null,"code":"SwiftGodotKit-Main.swift","content":[{"inlineContent":[{"type":"text","text":"You can now enter a sample SwiftGodot project.   This needs to import both the  "},{"type":"codeVoice","code":"SwiftGodotKit"},{"type":"text","text":" API which provides one entry point: the "},{"code":"runGodot","type":"codeVoice"},{"type":"text","text":" method, and the "},{"code":"SwiftGodot","type":"codeVoice"},{"text":" API, that contains the bulk of the code.","type":"text"}],"type":"paragraph"}]}],"contentSection":[{"kind":"contentAndMedia","mediaPosition":"trailing","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"SwiftGodot provides the API bridge between the Swift world and the Godot API.   This API can be used to implement new capabilities in both Godot extensions, or to drive Godot entirely from Swift.   This tutorial covers how to drive Godot entirely from Swift, rather than how to extend Godot with Swift or implementing functionality for Godot in Swift."}]}]}],"anchor":"SwiftGodotKit-from-Xcode"}],"kind":"tasks"}],"kind":"project","references":{"doc://SwiftGodot/tutorials/SwiftGodot/Your-First-Extension#Use-the-new-player-controller":{"role":"pseudoSymbol","abstract":[{"text":"This tutorial will guide you through making your first Godot extension to create a player character. You’ll","type":"text"},{"type":"text","text":" "},{"type":"text","text":"start by building off the Simple Runner game project and create a player character to move the character along"},{"text":" ","type":"text"},{"type":"text","text":"the horizontal axis."}],"type":"section","kind":"section","title":"Use the new player controller","url":"\/tutorials\/swiftgodot\/your-first-extension#Use-the-new-player-controller","identifier":"doc:\/\/SwiftGodot\/tutorials\/SwiftGodot\/Your-First-Extension#Use-the-new-player-controller"},"doc://SwiftGodot/tutorials/SwiftGodot/Writing-Multiple-Scripts#Handle-vertical-movement":{"identifier":"doc:\/\/SwiftGodot\/tutorials\/SwiftGodot\/Writing-Multiple-Scripts#Handle-vertical-movement","abstract":[{"text":"This tutorial builds off the Simple Runner game introduced in ","type":"text"},{"identifier":"doc:\/\/SwiftGodot\/tutorials\/SwiftGodot\/Your-First-Extension","type":"reference","isActive":true},{"type":"text","text":" and will introduce you"},{"text":" ","type":"text"},{"type":"text","text":"to working with multiple scripts and interacting with Godot’s existing signals to teleport the player, creating"},{"text":" ","type":"text"},{"type":"text","text":"an infinite runner."}],"type":"section","url":"\/tutorials\/swiftgodot\/writing-multiple-scripts#Handle-vertical-movement","title":"Handle vertical movement","role":"pseudoSymbol","kind":"section"},"doc://SwiftGodot/tutorials/SwiftGodot-Tutorials":{"identifier":"doc:\/\/SwiftGodot\/tutorials\/SwiftGodot-Tutorials","abstract":[{"type":"text","text":"SwiftGodot allows developers to take new and existing Swift packages and use them as extensions for the Godot game engine."}],"type":"topic","url":"\/tutorials\/swiftgodot-tutorials","title":"Meet SwiftGodot","role":"overview","kind":"overview"},"doc://SwiftGodot/tutorials/SwiftGodot/Your-First-Extension":{"identifier":"doc:\/\/SwiftGodot\/tutorials\/SwiftGodot\/Your-First-Extension","title":"Your First Extension","kind":"project","type":"topic","abstract":[{"type":"text","text":"This tutorial will guide you through making your first Godot extension to create a player character. You’ll"},{"text":" ","type":"text"},{"type":"text","text":"start by building off the Simple Runner game project and create a player character to move the character along"},{"text":" ","type":"text"},{"type":"text","text":"the horizontal axis."}],"url":"\/tutorials\/swiftgodot\/your-first-extension","role":"project","estimatedTime":"30min"},"SwiftGodotKit-Xcode-4-HardenedRuntime.png":{"type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/SwiftGodot\/SwiftGodotKit-Xcode-4-HardenedRuntime.png"}],"alt":"Two Finder windows that show the dynamic library files being copied to the game's files.","identifier":"SwiftGodotKit-Xcode-4-HardenedRuntime.png"},"doc://SwiftGodot/tutorials/SwiftGodot/Your-First-Extension#Create-a-Swift-package":{"role":"pseudoSymbol","identifier":"doc:\/\/SwiftGodot\/tutorials\/SwiftGodot\/Your-First-Extension#Create-a-Swift-package","title":"Create a Swift package","kind":"section","url":"\/tutorials\/swiftgodot\/your-first-extension#Create-a-Swift-package","abstract":[{"type":"text","text":"This tutorial will guide you through making your first Godot extension to create a player character. You’ll"},{"type":"text","text":" "},{"text":"start by building off the Simple Runner game project and create a player character to move the character along","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the horizontal axis."}],"type":"section"},"doc://SwiftGodot/tutorials/SwiftGodot/Your-First-Extension#Set-up-the-extension":{"identifier":"doc:\/\/SwiftGodot\/tutorials\/SwiftGodot\/Your-First-Extension#Set-up-the-extension","title":"Set up the extension","kind":"section","type":"section","abstract":[{"type":"text","text":"This tutorial will guide you through making your first Godot extension to create a player character. You’ll"},{"text":" ","type":"text"},{"type":"text","text":"start by building off the Simple Runner game project and create a player character to move the character along"},{"type":"text","text":" "},{"text":"the horizontal axis.","type":"text"}],"url":"\/tutorials\/swiftgodot\/your-first-extension#Set-up-the-extension","role":"pseudoSymbol"},"doc://SwiftGodot/tutorials/SwiftGodot/Writing-Multiple-Scripts#Teleport-the-player":{"type":"section","identifier":"doc:\/\/SwiftGodot\/tutorials\/SwiftGodot\/Writing-Multiple-Scripts#Teleport-the-player","abstract":[{"type":"text","text":"This tutorial builds off the Simple Runner game introduced in "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftGodot\/tutorials\/SwiftGodot\/Your-First-Extension"},{"text":" and will introduce you","type":"text"},{"type":"text","text":" "},{"text":"to working with multiple scripts and interacting with Godot’s existing signals to teleport the player, creating","type":"text"},{"text":" ","type":"text"},{"text":"an infinite runner.","type":"text"}],"url":"\/tutorials\/swiftgodot\/writing-multiple-scripts#Teleport-the-player","role":"pseudoSymbol","title":"Teleport the player","kind":"section"},"SwiftGodotKit-Xcode-1-MacOS-NewProject.png":{"type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/SwiftGodot\/SwiftGodotKit-Xcode-1-MacOS-NewProject.png"}],"alt":"Xcode New MacOS Project dialog showing a Command Line Tool","identifier":"SwiftGodotKit-Xcode-1-MacOS-NewProject.png"},"SwiftGodotKit-Xcode-2-AddPackage.png":{"type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/SwiftGodot\/SwiftGodotKit-Xcode-2-AddPackage.png"}],"alt":"Adding the package to the project","identifier":"SwiftGodotKit-Xcode-2-AddPackage.png"},"doc://SwiftGodot/tutorials/SwiftGodot/Using-Swift-Godot-Kit#SwiftGodotKit-from-Xcode":{"role":"pseudoSymbol","identifier":"doc:\/\/SwiftGodot\/tutorials\/SwiftGodot\/Using-Swift-Godot-Kit#SwiftGodotKit-from-Xcode","title":"SwiftGodotKit from Xcode","kind":"section","url":"\/tutorials\/swiftgodot\/using-swift-godot-kit#SwiftGodotKit-from-Xcode","abstract":[{"text":"SwiftGodotKit lets you drive Godot entirely from Swift, and treat Godot as just another Swift framework you can call into.","type":"text"}],"type":"section"},"doc://SwiftGodot/tutorials/SwiftGodot/Using-Swift-Godot-Kit":{"identifier":"doc:\/\/SwiftGodot\/tutorials\/SwiftGodot\/Using-Swift-Godot-Kit","title":"Using SwiftGodotKit","kind":"project","type":"topic","abstract":[{"text":"SwiftGodotKit lets you drive Godot entirely from Swift, and treat Godot as just another Swift framework you can call into.","type":"text"}],"url":"\/tutorials\/swiftgodot\/using-swift-godot-kit","role":"project","estimatedTime":"5min"},"doc://SwiftGodot/tutorials/SwiftGodot/Your-First-Extension#Create-a-player-character":{"role":"pseudoSymbol","identifier":"doc:\/\/SwiftGodot\/tutorials\/SwiftGodot\/Your-First-Extension#Create-a-player-character","title":"Create a player character","kind":"section","url":"\/tutorials\/swiftgodot\/your-first-extension#Create-a-player-character","abstract":[{"type":"text","text":"This tutorial will guide you through making your first Godot extension to create a player character. You’ll"},{"text":" ","type":"text"},{"text":"start by building off the Simple Runner game project and create a player character to move the character along","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the horizontal axis."}],"type":"section"},"RunnerHeader.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/SwiftGodot\/RunnerHeader.png"}],"type":"image","identifier":"RunnerHeader.png","alt":"A screenshot of the Simple Runner game. The player wears a bird costume and runs alongside boxes."},"SwiftGodotKit-Main.swift":{"syntax":"swift","fileType":"swift","identifier":"SwiftGodotKit-Main.swift","fileName":"SwiftGodotKit-Main.swift","content":["\/\/","\/\/  main.swift","\/\/  SimpleGodotApp","\/\/","\/\/  Created by Miguel de Icaza on 9\/6\/23.","\/\/","","import Foundation","import SwiftGodotKit","import SwiftGodot","","func loadScene (scene: SceneTree) {","    let rootNode = Node3D()","    let camera = Camera3D ()","    camera.current = true","    camera.position = Vector3(x: 0, y: 0, z: 2)","    ","    rootNode.addChild(node: camera)","    ","    func makeCuteNode (_ pos: Vector3) -> Node {","        let n = SpinningCube()","        n.position = pos","        return n","    }","    rootNode.addChild(node: makeCuteNode(Vector3(x: 1, y: 1, z: 1)))","    rootNode.addChild(node: makeCuteNode(Vector3(x: -1, y: -1, z: -1)))","    rootNode.addChild(node: makeCuteNode(Vector3(x: 0, y: 1, z: 1)))","    scene.root?.addChild(node: rootNode)","}","","@Godot","class SpinningCube: Node3D {","    override func _ready () {","        let meshRender = MeshInstance3D()","        meshRender.mesh = BoxMesh()","        addChild(node: meshRender)","    }   ","","    override func _input (event: InputEvent) {","        guard event.isPressed () && !event.isEcho () else { return }","        print (\"SpinningCube: event: isPressed \")","    }","    ","    public override func _process(delta: Double) {","        rotateY(angle: delta)","    }","}","","func registerTypes (level: GDExtension.InitializationLevel) {","    switch level {","    case .scene:","        register (type: SpinningCube.self)","    default:","        break","    }","}","","guard let projectPath = Bundle.main.path(forResource: \"Project\", ofType: nil) else {","    fatalError(\"Could not load resource path\")","}","","runGodot(args: [\"--path\", projectPath], initHook: registerTypes, loadScene: loadScene, loadProjectSettings: { settings in })"],"type":"file","highlights":[]},"doc://SwiftGodot/tutorials/SwiftGodot/Writing-Multiple-Scripts#Using-the-new-main-level-node":{"identifier":"doc:\/\/SwiftGodot\/tutorials\/SwiftGodot\/Writing-Multiple-Scripts#Using-the-new-main-level-node","abstract":[{"type":"text","text":"This tutorial builds off the Simple Runner game introduced in "},{"identifier":"doc:\/\/SwiftGodot\/tutorials\/SwiftGodot\/Your-First-Extension","type":"reference","isActive":true},{"text":" and will introduce you","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to working with multiple scripts and interacting with Godot’s existing signals to teleport the player, creating"},{"text":" ","type":"text"},{"type":"text","text":"an infinite runner."}],"type":"section","url":"\/tutorials\/swiftgodot\/writing-multiple-scripts#Using-the-new-main-level-node","title":"Using the new main level node","role":"pseudoSymbol","kind":"section"},"SwiftGodotKit-Xcode-3-AddTarget.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/SwiftGodot\/SwiftGodotKit-Xcode-3-AddTarget.png"}],"type":"image","identifier":"SwiftGodotKit-Xcode-3-AddTarget.png","alt":"Dialog showing which package products are available from SwiftGodotKit"},"doc://SwiftGodot/tutorials/SwiftGodot-Tutorials/Embedding-Godot-in-Swift":{"identifier":"doc:\/\/SwiftGodot\/tutorials\/SwiftGodot-Tutorials\/Embedding-Godot-in-Swift","abstract":[],"type":"topic","url":"\/tutorials\/swiftgodot-tutorials\/embedding-godot-in-swift","title":"Embedding Godot in Swift","role":"article","kind":"article"},"doc://SwiftGodot/tutorials/SwiftGodot-Tutorials/SwiftGodot-Essentials":{"type":"topic","identifier":"doc:\/\/SwiftGodot\/tutorials\/SwiftGodot-Tutorials\/SwiftGodot-Essentials","abstract":[],"url":"\/tutorials\/swiftgodot-tutorials\/swiftgodot-essentials","role":"article","title":"SwiftGodot Essentials","kind":"article"},"doc://SwiftGodot/tutorials/SwiftGodot/Writing-Multiple-Scripts":{"role":"project","identifier":"doc:\/\/SwiftGodot\/tutorials\/SwiftGodot\/Writing-Multiple-Scripts","title":"Writing Multiple Scripts","kind":"project","url":"\/tutorials\/swiftgodot\/writing-multiple-scripts","abstract":[{"type":"text","text":"This tutorial builds off the Simple Runner game introduced in "},{"isActive":true,"identifier":"doc:\/\/SwiftGodot\/tutorials\/SwiftGodot\/Your-First-Extension","type":"reference"},{"type":"text","text":" and will introduce you"},{"type":"text","text":" "},{"text":"to working with multiple scripts and interacting with Godot’s existing signals to teleport the player, creating","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"an infinite runner."}],"type":"topic","estimatedTime":"15min"}}}